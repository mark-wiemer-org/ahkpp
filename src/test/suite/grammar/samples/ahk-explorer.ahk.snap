>; From https://github.com/FuPeiJiang/ahk_explorer/blob/tests/ahk_explorer.ahk
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Copyright 2021 FuPeiJiang, used with permission
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; https://github.com/mark-wiemer/vscode-autohotkey-plus-plus/pull/32#issuecomment-770233225
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>#NoEnv ; Recommended for performance and compatibility with future AutoHotkey releases.
#^^^^^^ source.ahk keyword.control.directives.ahk
#      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk keyword.control.directives.ahk comment.line.semicolon.directive.ahk
>#SingleInstance, force
#^^^^^^^^^^^^^^^ source.ahk keyword.control.directives.ahk
#               ^^^^^^^^ source.ahk keyword.control.directives.ahk string.parameter.directives.ahk
>SendMode Input ; Recommended for new scripts due to its superior speed and reliability.
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk support.function.ahk
#              ^ source.ahk comment.line.semicolon.ahk
#               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>SetWorkingDir %A_ScriptDir% ; Ensures a consistent starting directory.
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^^^ source.ahk constant.language.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk comment.line.semicolon.ahk
#                            ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>SetBatchLines, -1
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
>#KeyHistory 0
#^^^^^^^^^^^ source.ahk keyword.control.directives.ahk
#           ^^^ source.ahk keyword.control.directives.ahk string.parameter.directives.ahk
>ListLines Off
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk
#          ^^^ source.ahk keyword.other.ahk
>
>SetWinDelay, -1
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk keyword.operator.arithmetic.ahk
#              ^ source.ahk constant.numeric.ahk
>SetControlDelay, -1
#^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk constant.numeric.ahk
>
>#MaxThreads, 20
#^^^^^^^^^^^ source.ahk keyword.control.directives.ahk
#           ^^^^^ source.ahk keyword.control.directives.ahk string.parameter.directives.ahk
>#MaxThreadsPerHotkey, 4
#^^^^^^^^^^^^^^^^^^^^ source.ahk keyword.control.directives.ahk
#                    ^^^^ source.ahk keyword.control.directives.ahk string.parameter.directives.ahk
>SetTitleMatchMode, 2
#^^^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk constant.numeric.ahk
>
>currentDirSearch=
#^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk keyword.operator.assignment.ahk
>;%appdata%\ahk_explorer_settings
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>FileRead, favoriteFolders, %A_AppData%\ahk_explorer_settings\favoriteFolders.txt
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^ source.ahk constant.language.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                            ^ source.ahk
#                                                                             ^^^ source.ahk variable.def.ahk
>favoriteFolders:=StrSplit(favoriteFolders,"`n","`r")
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                ^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>loadSettings()
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk punctuation.bracket.ahk
>;gsettings
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>FOLDERID_Downloads := "{374DE290-123F-4565-9164-39C4925E467B}"
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>RegRead, v, HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders, % FOLDERID_Downloads
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk
#                 ^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk
#                                            ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk
#                                                           ^^^^^^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk
#                                                                    ^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^^^^^ source.ahk variable.def.ahk
#                                                                              ^ source.ahk
#                                                                               ^^^^^^^ source.ahk variable.def.ahk
#                                                                                      ^ source.ahk punctuation.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                         ^ source.ahk
#                                                                                          ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>VarSetCapacity(downloads, (261 + !A_IsUnicode) << !!A_IsUnicode)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^^^ source.ahk constant.numeric.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                ^ source.ahk
#                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                  ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk keyword.operator.comparison.ahk
#                                                ^ source.ahk keyword.operator.comparison.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                    ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
>DllCall("ExpandEnvironmentStrings", Str, v, Str, downloads, UInt, 260)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk
#                                            ^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^^^ source.ahk constant.numeric.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
>EcurrentDir1:=downloads
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
>; EcurrentDir1=C:\Users\Public\AHK\notes\tests
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; EcurrentDir1=C:\Users\Public\AHK\notes\tests\File Watcher
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; EcurrentDir2=C:\Users\Public\AHK
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; EcurrentDir1=C:\Users\Public\AHK\notes\tests\New Folder
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>EcurrentDir2=C:\Users\Public\AHK\notes\tests\New Folder 3
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^^^ source.ahk variable.def.ahk
#                                ^ source.ahk
#                                 ^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^^^ source.ahk keyword.keys.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk constant.numeric.ahk
>whichSide:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>
>lastDir1:="C:"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#           ^^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>
>for n, param in A_Args ; For each parameter:
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^ source.ahk keyword.other.ahk
#               ^ source.ahk
#                ^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk comment.line.semicolon.ahk
#                       ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                        ^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>fileExist:=fileExist(param)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (fileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>if (InStr(fileExist, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=param
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^ source.ahk variable.def.ahk
>
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SplitPath, param, OutFileName, OutDir
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^^^^ source.ahk variable.def.ahk
>EcurrentDir%whichSide%:=OutDir
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^ source.ahk variable.def.ahk
>toFocus:=OutFileName
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk variable.def.ahk
>;select file
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>p("the folder or file you are trying to open doesn't exist`nyou were trying to open:`n" param)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^^^^^ source.ahk variable.def.ahk
#                                                                                             ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>;vars
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^ source.ahk comment.line.semicolon.ahk
>watching1:=["control"]
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>watching2:=["control"]
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>maxRows:=50
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^ source.ahk constant.numeric.ahk
>rememberIconNumber:=0
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk constant.numeric.ahk
>lastInputSearchCurrentDir:=false
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^^ source.ahk keyword.operator.assignment.ahk
#                           ^^^^^ source.ahk constant.language.ahk
>dirHistory1:=[]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
>dirHistory2:=[]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
>undoHistory1:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>undoHistory2:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>global DROPEFFECT_NONE	:= 0
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
>global DROPEFFECT_COPY	:= 1
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
>global DROPEFFECT_MOVE	:= 2
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
>global DROPEFFECT_LINK	:= 4
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
>calculatefileSizes:=1
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk constant.numeric.ahk
>calculateDates:=1
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk constant.numeric.ahk
>doIcons:=1
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>global dropEffectFormat := DllCall("RegisterClipboardFormat", "Str", CFSTR_PREFERREDDROPEFFECT := "Preferred DropEffect", "UInt")
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk
#                           ^^^^^^^ source.ahk support.function.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                            ^ source.ahk punctuation.ahk
#                                                             ^ source.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                               ^^^ source.ahk string.quoted.double.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk
#                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                              ^ source.ahk
#                                                                                               ^^ source.ahk keyword.operator.assignment.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                   ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                                         ^ source.ahk
#                                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                           ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                ^ source.ahk punctuation.bracket.ahk
>
>Gui, main:New, +hwndthisHwnd
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^ source.ahk keyword.keys.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^^^^^^^^^^^^ source.ahk variable.def.ahk
>thisUniqueWintitle:="ahk_id " thisHwnd
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk
#                              ^^^^^^^^ source.ahk variable.def.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui,Font, s10, Segoe UI
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^ source.ahk variable.def.ahk
>
>Gui, +LastFound
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^^^^^^^^^ source.ahk keyword.other.ahk
>hw_gui := WinExist()
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>
>Gui, Margin, 0, 0
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk keyword.other.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk constant.numeric.ahk
>
>folderListViewWidth:=250
#^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^^^ source.ahk constant.numeric.ahk
>favoritesListViewWidth:=130
#^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^ source.ahk constant.numeric.ahk
>
>listViewWidth:=500
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^ source.ahk constant.numeric.ahk
>favoritesLenght:=favoriteFolders.Length()
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk
#                                 ^^^^^^ source.ahk support.function.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>
>Gui, Add, Button, w%favoritesListViewWidth% ggsettings y212,settings
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^ source.ahk
#                                            ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk
#                                                       ^^^^ source.ahk variable.def.ahk
#                                                           ^ source.ahk punctuation.ahk
#                                                            ^^^^^^^^ source.ahk variable.def.ahk
>Gui, Add, ListView, r%favoritesLenght% w%favoritesListViewWidth% x0 y+0 nosort vfavoritesListView ggfavoritesListView AltSubmit ,Favorites
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                         ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                ^ source.ahk
#                                                                 ^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                      ^ source.ahk constant.numeric.ahk
#                                                                       ^ source.ahk
#                                                                        ^^^^^^ source.ahk keyword.other.ahk
#                                                                              ^ source.ahk
#                                                                               ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                     ^ source.ahk
#                                                                                                                      ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                                               ^ source.ahk
#                                                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                                                 ^^^^^^^^^ source.ahk variable.def.ahk
>
>Gui, Add, ListView, r10 w%folderListViewWidth% y0 x+0 vfolderListView1_1 gfolderlistViewEvents1_1 AltSubmit ,Name
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk variable.def.ahk
#                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                    ^ source.ahk constant.numeric.ahk
#                                                     ^ source.ahk
#                                                      ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                             ^^^^ source.ahk variable.def.ahk
>Gui, Add, ListView, r10 w%folderListViewWidth% x+0 y0 vfolderlistView2_1 gfolderlistViewEvents2_1 AltSubmit ,Name
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk variable.def.ahk
#                                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                                 ^ source.ahk constant.numeric.ahk
#                                                  ^ source.ahk
#                                                   ^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk
#                                                      ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                             ^^^^ source.ahk variable.def.ahk
>
>Gui, Add, Edit, hwndEdithwnd1 r1 w%listViewWidth% y+0 x+-500 vvcurrentDirEdit1 gcurrentDirEdit1Changed, %EcurrentDir1%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^^ source.ahk variable.def.ahk
#                                ^ source.ahk
#                                 ^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk variable.def.ahk
#                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                    ^ source.ahk constant.numeric.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk variable.def.ahk
#                                                       ^ source.ahk keyword.operator.arithmetic.ahk
#                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                         ^^^ source.ahk constant.numeric.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                              ^ source.ahk
#                                                                               ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                       ^ source.ahk
#                                                                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
>
>Gui, Add, ListView, NoSort HwndListviewHwnd1 Count5000 r25 -WantF2 w%listViewWidth% -ReadOnly vvlistView1 glistViewEvents1 AltSubmit ,type|Name|Date|sortableDate|Size|sortableSize
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^^^^ source.ahk keyword.other.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk
#                                                       ^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk keyword.operator.arithmetic.ahk
#                                                            ^^^^^^ source.ahk keyword.other.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                   ^ source.ahk
#                                                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                     ^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                             ^ source.ahk
#                                                                                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                         ^ source.ahk
#                                                                                                          ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                          ^ source.ahk
#                                                                                                                           ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                                                    ^ source.ahk
#                                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                                      ^^^^ source.ahk keyword.other.ahk
#                                                                                                                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                           ^^^^ source.ahk variable.def.ahk
#                                                                                                                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                ^^^^ source.ahk keyword.other.ahk
#                                                                                                                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                                  ^^^^ source.ahk variable.def.ahk
#                                                                                                                                                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                                       ^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>Gui, Add, ListView, r10 w%folderListViewWidth% y0 x+0 vfolderListView1_2 gfolderlistViewEvents1_2 AltSubmit ,Name
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk variable.def.ahk
#                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                    ^ source.ahk constant.numeric.ahk
#                                                     ^ source.ahk
#                                                      ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                             ^^^^ source.ahk variable.def.ahk
>Gui, Add, ListView, r10 w%folderListViewWidth% x+0 y0 vfolderlistView2_2 gfolderlistViewEvents2_2 AltSubmit ,Name
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk variable.def.ahk
#                                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                                 ^ source.ahk constant.numeric.ahk
#                                                  ^ source.ahk
#                                                   ^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk
#                                                      ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                             ^^^^ source.ahk variable.def.ahk
>Gui, Add, Edit, hwndEdithwnd2 r1 w%listViewWidth% y+0 x+-500 vvcurrentDirEdit2 gcurrentDirEdit2Changed, %EcurrentDir2%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^^ source.ahk variable.def.ahk
#                                ^ source.ahk
#                                 ^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk variable.def.ahk
#                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                    ^ source.ahk constant.numeric.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk variable.def.ahk
#                                                       ^ source.ahk keyword.operator.arithmetic.ahk
#                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                         ^^^ source.ahk constant.numeric.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                              ^ source.ahk
#                                                                               ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                       ^ source.ahk
#                                                                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
>Gui, Add, ListView, NoSort HwndListviewHwnd2 Count5000 r25 -WantF2 w%listViewWidth% -ReadOnly vvlistView2 glistViewEvents2 AltSubmit ,type|Name|Date|sortableDate|Size|sortableSize
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^^^^ source.ahk keyword.other.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk
#                                                       ^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk keyword.operator.arithmetic.ahk
#                                                            ^^^^^^ source.ahk keyword.other.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                   ^ source.ahk
#                                                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                     ^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                             ^ source.ahk
#                                                                                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                         ^ source.ahk
#                                                                                                          ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                          ^ source.ahk
#                                                                                                                           ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                                                    ^ source.ahk
#                                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                                      ^^^^ source.ahk keyword.other.ahk
#                                                                                                                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                           ^^^^ source.ahk variable.def.ahk
#                                                                                                                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                ^^^^ source.ahk keyword.other.ahk
#                                                                                                                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                                  ^^^^ source.ahk variable.def.ahk
#                                                                                                                                                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                                                                                       ^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>OnMessage(0x4A, "WM_COPYDATA_READ")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>
>OnMessage(0x111, "HandleMessage" )
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^ source.ahk constant.numeric.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>loop 2 {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk constant.numeric.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Gui, ListView, vlistView%A_Index%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^ source.ahk constant.language.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_Colors.OnMessage()
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>LV_Colors.Attach(ListviewHwnd%A_Index%, 1, 0)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                              ^^^^^^^ source.ahk constant.language.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk constant.numeric.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk constant.numeric.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>
>LV_ModifyCol(1,20)
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(2,300)
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^^^ source.ahk constant.numeric.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(3,"50 Right")
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(5,"80 Right")
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>
>LV_ModifyCol(2, "Logical")
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(6,"Integer")
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>
>LV_ModifyCol(4,0) ; hides 3rd row
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk comment.line.semicolon.ahk
#                  ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                   ^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>LV_ModifyCol(6,0) ; hides 3rd row
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk comment.line.semicolon.ahk
#                  ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                   ^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>focused=flistView
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
>ImageListID%A_Index% := IL_Create(50)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^ source.ahk constant.language.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^ source.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^^^^^^^^^ source.ahk support.function.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>LV_SetImageList(ImageListID%A_Index%) ;desactivated this to test
#^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^ source.ahk constant.language.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk comment.line.semicolon.ahk
#                                      ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>Gui, Show,,ahk_explorer
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk punctuation.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
>Gui, ListView, favoritesListView
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>favoriteFoldersNames:=[]
#^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>for k, v in favoriteFolders {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>SplitPath, v, OutFileName
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^ source.ahk variable.def.ahk
>favoriteFoldersNames.Push(OutFileName)
#^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>LV_Add(, OutFileName)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>run, "lib\FolderWatcher2.ahk",,,PID_FolderWatcher2
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#      ^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>IServiceProvider := ComObjCreate("{C2F03A33-21F5-47FA-B4BB-156362A2F239}", "{6D5140C1-7436-11CE-8034-00AA006009FA}")
#^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^^^ source.ahk support.function.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                   ^ source.ahk punctuation.bracket.ahk
>IVirtualDesktopManagerInternal := ComObjQuery(IServiceProvider, "{C5E0CDCA-7B6E-41B2-9FC4-D93975CC467B}", "{F31574D6-B682-4CDC-BD56-1827860ABEC6}")
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^^ source.ahk keyword.operator.assignment.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^ source.ahk support.function.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.ahk
#                                                               ^ source.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                         ^ source.ahk
#                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                  ^ source.ahk punctuation.bracket.ahk
>MoveViewToDesktop := vtable(IVirtualDesktopManagerInternal, 4) ; void MoveViewToDesktop(object pView, IVirtualDesktop desktop);
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk
#                     ^^^^^^ source.ahk entity.name.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk constant.numeric.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
#                                                              ^ source.ahk comment.line.semicolon.ahk
#                                                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>GetCurrentDesktop := vtable(IVirtualDesktopManagerInternal, 6) ; IVirtualDesktop GetCurrentDesktop();
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk
#                     ^^^^^^ source.ahk entity.name.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk constant.numeric.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
#                                                              ^ source.ahk comment.line.semicolon.ahk
#                                                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ImmersiveShell := ComObjCreate("{C2F03A33-21F5-47FA-B4BB-156362A2F239}", "{00000000-0000-0000-C000-000000000046}")
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^ source.ahk support.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                       ^ source.ahk punctuation.ahk
#                                                                        ^ source.ahk
#                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                 ^ source.ahk punctuation.bracket.ahk
>
>if !(IApplicationViewCollection := ComObjQuery(ImmersiveShell,"{1841C6D7-4F9D-42C0-AF41-8747538F10E5}","{1841C6D7-4F9D-42C0-AF41-8747538F10E5}" ) ) ; 1607-1809
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk
#                                ^^ source.ahk keyword.operator.assignment.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^^^ source.ahk support.function.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                             ^ source.ahk punctuation.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                               ^ source.ahk
#                                                                                                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                                                                                                 ^ source.ahk
#                                                                                                                                                  ^ source.ahk punctuation.bracket.ahk
#                                                                                                                                                   ^ source.ahk comment.line.semicolon.ahk
#                                                                                                                                                    ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                                                                                                     ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>MsgBox IApplicationViewCollection interface not supported.
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk
#                                            ^^^ source.ahk keyword.other.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^^ source.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>GetViewForHwnd							:= vtable(IApplicationViewCollection, 6) ; (IntPtr hwnd, out IApplicationView view);
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^^^^^^ source.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^^^^^^ source.ahk entity.name.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk constant.numeric.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
#                                                             ^ source.ahk comment.line.semicolon.ahk
#                                                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>; f3::
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^ source.ahk comment.line.semicolon.ahk
>Process, Close, %PID_getFolderSizes%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>Exitapp
#^^^^^^^ source.ahk keyword.control.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>;labels
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^ source.ahk comment.line.semicolon.ahk
>gsaveSettings:
#^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>gui, settingsGui:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.ahk
#                 ^^^^^^^ source.ahk keyword.other.ahk
>gui, submit
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk keyword.other.ahk
>FileRecycle, %A_AppData%\ahk_explorer_settings\settings.txt
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk constant.language.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk
#                                                        ^^^ source.ahk variable.def.ahk
>FileAppend, %vsettings%, *%A_AppData%\ahk_explorer_settings\settings.txt
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk constant.language.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                           ^ source.ahk
#                                                            ^^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk
#                                                                     ^^^ source.ahk variable.def.ahk
>loadSettings()
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>gsettings:
#^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui, settingsGui:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.ahk
#                 ^^^^^^^ source.ahk keyword.other.ahk
>FileRead, settingsTxt, %A_AppData%\ahk_explorer_settings\settings.txt
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk constant.language.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^^^^ source.ahk variable.def.ahk
#                                                                 ^ source.ahk
#                                                                  ^^^ source.ahk variable.def.ahk
>if (!settingsGuiCreated)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>settingsGuiCreated:=true
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^^^^ source.ahk constant.language.ahk
>editSize:=[1000, 200]
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^ source.ahk constant.numeric.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>textSize:=[190, editSize[2]]
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>editPos:=[textSize[1]+30, 50]
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^ source.ahk constant.numeric.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>textPos:=[10, ZTrim(editPos[2]+1.5) ]
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^^^^^ source.ahk entity.name.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk keyword.operator.arithmetic.ahk
#                               ^^^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>guiSize:=[editSize[1]+textSize[1]+20, editPos[2]+editSize[2]+10]
#^^^^^^^ source.ahk keyword.other.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk constant.numeric.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                  ^^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk constant.numeric.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                                 ^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.bracket.ahk
#                                                          ^ source.ahk constant.numeric.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk keyword.operator.arithmetic.ahk
#                                                             ^^ source.ahk constant.numeric.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
>guiPos:=[A_ScreenWidth/2-guiSize[1]/2,A_ScreenHeight/2-guiSize[2]/2]
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                     ^ source.ahk constant.numeric.ahk
#                                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                                       ^^^^^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
#                                                               ^ source.ahk constant.numeric.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                  ^ source.ahk constant.numeric.ahk
#                                                                   ^ source.ahk punctuation.bracket.ahk
>Gui,Font,s12 w500 q5, Consolas
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^^^^^^ source.ahk variable.def.ahk
>
>Gui, add, button, ggsaveSettings,Save Settings
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^^ source.ahk variable.def.ahk
>Gui,add,Text, % "x" textPos[1] " y" textPos[2] " w" textSize[1] " h" textSize[2], peazipPath`nvscodePath`nBGColorOfSelectedPane`nAhk2ExePath`nspekPath
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^ source.ahk keyword.other.ahk
#       ^ source.ahk punctuation.ahk
#        ^^^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk
#                    ^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk constant.numeric.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                ^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
#                                                             ^ source.ahk constant.numeric.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
#                                                               ^ source.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                 ^^ source.ahk string.quoted.double.ahk
#                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                    ^ source.ahk
#                                                                     ^^^^^^^^ source.ahk variable.def.ahk
#                                                                             ^ source.ahk punctuation.bracket.ahk
#                                                                              ^ source.ahk constant.numeric.ahk
#                                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                            ^ source.ahk punctuation.ahk
#                                                                                             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                         ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                                                ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                                                             ^^^^^^^^^ source.ahk variable.def.ahk
>Gui,add,Edit, % "x" editPos[1] " y" editPos[2] " w" editSize[1] " h" editSize[2] " vvsettings -wrap",%settingsTxt%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^ source.ahk keyword.other.ahk
#       ^ source.ahk punctuation.ahk
#        ^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk
#                    ^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk constant.numeric.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                ^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
#                                                             ^ source.ahk constant.numeric.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
#                                                               ^ source.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                 ^^ source.ahk string.quoted.double.ahk
#                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                    ^ source.ahk
#                                                                     ^^^^^^^^ source.ahk variable.def.ahk
#                                                                             ^ source.ahk punctuation.bracket.ahk
#                                                                              ^ source.ahk constant.numeric.ahk
#                                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                                ^ source.ahk
#                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                  ^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                                      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Guicontrol, text, vsettings,%settingsTxt%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Gui,show, % "x" guiPos[1] " y" guiPos[2] " w" guiSize[1] " h" guiSize[2] ,set_settings_GUI
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^ source.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^ source.ahk string.quoted.double.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk
#                ^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                           ^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk
#                               ^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
#                                                      ^ source.ahk constant.numeric.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
#                                                        ^ source.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                          ^^ source.ahk string.quoted.double.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                             ^ source.ahk
#                                                              ^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
#                                                                      ^ source.ahk constant.numeric.ahk
#                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                        ^ source.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>gChangeDrive:
#^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>index:=SubStr(A_GuiControl, 0)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=drives[index] ":"
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>multiRenameGuiGuiClose:
#^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui, Destroy
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^ source.ahk keyword.other.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>gmultiRenameApply:
#^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>multiRenameNames:=getMultiRenameNames()
#^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>multiRenameNamesBak:=multiRenameNames.Clone()
#^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk
#                                      ^^^^^ source.ahk support.function.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>namesToMultiRenameBak:=namesToMultiRename.Clone()
#^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk
#                                          ^^^^^ source.ahk support.function.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>
>for k, v in multiRenameNamesBak {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>toRenamePath := multiRenameDir "\" namesToMultiRenameBak[k]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
#                                                         ^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
>renamedPath := multiRenameDir "\" v
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk variable.def.ahk
>
>renamedPathExists:=fileExist(renamedPath)
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>if (renamedPathExists) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>p("name already taken", renamedPathExists)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>toRenameExists:=fileExist(toRenamePath)
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>if (toRenameExists) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>if (InStr(toRenameExists, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                           ^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>FileMoveDir, %toRenamePath%, %renamedPath%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>FileMove, %toRenamePath%, %renamedPath%
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if ErrorLevel {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^^ source.ahk constant.language.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>p("file", toRenamePath "could not be renamed to", renamedPath)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^ source.ahk string.quoted.double.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>namesToMultiRename.RemoveAt(1)
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^^^^^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>multiRenameNames.RemoveAt(1)
#^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk constant.numeric.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>p("file to rename:", toRenamePath, "doesn't exist anymore")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>multiRenamelength:=namesToMultiRename.Length()
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk
#                                      ^^^^^^ source.ahk support.function.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>if (multiRenamelength) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>Guicontrol, text, vmultiRenameTargets, % "|" array_ToVerticleBarString(namesToMultiRename)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                      ^ source.ahk punctuation.bracket.ahk
#                                                                       ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                         ^ source.ahk punctuation.bracket.ahk
>Guicontrol, text, vmultiRenamePreview, % "|" array_ToVerticleBarString(multiRenameNames)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                      ^ source.ahk punctuation.bracket.ahk
#                                                                       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Gui, Destroy
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^ source.ahk keyword.other.ahk
>setWhichSideFromDir(multiRenameDir)
#^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>renderCurrentDir() ;refresh
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk comment.line.semicolon.ahk
#                   ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                    ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>gmultiRenamePreview:
#^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Guicontrol, text, vmultiRenamePreview, % "|" array_ToVerticleBarString(getMultiRenameNames())
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                      ^ source.ahk punctuation.bracket.ahk
#                                                                       ^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                                          ^ source.ahk punctuation.bracket.ahk
#                                                                                           ^ source.ahk punctuation.bracket.ahk
#                                                                                            ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>RemoveToolTip:
#^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>ToolTip
#^^^^^^^ source.ahk support.function.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>TypingInRenameSimple:
#^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui,Submit,NoHide
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^^^ source.ahk keyword.other.ahk
#          ^ source.ahk punctuation.ahk
#           ^^^^^^ source.ahk keyword.other.ahk
>
>Size:=10
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^ source.ahk constant.numeric.ahk
>Gui,Fake:Font,s%Size%,Segoe UI
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^^ source.ahk variable.def.ahk
>Gui,Fake:Add,Text, -Wrap vDummy,% RenamingSimple
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^^^^ source.ahk keyword.other.ahk
#                        ^ source.ahk
#                         ^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControlGet,Pos,Fake:Pos,Dummy
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^^^ source.ahk keyword.other.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^^^ source.ahk variable.def.ahk
>Gui,Fake:Destroy
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^^^^ source.ahk keyword.other.ahk
>
>if (posw+ 2 * Size>renameTextWidthLimit) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
#         ^ source.ahk
#          ^ source.ahk constant.numeric.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk
#              ^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.comparison.ahk
#                   ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>renameTextWidthLimit:=(posw+ 2 * Size) + (8 * Size)
#^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^ source.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                ^ source.ahk
#                                 ^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk keyword.operator.arithmetic.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk keyword.operator.arithmetic.ahk
#                                             ^ source.ahk
#                                              ^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>width:=renameTextWidthLimit
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl Move,RenamingSimple, W%width%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk
#           ^^^^ source.ahk keyword.other.ahk
#               ^ source.ahk punctuation.ahk
#                ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
>Guiwidth:=width+2
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
>Gui, Show, W%Guiwidth%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (!firstRename) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>firstRename:=true
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^ source.ahk constant.language.ahk
>SplitPath, TextBeingRenamed,, , , OutNameNoExt
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
>SendMessage,0xB1, 0, 0, , ahk_id %RenameHwnd%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^ source.ahk keyword.other.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
>fileExist:=fileExist(EcurrentDir%whichSide% "\" TextBeingRenamed)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                             ^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
>if (InStr(fileExist, "D"))
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>SendMessage, 0xB1,0,% StrLen(TextBeingRenamed),, ahk_id %RenameHwnd% ;select all
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^ source.ahk keyword.other.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                         ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                    ^ source.ahk comment.line.semicolon.ahk
#                                                                     ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                      ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>SendMessage, 0xB1,0,% StrLen(OutNameNoExt),, ahk_id %RenameHwnd%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^^^^^^ source.ahk keyword.other.ahk
#                                                   ^ source.ahk
#                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                               ^ source.ahk punctuation.definition.variable.percent.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>ControlGet, Outvar ,CurrentCol,, Edit1
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^^^^^ source.ahk variable.def.ahk
>Outvar -=1
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>Postmessage,0xB1, 0, 0, Edit1 ;move caret to front to pan
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk comment.line.semicolon.ahk
#                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Postmessage,0xB1,%Outvar%,%Outvar%, Edit1 ;move caret back to end
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk comment.line.semicolon.ahk
#                                          ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                           ^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>;renameLabel
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>grenameFileLabel:
#^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>fromButton:=true
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^ source.ahk constant.language.ahk
>renameFileLabel:
#^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>if (canRename) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>gui, renameSimple:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>gui, submit
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk keyword.other.ahk
>gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>noRenameError:=true
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^ source.ahk constant.language.ahk
>
>if not(TextBeingRenamed==RenamingSimple) { ;Case Sensitive
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^ source.ahk entity.name.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk keyword.operator.assignment.ahk
#                         ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk comment.line.semicolon.ahk
#                                           ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                            ^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (stuffByName[RenamingSimple].Count()) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk
#                                ^^^^^ source.ahk support.function.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>noRenameError:=false
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^ source.ahk constant.language.ahk
>p("file with same name")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SourcePath:=EcurrentDir%whichSide% "\" TextBeingRenamed
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>fileExist:=FileExist(SourcePath)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>if (fileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>DestPath:=EcurrentDir%whichSide% "\" RenamingSimple
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>if (TextBeingRenamed=RenamingSimple) { ;only different capitalization
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk keyword.operator.assignment.ahk
#                     ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk comment.line.semicolon.ahk
#                                       ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>randomPath:=generateRandomUniqueName(SourcePath,isDir)
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>
>if (isDir) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.bracket.ahk
>FileMoveDir, %SourcePath%, %randomPath%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>FileMove, %SourcePath%, %randomPath%
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if ErrorLevel {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^^ source.ahk constant.language.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>noRenameError:=false
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^ source.ahk constant.language.ahk
>p("file could not be renamed:illegal name or file in use")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>
>SourcePath:=randomPath
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (InStr(fileExist, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>FileMoveDir, %SourcePath%, %DestPath%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>; p("FileMove")
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>FileMove, %SourcePath%, %DestPath%
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if ErrorLevel {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^^ source.ahk constant.language.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>noRenameError:=false
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^ source.ahk constant.language.ahk
>p("file could not be renamed:illegal name or file in use")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (noRenameError)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>canRename:=false
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^ source.ahk constant.language.ahk
>gui, renameSimple:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>gui, destroy
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^ source.ahk keyword.other.ahk
>
>gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>if (fromButton) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>
>gui, show
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
>
>gui, renameSimple:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>gui, show,,renamingWinTitle
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk punctuation.ahk
#           ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>fromButton:=false
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>mainGuiClose:
#^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>if GetKeyState("Shift") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>Process, Close, %PID_getFolderSizes%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>Process, Close, %PID_FolderWatcher2%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>Exitapp
#^^^^^^^ source.ahk keyword.control.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Process, Close, %PID_getFolderSizes%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>windowHidden:=true
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^ source.ahk constant.language.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, hide
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>couldNotCreateFolder()
#^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, createFolder:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>creatingNewFolder:=true
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^ source.ahk constant.language.ahk
>dontSearch:=true
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^ source.ahk constant.language.ahk
>ControlSetText,, %createFolderName%, ahk_id %folderCreationHwnd%
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^^^^^^ source.ahk keyword.other.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                               ^ source.ahk punctuation.definition.variable.percent.ahk
>SendMessage, 0xB1, 0, -1,, % "ahk_id " folderCreationHwnd
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^^^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>gui, createFolder: show,, create_folder
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>dontSearch:=false
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>;new folder
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;create folder
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>createLabel:
#^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>gui, createFolder: submit
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk keyword.other.ahk
>toCreate:=EcurrentDir%whichSide% "\" createFolderName
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>if (!fileExist(toCreate)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>FileCreateDir, %toCreate%
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
>if (ErrorLevel) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>SoundPlay, *16
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^^ source.ahk constant.numeric.ahk
>p("Could not create Folder, illegal name or idk")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>couldNotCreateFolder()
#^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SoundPlay, *16
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^^ source.ahk constant.numeric.ahk
>p("folder already exists")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>couldNotCreateFolder()
#^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>createAndOpenLabel:
#^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>gui, createFolder: submit
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk keyword.other.ahk
>toCreate:=EcurrentDir%whichSide% "\" createFolderName
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>if (!fileExist(toCreate)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>FileCreateDir, %toCreate%
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
>if (ErrorLevel) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>SoundPlay, *16
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^^ source.ahk constant.numeric.ahk
>p("Could not create Folder, illegal name or idk")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>couldNotCreateFolder()
#^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=toCreate
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^ source.ahk variable.def.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SoundPlay, *16
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^^ source.ahk constant.numeric.ahk
>p("folder already exists")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>couldNotCreateFolder()
#^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>gfavoritesListView:
#^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>if (A_GuiEvent = "DoubleClick") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>Gui, ListView, favoritesListView
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>doubleClickedFolderOrFile(favoriteFolders[A_EventInfo])
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>} else if (A_GuiEvent="ColClick") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^ source.ahk constant.language.ahk
#                     ^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>path=%A_AppData%\ahk_explorer_settings\favoriteFolders.txt
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk keyword.operator.assignment.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^^^^^ source.ahk constant.language.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk
#                                                       ^^^ source.ahk variable.def.ahk
>toRun:= """" vscodePath """ """ path """"
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#            ^ source.ahk
#             ^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                           ^ source.ahk string.quoted.double.ahk
#                            ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk
#                                ^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>run, %toRun%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>folderlistViewEvents1_1:
#^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>folderlistViewEvents2_1:
#^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>folderlistViewEvents1_2:
#^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>folderlistViewEvents2_2:
#^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>whichSide:=SubStr(A_GuiControl, 0)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk constant.numeric.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>num:=SubStr(A_GuiControl, 15, 1)
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^ source.ahk constant.numeric.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>whichParent:=(num=1) ? 2 : 1
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>
>if (A_GuiEvent="ColClick")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=parent%whichParent%Dir%whichSide%
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^ source.ahk keyword.other.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>} else if (A_GuiEvent = "DoubleClick") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^ source.ahk constant.language.ahk
#                     ^ source.ahk
#                      ^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=parent%whichParent%DirDirs%whichSide%[A_EventInfo]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^ source.ahk keyword.other.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
#                                                              ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                                         ^ source.ahk punctuation.bracket.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>currentDirEdit1Changed:
#^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>currentDirEdit2Changed:
#^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>SetTimer, currentDirEdit1ChangedTimer, -0
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk keyword.operator.arithmetic.ahk
#                                        ^ source.ahk constant.numeric.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>currentDirEdit1ChangedTimer:
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>gui, submit, nohide
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk keyword.other.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
>if (focused="searchCurrentDirEdit")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (vcurrentDirEdit%whichSide%!=lastEditText)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                              ^ source.ahk keyword.operator.arithmetic.ahk
#                               ^ source.ahk keyword.operator.assignment.ahk
#                                ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>lastEditText:=vcurrentDirEdit%whichSide%
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                              ^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
>if (!submittingGui) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>searchString%whichSide%:=vcurrentDirEdit%whichSide%
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>searchInCurrentDir()
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>p(6456)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^^^^ source.ahk constant.numeric.ahk
#      ^ source.ahk punctuation.bracket.ahk
>queueSubmitGui:=true
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>listViewEvents1:
#^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>listViewEvents2:
#^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>; whichSide:=SubStr(A_GuiControl, 0)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (A_GuiEvent=="D") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>selectedPaths:=getSelectedPaths()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>
>if (GetKeyState("Alt")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>FileToClipboard(selectedPaths, "cut")
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>FileToClipboard(selectedPaths)
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>Cursors := []
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk punctuation.bracket.ahk
>Cursors[1] := DllCall("LoadCursor", "Ptr", 0, "Ptr", 32515, "UPtr") ; DROPEFFECT_COPY = IDC_CROSS
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk constant.numeric.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk constant.numeric.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^ source.ahk constant.numeric.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
#                                                                   ^ source.ahk comment.line.semicolon.ahk
#                                                                    ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Cursors[2] := DllCall("LoadCursor", "Ptr", 0, "Ptr", 32516, "UPtr") ; DROPEFFECT_MOVE = IDC_UPARROW
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk constant.numeric.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk constant.numeric.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^ source.ahk constant.numeric.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
#                                                                   ^ source.ahk comment.line.semicolon.ahk
#                                                                    ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Cursors[3] := DllCall("LoadCursor", "Ptr", 0, "Ptr", 32648, "UPtr") ; Copy or Move = IDC_NO
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk constant.numeric.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk constant.numeric.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^ source.ahk constant.numeric.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
#                                                                   ^ source.ahk comment.line.semicolon.ahk
#                                                                    ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                     ^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>DoDragDrop(Cursors)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (A_GuiEvent=="F") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
#                   ^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk keyword.operator.assignment.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>whichSide:=SubStr(A_GuiControl, 0)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk constant.numeric.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>
>If (ICELV%whichSide%["Changed"]) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>Msg := ""
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>p(ICELV%whichSide%.Changed["Txt"])
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.definition.variable.percent.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^ source.ahk
#                   ^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>ICELV%whichSide%.Remove("Changed")
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (A_GuiEvent=="e") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
#                   ^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk keyword.operator.assignment.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>whichSide:=SubStr(A_GuiControl, 0)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk constant.numeric.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>focused:="flistView"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>LV_GetText(OutputVar,A_EventInfo,2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>
>for k, v in stuffByName
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (v=renaming) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>SourcePath:=filePaths[k]
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>DestPath:=EcurrentDir%whichSide% "\" OutputVar
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^^^^^^^^^ source.ahk variable.def.ahk
>stuffByName[k]:=OutputVar
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
>filePaths[k]:=DestPath
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^ source.ahk variable.def.ahk
>fileExist:=FileExist(SourcePath)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>if (fileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>if (InStr(fileExist, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>FileMoveDir, %SourcePath%, %DestPath%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>FileMove, %SourcePath%, %DestPath%
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (A_GuiEvent=="E") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^ source.ahk constant.language.ahk
#                     ^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>focused:="renaming"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>LV_GetText(OutputVar,A_EventInfo,2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>renaming:=OutputVar
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
>SplitPath, OutputVar, , , OutExtension, OutNameNoExt
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^^^^^^^^^^^^ source.ahk variable.def.ahk
>if (OutNameNoExt) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>Postmessage,0xB1, 0, % StrLen(OutNameNoExt), Edit2
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Postmessage,0xB1, 1, % StrLen(OutExtension)+1, Edit2
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk keyword.operator.arithmetic.ahk
#                                            ^ source.ahk constant.numeric.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (A_GuiEvent = "DoubleClick")
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^ source.ahk constant.language.ahk
#                     ^ source.ahk
#                      ^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (!canRename)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
>doubleClickedNormal(A_EventInfo)
#^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^^^^^ source.ahk constant.language.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (A_GuiEvent=="K") ;key pressed
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
#                   ^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk keyword.operator.assignment.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk comment.line.semicolon.ahk
#                          ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                           ^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (!dontSearch) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>whichSide:=SubStr(A_GuiControl, 0)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk constant.numeric.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>key := GetKeyName(Format("vk{:x}", A_EventInfo))
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^^^^^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>if (key="Backspace")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="f2") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^ source.ahk string.quoted.double.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>canRename:=true
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^ source.ahk constant.language.ahk
>; focused:="renaming"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>firstRename:=false
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^ source.ahk constant.language.ahk
>fromButton:=false
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^ source.ahk constant.language.ahk
>renameTextWidthLimit:=200
#^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^^^ source.ahk constant.numeric.ahk
>
>row:=LV_GetNext("")
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>LV_GetText(TextBeingRenamed, row, 2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>ICELV%whichSide%.EditCell(row, 2)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^ source.ahk entity.name.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk constant.numeric.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>sleep, 25
#^^^^^ source.ahk support.function.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^^ source.ahk constant.numeric.ahk
>WinGetPos, xpos, ypos,,,% ahk_explorer ahk_class AutoHotkeyGUI
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>if (whichSide=1)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk constant.numeric.ahk
#               ^ source.ahk punctuation.bracket.ahk
>xpos+=161
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^ source.ahk constant.numeric.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>xpos+=161+listViewWidth
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^ source.ahk constant.numeric.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>ypos+=A_CaretY - 5
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk
#                 ^ source.ahk constant.numeric.ahk
>Gui, renameSimple:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>Gui,Font, s10, Segoe UI
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^ source.ahk variable.def.ahk
>Gui, Margin , 0,0,0,0
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk constant.numeric.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk constant.numeric.ahk
>gui, add, edit,y2 r1 w%renameTextWidthLimit% -wrap gTypingInRenameSimple vRenamingSimple hwndRenameHwnd, %TextBeingRenamed%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk keyword.operator.arithmetic.ahk
#                                              ^^^^ source.ahk keyword.other.ahk
#                                                  ^ source.ahk
#                                                   ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                       ^ source.ahk punctuation.ahk
#                                                                                                        ^ source.ahk
#                                                                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                                          ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
>Gui, Add, Button, Hidden Default ggrenameFileLabel
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^ source.ahk keyword.other.ahk
#                        ^ source.ahk
#                         ^^^^^^^ source.ahk keyword.other.ahk
#                                ^ source.ahk
#                                 ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>gui, show, X%xpos% Y%ypos% h0,renamingWinTitle
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^ source.ahk
#                   ^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^ source.ahk
#                           ^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>WinSet, Style, -0xC00000,a ; remove the titlebar and border(s)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^^^^^^^^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk variable.def.ahk
#                          ^ source.ahk comment.line.semicolon.ahk
#                           ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>gosub, TypingInRenameSimple
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^^^^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>sleep, 500
#^^^^^ source.ahk support.function.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^^^ source.ahk constant.numeric.ahk
>
>LV_GetText(OutputVar,A_EventInfo,2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>SplitPath, OutputVar, , , OutExtension, OutNameNoExt
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^^^^^^^^^^^^ source.ahk variable.def.ahk
>if (OutNameNoExt) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>Postmessage,0xB1, 0, % StrLen(OutNameNoExt), Edit2
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Postmessage,0xB1, 1, % StrLen(OutExtension)+1, Edit2
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk keyword.operator.arithmetic.ahk
#                                            ^ source.ahk constant.numeric.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="Lwin") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadRight") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadLeft") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadUp") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadDown") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="Alt") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="Control") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="Shift") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>
>} else if (key="F1") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>send, {f1}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^ source.ahk keyword.keys.ahk
#         ^ source.ahk punctuation.bracket.ahk
>} else if (key="F3") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>send, {f3}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^ source.ahk keyword.keys.ahk
#         ^ source.ahk punctuation.bracket.ahk
>} else if (key="F4") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>; send, {f4}
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="\") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadEnd") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="Numpad0") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadHome") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadPgDn") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadPgUp") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="]") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="NumpadDel") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>
>selectedNames:=getSelectedNames()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>
>for k, v in getSelectedNames() {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>finalStr:="""" A_AhkPath """ ""lib\fileRecycle_one.ahk"" """ EcurrentDir%whichSide% "\" v """"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#           ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk constant.language.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                            ^ source.ahk string.quoted.double.ahk
#                             ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                               ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                        ^ source.ahk string.quoted.double.ahk
#                                                         ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                   ^ source.ahk
#                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^ source.ahk variable.def.ahk
#                                                                                         ^ source.ahk
#                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                           ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>run, %finalStr%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>if (focused!="searchCurrentDirEdit")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>ShiftIsDown := GetKeyState("Shift")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk support.function.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>CtrlIsDown := GetKeyState("Ctrl")
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                           ^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>
>if (CtrlIsDown and !ShiftIsDown) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^^ source.ahk keyword.other.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>if (key="c") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^ source.ahk string.quoted.double.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.bracket.ahk
>selectedPaths:=getSelectedPaths()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>FileToClipboard(selectedPaths)
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (key="x") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>selectedPaths:=getSelectedPaths()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>FileToClipboard(selectedPaths, "cut")
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>} else if (key="v")
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>pasteFile()
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>
>} else if (key="a") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>loop % LV_GetCount()
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>LV_Modify(A_Index, "+Select") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^ source.ahk string.quoted.double.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk comment.line.semicolon.ahk
#                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                               ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (key="h") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>} else if (ShiftIsDown and !CtrlIsDown) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^^ source.ahk keyword.other.ahk
#                          ^ source.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>if (key="F10") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^ source.ahk string.quoted.double.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>selectedNames:=getSelectedNames()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>ShellContextMenu(EcurrentDir%whichSide%,selectedNames)
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (CtrlIsDown and ShiftIsDown) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^ source.ahk keyword.other.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>if (key="x") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^ source.ahk string.quoted.double.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.bracket.ahk
>for k, v in getSelectedNames() ;extract using 7zip, 7-zip
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk comment.line.semicolon.ahk
#                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>SplitPath, v,,,, OutNameNoExt
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
>runwait, % "lib\7z x """ EcurrentDir%whichSide% "\" v """ -o""" EcurrentDir%whichSide% "\" OutNameNoExt """ -spe",,Hide
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^ source.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#            ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                 ^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk
#                                                    ^ source.ahk variable.def.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                       ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                         ^^^ source.ahk string.quoted.double.ahk
#                                                            ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                               ^ source.ahk
#                                                                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                      ^ source.ahk
#                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk
#                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                       ^ source.ahk
#                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                         ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                                                                           ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                 ^ source.ahk punctuation.ahk
#                                                                                                                  ^ source.ahk punctuation.ahk
#                                                                                                                   ^^^^ source.ahk keyword.other.ahk
>; runwait, """" peazipPath """ -ext2folder """ EcurrentDir%whichSide% "\" v """"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>soundplay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>EcurrentDir%whichSide%:=EcurrentDir%whichSide% "\" OutNameNoExt
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                ^ source.ahk string.quoted.double.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                  ^ source.ahk
#                                                   ^^^^^^^^^^^^ source.ahk variable.def.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>} else if (key="d") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>files:=array_ToSpacedString(getSelectedPaths())
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
>runwait, "%peazipPath%" -add2archive %files%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
>soundplay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>renderCurrentDir() ;refresh
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk comment.line.semicolon.ahk
#                   ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                    ^^^^^^^ source.ahk comment.line.semicolon.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>} else if (key="v") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>if (DllCall("IsClipboardFormatAvailable", "UInt", CF_HDROP := 15)) { ; file being copied
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk
#                                                           ^^ source.ahk keyword.operator.assignment.ahk
#                                                             ^ source.ahk
#                                                              ^^ source.ahk constant.numeric.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                    ^ source.ahk comment.line.semicolon.ahk
#                                                                     ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                      ^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (DllCall("IsClipboardFormatAvailable", "UInt", dropEffectFormat)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
#                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                    ^ source.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
>if (DllCall("OpenClipboard", "Ptr", A_ScriptHwnd)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>if (data := DllCall("GetClipboardData", "UInt", dropEffectFormat, "Ptr")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk
#            ^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                   ^^^ source.ahk string.quoted.double.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                        ^ source.ahk punctuation.bracket.ahk
#                                                                         ^ source.ahk
#                                                                          ^ source.ahk punctuation.bracket.ahk
>if (effect := DllCall("GlobalLock", "Ptr", data, "UInt*")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                  ^^^^^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
#                                                         ^ source.ahk punctuation.bracket.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
>if (effect & DROPEFFECT_COPY) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk
#             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>files:=StrSplit(clipboard, "`n","`r")
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^ source.ahk constant.language.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>for k, v in files {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>fileExist:=FileExist(v)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>if (fileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>SplitPath, v , OutFileName
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
>dest:=EcurrentDir%whichSide%
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
>Run, TeraCopy.exe Copy "%v%" "%dest%"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^ source.ahk string.quoted.double.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; renderCurrentDir()
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; action:="copy"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>else if (effect & DROPEFFECT_MOVE) {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>p("no move")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^ source.ahk string.quoted.double.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; action:="move"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>DllCall("GlobalUnlock", "Ptr", data)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>DllCall("CloseClipboard")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (CtrlIsDown or ShiftIsDown)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.other.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>focused=searchCurrentDirEdit
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl, Focus, vcurrentDirEdit%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
>GuiControl, Text, vcurrentDirEdit%whichSide%,% searchString%whichSide% key
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                      ^ source.ahk
#                                                                       ^^^ source.ahk variable.def.ahk
>SendMessage, 0xB1, -2, -1,, % "ahk_id " Edithwnd%whichSide%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk constant.numeric.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk keyword.operator.arithmetic.ahk
#                        ^ source.ahk constant.numeric.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^ source.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^^^^^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk
#                                        ^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (A_GuiEvent="RightClick") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
#                   ^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>selectedNames:=getSelectedNames()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>ShellContextMenu(EcurrentDir%whichSide%,selectedNames)
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (A_GuiEvent="ColClick")
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
#                   ^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>whichSide:=SubStr(A_GuiControl, 0)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk constant.numeric.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>
>columnsToSort:=[1,2,4,6]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk constant.numeric.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>if (A_EventInfo=1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk constant.language.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>if (!foldersFirst)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>foldersFirst:=true
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^ source.ahk constant.language.ahk
>sortColumn(1, "SortDesc")
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>foldersFirst:=false
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^ source.ahk constant.language.ahk
>sortColumn(1, "Sort")
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (A_EventInfo=2) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (!A_ZSort%whichSide%)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>A_ZSort%whichSide%:=true
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.definition.variable.percent.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^^^^ source.ahk constant.language.ahk
>sortColumn(2, "Sort")
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>A_ZSort%whichSide%:=false
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.definition.variable.percent.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^^^^^ source.ahk constant.language.ahk
>sortColumn(2, "SortDesc")
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (A_EventInfo=3) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (!oldNew%whichSide%)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>whichsort%whichSide%:="oldNew"
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>oldNew%whichSide%:=true
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^ source.ahk constant.language.ahk
>renderFunctionsToSort(sortedByDate%whichSide%, true)
#^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^ source.ahk constant.language.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>whichsort%whichSide%:="newOld"
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>oldNew%whichSide%:=false
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^^ source.ahk constant.language.ahk
>renderFunctionsToSort(sortedByDate%whichSide%)
#^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (A_EventInfo=5) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (canSortBySize%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>if (!bigSmall%whichSide%)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>whichsort%whichSide%:="bigSmall"
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>bigSmall%whichSide%:=true
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.definition.variable.percent.ahk
#         ^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^^^^ source.ahk constant.language.ahk
>renderFunctionsToSort(sortedBySize%whichSide%)
#^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>whichsort%whichSide%:="smallBig"
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>bigSmall%whichSide%:=false
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.definition.variable.percent.ahk
#         ^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^^^^^ source.ahk constant.language.ahk
>renderFunctionsToSort(sortedBySize%whichSide%, true)
#^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^ source.ahk constant.language.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>;includes
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>#include <Class_LV_InCellEdit>
#^^^^^^^^ source.ahk keyword.control.import.ahk
#        ^^^^^^^^^^^^^^^^^^^^^^ source.ahk keyword.control.import.ahk string.parameter.import.ahk
>#include <cMsgbox>
#^^^^^^^^ source.ahk keyword.control.import.ahk
#        ^^^^^^^^^^ source.ahk keyword.control.import.ahk string.parameter.import.ahk
>;Classes
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Namespace:      LV_Colors
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Function:       Helper object and functions for ListView row and cell coloring
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Testted with:   AHK 1.1.15.04 (A32/U32/U64)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Tested on:      Win 8.1 (x64)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Changelog:
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;     0.5.00.00/2014-08-13/just me - changed 'static mode' handling
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;     0.4.01.00/2013-12-30/just me - minor bug fix
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;     0.4.00.00/2013-12-30/just me - added static mode
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;     0.3.00.00/2013-06-15/just me - added "Critical, 100" to avoid drawing issues
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;     0.2.00.00/2013-01-12/just me - bugfixes and minor changes
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;     0.1.00.00/2012-10-27/just me - initial release
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; CLASS LV_Colors
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
>; The class provides seven public methods to register / unregister coloring for ListView controls, to set individual
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; colors for rows and/or cells, to prevent/allow sorting and rezising dynamically, and to register / unregister the
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; included message handler function for WM_NOTIFY -> NM_CUSTOMDRAW messages.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
>; If you want to use the included message handler you must call LV_Colors.OnMessage() once.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Otherwise you should integrate the code within LV_Colors_WM_NOTIFY into your own notification handler.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Without notification handling coloring won't work.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Class LV_Colors {
#^^^^^ source.ahk labelline.ahk keyword.class.ahk
#     ^ source.ahk labelline.ahk
#      ^^^^^^^^^ source.ahk labelline.ahk support.class.ahk
#               ^ source.ahk labelline.ahk
#                ^ source.ahk punctuation.bracket.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; PRIVATE PROPERTIES ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static MessageHandler := "LV_Colors_WM_NOTIFY"
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>Static WM_NOTIFY := 0x4E
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^^^^ source.ahk constant.numeric.ahk
>Static SubclassProc := RegisterCallback("LV_Colors_SubclassProc")
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk
#                       ^^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; PUBLIC PROPERTIES  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Static Critical := 0
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static Critical := 100
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^ source.ahk keyword.control.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^ source.ahk constant.numeric.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; META FUNCTIONS ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>__New(P*) {
#^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#     ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#      ^ source.ahk functionline.ahk variable.def.ahk
#       ^ source.ahk functionline.ahk
#        ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#         ^ source.ahk functionline.ahk
#          ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>Return False ; There is no reason to instantiate this class!
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
#            ^ source.ahk comment.line.semicolon.ahk
#             ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; PRIVATE METHODS +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>On_NM_CUSTOMDRAW(H, L) {
#^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                 ^ source.ahk functionline.ahk variable.def.ahk
#                  ^^ source.ahk functionline.ahk
#                    ^ source.ahk functionline.ahk variable.def.ahk
#                     ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                      ^ source.ahk functionline.ahk
#                       ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>Static CDDS_PREPAINT := 0x00000001
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^^^^^^^^^^ source.ahk constant.numeric.ahk
>Static CDDS_ITEMPREPAINT := 0x00010001
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk
#                            ^^^^^^^^^^ source.ahk constant.numeric.ahk
>Static CDDS_SUBITEMPREPAINT := 0x00030001
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^^ source.ahk keyword.operator.assignment.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^^ source.ahk constant.numeric.ahk
>Static CDRF_DODEFAULT := 0x00000000
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^ source.ahk constant.numeric.ahk
>Static CDRF_NEWFONT := 0x00000002
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk
#                       ^^^^^^^^^^ source.ahk constant.numeric.ahk
>Static CDRF_NOTIFYITEMDRAW := 0x00000020
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk
#                           ^^ source.ahk keyword.operator.assignment.ahk
#                             ^ source.ahk
#                              ^^^^^^^^^^ source.ahk constant.numeric.ahk
>Static CDRF_NOTIFYSUBITEMDRAW := 0x00000020
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^^ source.ahk keyword.operator.assignment.ahk
#                                ^ source.ahk
#                                 ^^^^^^^^^^ source.ahk constant.numeric.ahk
>Static CLRDEFAULT := 0xFF000000
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^ source.ahk constant.numeric.ahk
>; Size off NMHDR structure
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static NMHDRSize := (2 * A_PtrSize) + 4 + (A_PtrSize - 4)
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk
#                       ^ source.ahk keyword.operator.arithmetic.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^ source.ahk constant.language.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^^^^^^^^^ source.ahk constant.language.ahk
#                                                    ^ source.ahk
#                                                     ^ source.ahk keyword.operator.arithmetic.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk constant.numeric.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>; Offset of dwItemSpec (NMCUSTOMDRAW)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static ItemSpecP := NMHDRSize + (5 * 4) + A_PtrSize + (A_PtrSize - 4)
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^ source.ahk keyword.operator.arithmetic.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk constant.numeric.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                         ^ source.ahk
#                                          ^^^^^^^^^ source.ahk constant.language.ahk
#                                                   ^ source.ahk
#                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
#                                                       ^^^^^^^^^ source.ahk constant.language.ahk
#                                                                ^ source.ahk
#                                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk constant.numeric.ahk
#                                                                    ^ source.ahk punctuation.bracket.ahk
>; Size of NMCUSTOMDRAW structure
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static NCDSize := NMHDRSize + (6 * 4) + (3 * A_PtrSize) + (2 * (A_PtrSize - 4))
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^ source.ahk keyword.operator.arithmetic.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk constant.numeric.ahk
#                                ^ source.ahk
#                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk keyword.operator.arithmetic.ahk
#                                            ^ source.ahk
#                                             ^^^^^^^^^ source.ahk constant.language.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^ source.ahk constant.numeric.ahk
#                                                            ^ source.ahk
#                                                             ^ source.ahk keyword.operator.arithmetic.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^^^^^^^^^ source.ahk constant.language.ahk
#                                                                         ^ source.ahk
#                                                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                           ^ source.ahk
#                                                                            ^ source.ahk constant.numeric.ahk
#                                                                             ^ source.ahk punctuation.bracket.ahk
#                                                                              ^ source.ahk punctuation.bracket.ahk
>; Offset of clrText (NMLVCUSTOMDRAW)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static ClrTxP := NCDSize
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk
#                 ^^^^^^^ source.ahk variable.def.ahk
>; Offset of clrTextBk (NMLVCUSTOMDRAW)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static ClrTxBkP := ClrTxP + 4
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^ source.ahk
#                            ^ source.ahk constant.numeric.ahk
>; Offset of iSubItem (NMLVCUSTOMDRAW)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static SubItemP := ClrTxBkP + 4
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^ source.ahk keyword.operator.arithmetic.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
>; Offset of clrFace (NMLVCUSTOMDRAW)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static ClrBkP := SubItemP + 8
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk
#                 ^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^ source.ahk
#                            ^ source.ahk constant.numeric.ahk
>DrawStage := NumGet(L + NMHDRSize, 0, "UInt")
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>, Row := NumGet(L + ItemSpecP, 0, "UPtr") + 1
#^ source.ahk punctuation.ahk
# ^ source.ahk
#  ^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.arithmetic.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk constant.numeric.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk constant.numeric.ahk
>, Col := NumGet(L + SubItemP, 0, "Int") + 1
#^ source.ahk punctuation.ahk
# ^ source.ahk
#  ^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.arithmetic.ahk
#                   ^ source.ahk
#                    ^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk constant.numeric.ahk
>If This[H].IsStatic
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^ source.ahk support.class.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
>Row := This.MapIndexToID(H, Row)
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^^^^ source.ahk support.class.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>; SubItemPrepaint ------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>If (DrawStage = CDDS_SUBITEMPREPAINT) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>NumPut(This[H].CurTX, L + ClrTxP, 0, "UInt"), NumPut(This[H].CurTB, L + ClrTxBkP, 0, "UInt")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^ source.ahk support.class.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^ source.ahk
#                          ^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^^^^^^ source.ahk support.function.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
#                                                     ^^^^ source.ahk support.class.ahk
#                                                         ^ source.ahk punctuation.bracket.ahk
#                                                          ^ source.ahk variable.def.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk
#                                                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                       ^ source.ahk
#                                                                        ^^^^^^^^ source.ahk variable.def.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^ source.ahk constant.numeric.ahk
#                                                                                   ^ source.ahk punctuation.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                      ^^^^ source.ahk string.quoted.double.ahk
#                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                           ^ source.ahk punctuation.bracket.ahk
>, NumPut(This[H].CurBK, L + ClrBkP, 0, "UInt")
#^ source.ahk punctuation.ahk
# ^ source.ahk
#  ^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk support.class.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^ source.ahk
#                            ^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>ClrTx := This[H].Cells[Row][Col].T, ClrBk := This[H].Cells[Row][Col].B
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^ source.ahk support.class.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk
#                                 ^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk
#                                          ^^ source.ahk keyword.operator.assignment.ahk
#                                            ^ source.ahk
#                                             ^^^^ source.ahk support.class.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                    ^ source.ahk
#                                                                     ^ source.ahk variable.def.ahk
>If (ClrTx <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>NumPut(ClrTX, L + ClrTxP, 0, "UInt")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk
#                  ^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>If (ClrBk <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>NumPut(ClrBk, L + ClrTxBkP, 0, "UInt"), NumPut(ClrBk, L + ClrBkP, 0, "UInt")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk
#                  ^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^^^^^^ source.ahk support.function.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk variable.def.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                         ^ source.ahk
#                                                          ^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk constant.numeric.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^ source.ahk string.quoted.double.ahk
#                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                           ^ source.ahk punctuation.bracket.ahk
>If (Col > This[H].Cells[Row].MaxIndex()) && !This[H].HasKey(Row)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^ source.ahk keyword.operator.comparison.ahk
#         ^ source.ahk
#          ^^^^ source.ahk support.class.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk
#                             ^^^^^^^^ source.ahk support.function.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk keyword.operator.arithmetic.ahk
#                                             ^^^^ source.ahk support.class.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^ source.ahk support.function.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^^^ source.ahk variable.def.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
>Return CDRF_DODEFAULT
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>Return CDRF_NOTIFYSUBITEMDRAW
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ItemPrepaint ---------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>If (DrawStage = CDDS_ITEMPREPAINT) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>This[H].CurTX := This[H].TX, This[H].CurTB := This[H].TB, This[H].CurBK := This[H].BK
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk
#        ^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk
#                 ^^^^ source.ahk support.class.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^ source.ahk support.class.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk
#                                     ^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk
#                                           ^^ source.ahk keyword.operator.assignment.ahk
#                                             ^ source.ahk
#                                              ^^^^ source.ahk support.class.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
#                                                   ^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
#                                                     ^ source.ahk
#                                                      ^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^^^^ source.ahk support.class.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
#                                                               ^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^ source.ahk
#                                                                  ^^^^^ source.ahk variable.def.ahk
#                                                                       ^ source.ahk
#                                                                        ^^ source.ahk keyword.operator.assignment.ahk
#                                                                          ^ source.ahk
#                                                                           ^^^^ source.ahk support.class.ahk
#                                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                                ^ source.ahk variable.def.ahk
#                                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                                  ^ source.ahk
#                                                                                   ^^ source.ahk variable.def.ahk
>ClrTx := ClrBk := ""
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>If This[H].Rows.HasKey(Row)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^ source.ahk support.class.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^^^^^ source.ahk support.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>ClrTx := This[H].Rows[Row].T, ClrBk := This[H].Rows[Row].B
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^ source.ahk support.class.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk
#                                    ^^ source.ahk keyword.operator.assignment.ahk
#                                      ^ source.ahk
#                                       ^^^^ source.ahk support.class.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk
#                                               ^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
#                                                    ^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
#                                                        ^ source.ahk
#                                                         ^ source.ahk variable.def.ahk
>If (ClrTx <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>NumPut(ClrTx, L + ClrTxP, 0, "UInt"), This[H].CurTX := ClrTx
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk
#                  ^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^^^^ source.ahk support.class.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk
#                                              ^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk
#                                                    ^^ source.ahk keyword.operator.assignment.ahk
#                                                      ^ source.ahk
#                                                       ^^^^^ source.ahk variable.def.ahk
>If (ClrBk <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>NumPut(ClrBk, L + ClrTxBkP, 0, "UInt") , NumPut(ClrBk, L + ClrBkP, 0, "UInt")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk
#                  ^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^^^^^^ source.ahk support.function.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk variable.def.ahk
#                                                        ^ source.ahk
#                                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                                          ^ source.ahk
#                                                           ^^^^^^ source.ahk variable.def.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk constant.numeric.ahk
#                                                                    ^ source.ahk punctuation.ahk
#                                                                     ^ source.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                       ^^^^ source.ahk string.quoted.double.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                            ^ source.ahk punctuation.bracket.ahk
>, This[H].CurTB := ClrBk, This[H].CurBk := ClrBk
#^ source.ahk punctuation.ahk
# ^ source.ahk
#  ^^^^ source.ahk support.class.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^ source.ahk
#          ^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^ source.ahk support.class.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk
#                                  ^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk
#                                        ^^ source.ahk keyword.operator.assignment.ahk
#                                          ^ source.ahk
#                                           ^^^^^ source.ahk variable.def.ahk
>If This[H].Cells.HasKey(Row)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^ source.ahk support.class.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>Return CDRF_NOTIFYSUBITEMDRAW
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>Return CDRF_DODEFAULT
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; Prepaint -------------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>If (DrawStage = CDDS_PREPAINT) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>Return CDRF_NOTIFYITEMDRAW
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; Others ---------------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Return CDRF_DODEFAULT
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; -------------------------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>MapIndexToID(HWND, Row) {
#^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#            ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#             ^^^^ source.ahk functionline.ahk variable.def.ahk
#                 ^^ source.ahk functionline.ahk
#                   ^^^ source.ahk functionline.ahk variable.def.ahk
#                      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                       ^ source.ahk functionline.ahk
#                        ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>; LVM_MAPINDEXTOID = 0x10B4 -> http://msdn.microsoft.com/en-us/library/bb761139(v=vs.85).aspx
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>SendMessage, 0x10B4, % (Row - 1), 0, , % "ahk_id " . HWND
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^ source.ahk keyword.operator.arithmetic.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^^^^^^ source.ahk string.quoted.double.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                  ^^^ source.ahk
#                                                     ^^^^ source.ahk variable.def.ahk
>Return ErrorLevel
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; PUBLIC METHODS ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Attach()        Register ListView control for coloring
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Parameters:     HWND        -  ListView's HWND.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Optional ------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 StaticMode  -  Static color assignment, i.e. the colors will be assigned permanently to a row
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                rather than to a row number.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Values:  True / False
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: False
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 NoSort      -  Prevent sorting by click on a header item.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Values:  True / False
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: True
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 NoSizing    -  Prevent resizing of columns.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Values:  True / False
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: True
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Return Values:  True on success, otherwise false.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Attach(HWND, StaticMode := False, NoSort := True, NoSizing := True) {
#^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#       ^^^^ source.ahk functionline.ahk variable.def.ahk
#           ^^ source.ahk functionline.ahk
#             ^^^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                       ^^^^ source.ahk functionline.ahk
#                           ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                ^^ source.ahk functionline.ahk
#                                  ^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                        ^^^^ source.ahk functionline.ahk
#                                            ^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                ^^ source.ahk functionline.ahk
#                                                  ^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                          ^^^^ source.ahk functionline.ahk
#                                                              ^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                                  ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                                                   ^ source.ahk functionline.ahk
#                                                                    ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>Static LVM_GETBKCOLOR := 0x1000
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk
#                         ^^^^^^ source.ahk constant.numeric.ahk
>Static LVM_GETHEADER := 0x101F
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^^^^^^ source.ahk constant.numeric.ahk
>Static LVM_GETTEXTBKCOLOR := 0x1025
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^^ source.ahk keyword.operator.assignment.ahk
#                            ^ source.ahk
#                             ^^^^^^ source.ahk constant.numeric.ahk
>Static LVM_GETTEXTCOLOR := 0x1023
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk
#                           ^^^^^^ source.ahk constant.numeric.ahk
>Static LVM_SETEXTENDEDLISTVIEWSTYLE := 0x1036
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk
#                                    ^^ source.ahk keyword.operator.assignment.ahk
#                                      ^ source.ahk
#                                       ^^^^^^ source.ahk constant.numeric.ahk
>Static LVS_EX_DOUBLEBUFFER := 0x00010000
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk
#                           ^^ source.ahk keyword.operator.assignment.ahk
#                             ^ source.ahk
#                              ^^^^^^^^^^ source.ahk constant.numeric.ahk
>If !DllCall("User32.dll\IsWindow", "Ptr", HWND, "UInt")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                 ^^^^ source.ahk string.quoted.double.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>If This.HasKey(HWND)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^ source.ahk support.class.ahk
#       ^ source.ahk
#        ^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>; Set LVS_EX_DOUBLEBUFFER style to avoid drawing issues, if it isn't set as yet.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>SendMessage, % LVM_SETEXTENDEDLISTVIEWSTYLE, % LVS_EX_DOUBLEBUFFER, % LVS_EX_DOUBLEBUFFER, , % "ahk_id " . HWND
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                         ^ source.ahk punctuation.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^ source.ahk punctuation.ahk
#                                                                                            ^ source.ahk
#                                                                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                              ^ source.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                ^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                        ^^^ source.ahk
#                                                                                                           ^^^^ source.ahk variable.def.ahk
>If (ErrorLevel = "FAIL")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>; Get the default colors
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>SendMessage, % LVM_GETBKCOLOR, 0, 0, , % "ahk_id " . HWND
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk constant.numeric.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^^^^^^ source.ahk string.quoted.double.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                  ^^^ source.ahk
#                                                     ^^^^ source.ahk variable.def.ahk
>BkClr := ErrorLevel
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
>SendMessage, % LVM_GETTEXTBKCOLOR, 0, 0, , % "ahk_id " . HWND
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^^^^^^^ source.ahk string.quoted.double.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                      ^^^ source.ahk
#                                                         ^^^^ source.ahk variable.def.ahk
>TBClr := ErrorLevel
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
>SendMessage, % LVM_GETTEXTCOLOR, 0, 0, , % "ahk_id " . HWND
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^^^^^^^ source.ahk string.quoted.double.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                    ^^^ source.ahk
#                                                       ^^^^ source.ahk variable.def.ahk
>TxClr := ErrorLevel
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^^^^ source.ahk constant.language.ahk
>; Get the header control
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>SendMessage, % LVM_GETHEADER, 0, 0, , % "ahk_id " . HWND
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^^^^^^^ source.ahk string.quoted.double.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^^^ source.ahk
#                                                    ^^^^ source.ahk variable.def.ahk
>Header := ErrorLevel
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^^^^^^^^^^ source.ahk constant.language.ahk
>; Store the values in a new object
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>This[HWND] := {BK: BkClr, TB: TBClr, TX: TxClr, Header: Header, IsStatic: !!StaticMode}
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk
#                                                        ^^^^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.ahk
#                                                               ^ source.ahk
#                                                                ^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk punctuation.ahk
#                                                                         ^ source.ahk
#                                                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                           ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                            ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                      ^ source.ahk punctuation.bracket.ahk
>If (NoSort)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk keyword.other.ahk
#          ^ source.ahk punctuation.bracket.ahk
>This.NoSort(HWND)
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
>If (NoSizing)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.bracket.ahk
>This.NoSizing(HWND)
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Detach()        Unregister ListView control
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Parameters:     HWND        -  ListView's HWND
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Return Value:   Always True
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Detach(HWND) {
#^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#       ^^^^ source.ahk functionline.ahk variable.def.ahk
#           ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#            ^ source.ahk functionline.ahk
#             ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>; Remove the subclass, if any
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Static LVM_GETITEMCOUNT := 0x1004
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk
#                           ^^^^^^ source.ahk constant.numeric.ahk
>If (This[HWND].SC)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>DllCall("Comctl32.dll\RemoveWindowSubclass", "Ptr", HWND, "Ptr", This.SubclassProc, "Ptr", HWND)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^^^ source.ahk string.quoted.double.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                           ^^^ source.ahk string.quoted.double.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                               ^ source.ahk punctuation.ahk
#                                                                ^ source.ahk
#                                                                 ^^^^ source.ahk support.class.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                  ^ source.ahk punctuation.ahk
#                                                                                   ^ source.ahk
#                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                         ^ source.ahk punctuation.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^^^^ source.ahk variable.def.ahk
#                                                                                               ^ source.ahk punctuation.bracket.ahk
>This.Remove(HWND, "")
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>WinSet, Redraw, , % "ahk_id " . HWND
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^^^ source.ahk
#                                ^^^^ source.ahk variable.def.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Row()           Set background and/or text color for the specified row
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Parameters:     HWND        -  ListView's HWND
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Row         -  Row number
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Optional ------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 BkColor     -  Background color as RGB color integer (e.g. 0xFF0000 = red)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: Empty -> default background color
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 TxColor     -  Text color as RGB color integer (e.g. 0xFF0000 = red)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: Empty -> default text color
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Return Value:   True on success, otherwise false.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Row(HWND, Row, BkColor := "", TxColor := "") {
#^^^ source.ahk functionline.ahk entity.name.function.ahk
#   ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#    ^^^^ source.ahk functionline.ahk variable.def.ahk
#        ^^ source.ahk functionline.ahk
#          ^^^ source.ahk functionline.ahk variable.def.ahk
#             ^^ source.ahk functionline.ahk
#               ^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                      ^^^^ source.ahk functionline.ahk
#                          ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                           ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^^ source.ahk functionline.ahk
#                              ^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                     ^^^^ source.ahk functionline.ahk
#                                         ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                            ^ source.ahk functionline.ahk
#                                             ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>If !This.HasKey(HWND)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk
#         ^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>If This[HWND].IsStatic
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^ source.ahk support.class.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^^^^^^^^ source.ahk variable.def.ahk
>Row := This.MapIndexToID(HWND, Row)
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^^^^ source.ahk support.class.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>If (BkColor = "") && (TxColor = "") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.arithmetic.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^ source.ahk keyword.operator.assignment.ahk
#                               ^ source.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>This[HWND].Rows.Remove(Row, "")
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^^^^^ source.ahk support.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>BkBGR := TxBGR := ""
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>If BkColor Is Integer
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.other.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk keyword.other.ahk
>BkBGR := ((BkColor & 0xFF0000) >> 16) | (BkColor & 0x00FF00) | ((BkColor & 0x0000FF) << 16)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^^^^^^^^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.comparison.ahk
#                                ^ source.ahk keyword.operator.comparison.ahk
#                                 ^ source.ahk
#                                  ^^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                  ^ source.ahk
#                                                   ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk
#                                                             ^ source.ahk keyword.operator.arithmetic.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                          ^ source.ahk
#                                                                           ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk keyword.operator.comparison.ahk
#                                                                                      ^ source.ahk keyword.operator.comparison.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^^ source.ahk constant.numeric.ahk
#                                                                                          ^ source.ahk punctuation.bracket.ahk
>If TxColor Is Integer
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.other.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk keyword.other.ahk
>TxBGR := ((TxColor & 0xFF0000) >> 16) | (TxColor & 0x00FF00) | ((TxColor & 0x0000FF) << 16)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^^^^^^^^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.comparison.ahk
#                                ^ source.ahk keyword.operator.comparison.ahk
#                                 ^ source.ahk
#                                  ^^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                  ^ source.ahk
#                                                   ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk
#                                                             ^ source.ahk keyword.operator.arithmetic.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                          ^ source.ahk
#                                                                           ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk keyword.operator.comparison.ahk
#                                                                                      ^ source.ahk keyword.operator.comparison.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^^ source.ahk constant.numeric.ahk
#                                                                                          ^ source.ahk punctuation.bracket.ahk
>If (BkBGR = "") && (TxBGR = "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>If !This[HWND].HasKey("Rows")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^ source.ahk string.quoted.double.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>This[HWND].Rows := {}
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>If !This[HWND].Rows.HasKey(Row)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^^^^^^ source.ahk support.function.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>This[HWND].Rows[Row] := {}
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>If (BkBGR <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>This[HWND].Rows[Row].Insert("B", BkBGR)
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^^^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>If (TxBGR <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>This[HWND].Rows[Row].Insert("T", TxBGR)
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^^^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Cell()          Set background and/or text color for the specified cell
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Parameters:     HWND        -  ListView's HWND
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Row         -  Row number
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Col         -  Column number
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Optional ------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 BkColor     -  Background color as RGB color integer (e.g. 0xFF0000 = red)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: Empty -> default background color
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 TxColor     -  Text color as RGB color integer (e.g. 0xFF0000 = red)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: Empty -> default text color
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Return Value:   True on success, otherwise false.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Cell(HWND, Row, Col, BkColor := "", TxColor := "") {
#^^^^ source.ahk functionline.ahk entity.name.function.ahk
#    ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#     ^^^^ source.ahk functionline.ahk variable.def.ahk
#         ^^ source.ahk functionline.ahk
#           ^^^ source.ahk functionline.ahk variable.def.ahk
#              ^^ source.ahk functionline.ahk
#                ^^^ source.ahk functionline.ahk variable.def.ahk
#                   ^^ source.ahk functionline.ahk
#                     ^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                            ^^^^ source.ahk functionline.ahk
#                                ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^^ source.ahk functionline.ahk
#                                    ^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                           ^^^^ source.ahk functionline.ahk
#                                               ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                                  ^ source.ahk functionline.ahk
#                                                   ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>If !This.HasKey(HWND)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk
#         ^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>If This[HWND].IsStatic
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^ source.ahk support.class.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^^^^^^^^ source.ahk variable.def.ahk
>Row := This.MapIndexToID(HWND, Row)
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^^^^ source.ahk support.class.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>If (BkColor = "") && (TxColor = "") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.arithmetic.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^ source.ahk keyword.operator.assignment.ahk
#                               ^ source.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>This[HWND].Cells.Remove(Row, "")
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>BkBGR := TxBGR := ""
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>If BkColor Is Integer
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.other.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk keyword.other.ahk
>BkBGR := ((BkColor & 0xFF0000) >> 16) | (BkColor & 0x00FF00) | ((BkColor & 0x0000FF) << 16)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^^^^^^^^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.comparison.ahk
#                                ^ source.ahk keyword.operator.comparison.ahk
#                                 ^ source.ahk
#                                  ^^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                  ^ source.ahk
#                                                   ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk
#                                                             ^ source.ahk keyword.operator.arithmetic.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                          ^ source.ahk
#                                                                           ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk keyword.operator.comparison.ahk
#                                                                                      ^ source.ahk keyword.operator.comparison.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^^ source.ahk constant.numeric.ahk
#                                                                                          ^ source.ahk punctuation.bracket.ahk
>If TxColor Is Integer
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.other.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk keyword.other.ahk
>TxBGR := ((TxColor & 0xFF0000) >> 16) | (TxColor & 0x00FF00) | ((TxColor & 0x0000FF) << 16)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^^^^^^^^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.comparison.ahk
#                                ^ source.ahk keyword.operator.comparison.ahk
#                                 ^ source.ahk
#                                  ^^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                  ^ source.ahk
#                                                   ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk
#                                                             ^ source.ahk keyword.operator.arithmetic.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk
#                                                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                          ^ source.ahk
#                                                                           ^^^^^^^^ source.ahk constant.numeric.ahk
#                                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk keyword.operator.comparison.ahk
#                                                                                      ^ source.ahk keyword.operator.comparison.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^^ source.ahk constant.numeric.ahk
#                                                                                          ^ source.ahk punctuation.bracket.ahk
>If (BkBGR = "") && (TxBGR = "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>If !This[HWND].HasKey("Cells")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>This[HWND].Cells := {}
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>If !This[HWND].Cells.HasKey(Row)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>This[HWND].Cells[Row] := {}
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>This[HWND].Cells[Row, Col] := {}
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^^ source.ahk keyword.operator.assignment.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>If (BkBGR <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>This[HWND].Cells[Row, Col].Insert("B", BkBGR)
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^^^^^^ source.ahk support.function.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>If (TxBGR <> "")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>This[HWND].Cells[Row, Col].Insert("T", TxBGR)
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^^^^^^ source.ahk support.function.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; NoSort()        Prevent / allow sorting by click on a header item dynamically.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Parameters:     HWND        -  ListView's HWND
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Optional ------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Apply       -  True / False
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: True
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Return Value:   True on success, otherwise false.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>NoSort(HWND, Apply := True) {
#^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#       ^^^^ source.ahk functionline.ahk variable.def.ahk
#           ^^ source.ahk functionline.ahk
#             ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                  ^^^^ source.ahk functionline.ahk
#                      ^^^^ source.ahk functionline.ahk variable.def.ahk
#                          ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                           ^ source.ahk functionline.ahk
#                            ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>Static HDM_GETITEMCOUNT := 0x1200
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk
#                           ^^^^^^ source.ahk constant.numeric.ahk
>If !This.HasKey(HWND)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk
#         ^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>If (Apply)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
>This[HWND].NS := True
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk
#                 ^^^^ source.ahk constant.language.ahk
>Else
#^^^^ source.ahk keyword.control.ahk
>This[HWND].Remove("NS")
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; NoSizing()      Prevent / allow resizing of columns dynamically.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Parameters:     HWND        -  ListView's HWND
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Optional ------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                 Apply       -  True / False
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: True
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Return Value:   True on success, otherwise false.
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>NoSizing(HWND, Apply := True) {
#^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#        ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#         ^^^^ source.ahk functionline.ahk variable.def.ahk
#             ^^ source.ahk functionline.ahk
#               ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                    ^^^^ source.ahk functionline.ahk
#                        ^^^^ source.ahk functionline.ahk variable.def.ahk
#                            ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                             ^ source.ahk functionline.ahk
#                              ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>Static OSVersion := DllCall("Kernel32.dll\GetVersion", "UChar")
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^^^^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk punctuation.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                        ^^^^^ source.ahk string.quoted.double.ahk
#                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
>Static HDS_NOSIZING := 0x0800
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk constant.numeric.ahk
>If !This.HasKey(HWND)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk
#         ^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>Return False
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>HHEADER := This[HWND].Header
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^^^^ source.ahk support.class.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk variable.def.ahk
>If (Apply) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.bracket.ahk
>If (OSVersion < 6) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.comparison.ahk
#               ^ source.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>If !(This[HWND].SC) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk support.class.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>DllCall("Comctl32.dll\SetWindowSubclass", "Ptr", HWND, "Ptr", This.SubclassProc, "Ptr", HWND, "Ptr", 0)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                        ^^^ source.ahk string.quoted.double.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                            ^ source.ahk punctuation.ahk
#                                                             ^ source.ahk
#                                                              ^^^^ source.ahk support.class.ahk
#                                                                  ^ source.ahk
#                                                                   ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                               ^ source.ahk punctuation.ahk
#                                                                                ^ source.ahk
#                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                  ^^^ source.ahk string.quoted.double.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                      ^ source.ahk punctuation.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^^^^ source.ahk variable.def.ahk
#                                                                                            ^ source.ahk punctuation.ahk
#                                                                                             ^ source.ahk
#                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                               ^^^ source.ahk string.quoted.double.ahk
#                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                    ^ source.ahk
#                                                                                                     ^ source.ahk constant.numeric.ahk
#                                                                                                      ^ source.ahk punctuation.bracket.ahk
>This[HWND].SC := True
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk
#                 ^^^^ source.ahk constant.language.ahk
>} Else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} Else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Control, Style, +%HDS_NOSIZING%, , ahk_id %HHEADER%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^ source.ahk keyword.other.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} Else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>If (OSVersion < 6) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.comparison.ahk
#               ^ source.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>If (This[HWND].SC) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk support.class.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>DllCall("Comctl32.dll\RemoveWindowSubclass", "Ptr", HWND, "Ptr", This.SubclassProc, "Ptr", HWND)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^^^ source.ahk string.quoted.double.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                           ^^^ source.ahk string.quoted.double.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                               ^ source.ahk punctuation.ahk
#                                                                ^ source.ahk
#                                                                 ^^^^ source.ahk support.class.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                  ^ source.ahk punctuation.ahk
#                                                                                   ^ source.ahk
#                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                         ^ source.ahk punctuation.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^^^^ source.ahk variable.def.ahk
#                                                                                               ^ source.ahk punctuation.bracket.ahk
>This[HWND].Remove("SC")
#^^^^ source.ahk support.class.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>} Else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} Else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Control, Style, -%HDS_NOSIZING%, , ahk_id %HHEADER%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^ source.ahk keyword.other.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; OnMessage()     Register / unregister LV_Colors message handler for WM_NOTIFY -> NM_CUSTOMDRAW messages
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Parameters:     Apply       -  True / False
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;                                Default: True
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Return Value:   Always True
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ===================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>OnMessage(Apply := True) {
#^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#         ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#          ^^^^^ source.ahk functionline.ahk variable.def.ahk
#               ^^^^ source.ahk functionline.ahk
#                   ^^^^ source.ahk functionline.ahk variable.def.ahk
#                       ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                        ^ source.ahk functionline.ahk
#                         ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>If (Apply)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
>OnMessage(This.WM_NOTIFY, This.MessageHandler)
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^ source.ahk support.class.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^ source.ahk support.class.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>Else If (This.MessageHandler = OnMessage(This.WM_NOTIFY))
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk support.class.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^ source.ahk keyword.operator.assignment.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^ source.ahk support.function.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^^^^ source.ahk support.class.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>OnMessage(This.WM_NOTIFY, "")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^ source.ahk support.class.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; PRIVATE FUNCTION LV_Colors_WM_NOTIFY() - message handler for WM_NOTIFY -> NM_CUSTOMDRAW notifications
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>LV_Colors_WM_NOTIFY(W, L) {
#^^^^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                   ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                    ^ source.ahk functionline.ahk variable.def.ahk
#                     ^^ source.ahk functionline.ahk
#                       ^ source.ahk functionline.ahk variable.def.ahk
#                        ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                         ^ source.ahk functionline.ahk
#                          ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>Static NM_CUSTOMDRAW := -12
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^^ source.ahk constant.numeric.ahk
>Static LVN_COLUMNCLICK := -108
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^^^ source.ahk constant.numeric.ahk
>Critical, % LV_Colors.Critical
#^^^^^^^^ source.ahk keyword.control.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^ source.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^^^ source.ahk variable.def.ahk
>If LV_Colors.HasKey(H := NumGet(L + 0, 0, "UPtr")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk
#                         ^^^^^^ source.ahk support.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk variable.def.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>M := NumGet(L + (A_PtrSize * 2), 0, "Int")
#^ source.ahk variable.def.ahk
# ^ source.ahk
#  ^^ source.ahk keyword.operator.assignment.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^ source.ahk constant.language.ahk
#                          ^ source.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^ source.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>; NM_CUSTOMDRAW --------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>If (M = NM_CUSTOMDRAW)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>Return LV_Colors.On_NM_CUSTOMDRAW(H, L)
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>; LVN_COLUMNCLICK ------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>If (LV_Colors[H].NS && (M = LVN_COLUMNCLICK))
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk
#                            ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>Return 0
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; PRIVATE FUNCTION LV_Colors_SubclassProc() - subclass for WM_NOTIFY -> HDN_BEGINTRACK notifications (Win XP)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>LV_Colors_SubclassProc(H, M, W, L, S, R) {
#^^^^^^^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                       ^ source.ahk functionline.ahk variable.def.ahk
#                        ^^ source.ahk functionline.ahk
#                          ^ source.ahk functionline.ahk variable.def.ahk
#                           ^^ source.ahk functionline.ahk
#                             ^ source.ahk functionline.ahk variable.def.ahk
#                              ^^ source.ahk functionline.ahk
#                                ^ source.ahk functionline.ahk variable.def.ahk
#                                 ^^ source.ahk functionline.ahk
#                                   ^ source.ahk functionline.ahk variable.def.ahk
#                                    ^^ source.ahk functionline.ahk
#                                      ^ source.ahk functionline.ahk variable.def.ahk
#                                       ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                        ^ source.ahk functionline.ahk
#                                         ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>Static HDN_BEGINTRACKA := -306
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^^^ source.ahk constant.numeric.ahk
>Static HDN_BEGINTRACKW := -326
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^^^ source.ahk constant.numeric.ahk
>Static WM_NOTIFY := 0x4E
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^^^^ source.ahk constant.numeric.ahk
>Critical, % LV_Colors.Critical
#^^^^^^^^ source.ahk keyword.control.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^ source.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^^^ source.ahk variable.def.ahk
>If (M = WM_NOTIFY) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>; HDN_BEGINTRACK -------------------------------------------------------------------------------------------------
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>C := NumGet(L + (A_PtrSize * 2), 0, "Int")
#^ source.ahk variable.def.ahk
# ^ source.ahk
#  ^^ source.ahk keyword.operator.assignment.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^ source.ahk constant.language.ahk
#                          ^ source.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^ source.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>If (C = HDN_BEGINTRACKA) || (C = HDN_BEGINTRACKW) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.assignment.ahk
#                                ^ source.ahk
#                                 ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>Return True
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Return DllCall("Comctl32.dll\DefSubclassProc", "Ptr", H, "UInt", M, "Ptr", W, "Ptr", L, "UInt")
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                ^^^ source.ahk string.quoted.double.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                          ^^^^ source.ahk string.quoted.double.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                               ^ source.ahk punctuation.ahk
#                                                                ^ source.ahk
#                                                                 ^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk
#                                                                           ^ source.ahk variable.def.ahk
#                                                                            ^ source.ahk punctuation.ahk
#                                                                             ^ source.ahk
#                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                               ^^^ source.ahk string.quoted.double.ahk
#                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                   ^ source.ahk punctuation.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk variable.def.ahk
#                                                                                      ^ source.ahk punctuation.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                         ^^^^ source.ahk string.quoted.double.ahk
#                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                              ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; ======================================================================================================================
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;start of functions start
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>URItoPath(vPathUrl)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>vChars := 300 ;300 is an arbitrary number
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^^^ source.ahk constant.numeric.ahk
#             ^ source.ahk comment.line.semicolon.ahk
#              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#               ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>VarSetCapacity(vPath, vChars*2)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk keyword.operator.arithmetic.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>DllCall("shlwapi\PathCreateFromUrl" (A_IsUnicode?"W":"A"), "Str",vPathUrl, "Str",vPath, "UInt*",vChars, "UInt",0)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                  ^ source.ahk string.quoted.double.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^^^^^^^^ source.ahk variable.def.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^^^^^ source.ahk variable.def.ahk
#                                                                                      ^ source.ahk punctuation.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                         ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                ^^^^^^ source.ahk variable.def.ahk
#                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                       ^ source.ahk
#                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                         ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                              ^ source.ahk punctuation.ahk
#                                                                                                               ^ source.ahk constant.numeric.ahk
#                                                                                                                ^ source.ahk punctuation.bracket.ahk
>return vPath
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>decodeStrAs(source,encoding)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>;example: "Ã©" -> "é"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>sourceSize := VarSetCapacity(target,StrLen(source),0)
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^^^^^^ source.ahk support.function.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk constant.numeric.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
>Loop % sourceSize
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^ source.ahk variable.def.ahk
>NumPut(NumGet(&source, A_Index*2-1-1, "UChar"), &target, A_Index-1, "UChar")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk keyword.operator.arithmetic.ahk
#                               ^ source.ahk constant.numeric.ahk
#                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                                 ^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^^^ source.ahk constant.language.ahk
#                                                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                 ^ source.ahk constant.numeric.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^^^^ source.ahk string.quoted.double.ahk
#                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                           ^ source.ahk punctuation.bracket.ahk
>return StrGet(&target, encoding)
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>sortArrByKey(ar, byref key,byref reverse:=false) {
#^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#            ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#             ^^ source.ahk functionline.ahk variable.def.ahk
#               ^^ source.ahk functionline.ahk
#                 ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                      ^ source.ahk functionline.ahk
#                       ^^^ source.ahk functionline.ahk variable.def.ahk
#                          ^ source.ahk functionline.ahk
#                           ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                ^ source.ahk functionline.ahk
#                                 ^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                        ^^ source.ahk functionline.ahk
#                                          ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                               ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                                ^ source.ahk functionline.ahk
#                                                 ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>str=
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk keyword.operator.assignment.ahk
>for k,v in ar {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>str.=v[key] "+" k "|"
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^ source.ahk string.quoted.double.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk
#                ^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>length:=ar.Length()
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>firstValue:=ar[1][key]
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>if firstValue is number
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^ source.ahk keyword.other.ahk
#                ^ source.ahk
#                 ^^^^^^ source.ahk keyword.other.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>sortType := "N"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^ source.ahk string.quoted.double.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Sort, str, % "D|" sortType (reverse ? "R" : "")
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^ source.ahk string.quoted.double.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^ source.ahk entity.name.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
>finalAr:=[]
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>finalAr.SetCapacity(length)
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^^^^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>barPos:=1
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk constant.numeric.ahk
>; if (reverse) {
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>loop %length% {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>plusPos:=InStr(str, "+",, barPos)
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>barPos:=InStr(str, "|",, plusPos)
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>
>num:=SubStr(str, plusPos + 1, barPos - plusPos - 1)
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk
#                           ^ source.ahk constant.numeric.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk keyword.operator.arithmetic.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk constant.numeric.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>finalAr.Insert(1,ar[num])
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>;} else {
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; loop %length% {
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; plusPos:=InStr(str, "+",, barPos)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; barPos:=InStr(str, "|",, plusPos)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
>; num:=SubStr(str, plusPos + 1, barPos - plusPos - 1)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; finalAr.Push(ar[num])
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; }
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^ source.ahk comment.line.semicolon.ahk
>; }
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^ source.ahk comment.line.semicolon.ahk
>
>return finalAr
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>hashFiles(algorithm)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global EcurrentDir1, EcurrentDir2, whichSide
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
>finalStr=
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
>for notUsed, name in getSelectedNames() {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk keyword.other.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>finalStr.=getHash(algorithm, EcurrentDir%whichSide% "\" name) "`n"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^ source.ahk entity.name.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                   ^ source.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                     ^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                       ^ source.ahk
#                                                        ^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
#                                                             ^ source.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                               ^^ source.ahk string.quoted.double.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (finalStr) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>StringTrimRight, finalStr, finalStr, 1 ;remove the last "`n" from the end
#^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk constant.numeric.ahk
#                                      ^ source.ahk comment.line.semicolon.ahk
#                                       ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>clipboard:=finalStr
#^^^^^^^^^ source.ahk constant.language.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
>cMsgbox(finalStr)
#^^^^^^^ source.ahk entity.name.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>p("couldn't get hash")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>getHash(algorithm, Apath)
#^^^^^^^ source.ahk entity.name.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>FileGetAttrib, fileAttrib, %Apath%
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>if (InStr(fileAttrib, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>return "can't hash Directory"
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>cmdOutput:=RunCmd("certutil -hashfile """ Apath """ " algorithm)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^ source.ahk entity.name.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                      ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk
#                                          ^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                 ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                   ^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk
#                                                      ^^^^^^^^^ source.ahk variable.def.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
>return StrSplit(cmdOutput, "`n", "`r")[2]
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>generateRandomUniqueName(Apath, byref isDir:="")
#^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^^ source.ahk keyword.other.ahk
#                                     ^ source.ahk
#                                      ^^^^^ source.ahk variable.def.ahk
#                                           ^^ source.ahk keyword.operator.assignment.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>inputFileExist:=fileExist(Apath)
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>if (inputFileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>if (InStr(inputFileExist, "D"))
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                           ^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>isDir:=true
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^ source.ahk constant.language.ahk
>SplitPath, Apath, OutFileName, OutDir, OutExtension, OutNameNoExt, OutDrive
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^ source.ahk
#                                                                   ^^^^^^^^ source.ahk variable.def.ahk
>loop {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>if (isDir) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.bracket.ahk
>tryPath:=OutDir "\" OutNameNoExt "_" randomName(6)
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk constant.numeric.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>tryPath:=OutDir "\" OutNameNoExt "_" randomName(6) "." OutExtension
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk constant.numeric.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                    ^ source.ahk string.quoted.double.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                      ^ source.ahk
#                                                       ^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (!FileExist(tryPath)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>return tryPath
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>p("input path does not exist")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>randomName(length)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>chars:=[".", "_", "-", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^ source.ahk string.quoted.double.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                 ^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                           ^ source.ahk string.quoted.double.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                             ^ source.ahk punctuation.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                ^ source.ahk string.quoted.double.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                       ^ source.ahk punctuation.ahk
#                                                                        ^ source.ahk
#                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                          ^ source.ahk string.quoted.double.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                            ^ source.ahk punctuation.ahk
#                                                                             ^ source.ahk
#                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                               ^ source.ahk string.quoted.double.ahk
#                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                 ^ source.ahk punctuation.ahk
#                                                                                  ^ source.ahk
#                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                    ^ source.ahk string.quoted.double.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                      ^ source.ahk punctuation.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                         ^ source.ahk string.quoted.double.ahk
#                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                           ^ source.ahk punctuation.ahk
#                                                                                            ^ source.ahk
#                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                              ^ source.ahk string.quoted.double.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                   ^ source.ahk string.quoted.double.ahk
#                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                      ^ source.ahk
#                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                        ^ source.ahk string.quoted.double.ahk
#                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                          ^ source.ahk punctuation.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                             ^ source.ahk string.quoted.double.ahk
#                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                                ^ source.ahk
#                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                  ^ source.ahk string.quoted.double.ahk
#                                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                                     ^ source.ahk
#                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                       ^ source.ahk string.quoted.double.ahk
#                                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                         ^ source.ahk punctuation.ahk
#                                                                                                                          ^ source.ahk
#                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                            ^ source.ahk string.quoted.double.ahk
#                                                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                              ^ source.ahk punctuation.ahk
#                                                                                                                               ^ source.ahk
#                                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                 ^ source.ahk string.quoted.double.ahk
#                                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                                                    ^ source.ahk
#                                                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                      ^ source.ahk string.quoted.double.ahk
#                                                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                                                         ^ source.ahk
#                                                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                           ^ source.ahk string.quoted.double.ahk
#                                                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                             ^ source.ahk punctuation.ahk
#                                                                                                                                              ^ source.ahk
#                                                                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                  ^ source.ahk punctuation.ahk
#                                                                                                                                                   ^ source.ahk
#                                                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                     ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                       ^ source.ahk punctuation.ahk
#                                                                                                                                                        ^ source.ahk
#                                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                          ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                                                                             ^ source.ahk
#                                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                               ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                 ^ source.ahk punctuation.ahk
#                                                                                                                                                                  ^ source.ahk
#                                                                                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                    ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                                                                                       ^ source.ahk
#                                                                                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                           ^ source.ahk punctuation.ahk
#                                                                                                                                                                            ^ source.ahk
#                                                                                                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                              ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                                                                                                 ^ source.ahk
#                                                                                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                   ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                                                                                      ^ source.ahk
#                                                                                                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                        ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                          ^ source.ahk punctuation.ahk
#                                                                                                                                                                                           ^ source.ahk
#                                                                                                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                             ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                ^ source.ahk
#                                                                                                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                  ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                     ^ source.ahk
#                                                                                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                       ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                         ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                          ^ source.ahk
#                                                                                                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                            ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                              ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                               ^ source.ahk
#                                                                                                                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                 ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                    ^ source.ahk
#                                                                                                                                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                      ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                         ^ source.ahk
#                                                                                                                                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                           ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                             ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                              ^ source.ahk
#                                                                                                                                                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                  ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                   ^ source.ahk
#                                                                                                                                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                     ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                       ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                        ^ source.ahk
#                                                                                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                          ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                             ^ source.ahk
#                                                                                                                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                               ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                 ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                  ^ source.ahk
#                                                                                                                                                                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                    ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                       ^ source.ahk
#                                                                                                                                                                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                           ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                            ^ source.ahk
#                                                                                                                                                                                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                              ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                 ^ source.ahk
#                                                                                                                                                                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                   ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                      ^ source.ahk
#                                                                                                                                                                                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                        ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                          ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                           ^ source.ahk
#                                                                                                                                                                                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                             ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                ^ source.ahk
#                                                                                                                                                                                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                  ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                     ^ source.ahk
#                                                                                                                                                                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                       ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                         ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                          ^ source.ahk
#                                                                                                                                                                                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                            ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                              ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                               ^ source.ahk
#                                                                                                                                                                                                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                 ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                    ^ source.ahk
#                                                                                                                                                                                                                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                      ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                         ^ source.ahk
#                                                                                                                                                                                                                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                           ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                             ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                              ^ source.ahk
#                                                                                                                                                                                                                                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                                ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                                  ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                                   ^ source.ahk
#                                                                                                                                                                                                                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                                     ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                                       ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                                        ^ source.ahk
#                                                                                                                                                                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                                          ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                                             ^ source.ahk
#                                                                                                                                                                                                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                                               ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                                                 ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                                                  ^ source.ahk
#                                                                                                                                                                                                                                                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                                                    ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                                                                                                                                                                                                                                                       ^ source.ahk
#                                                                                                                                                                                                                                                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                                                                                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                                                                                                                                                                           ^ source.ahk punctuation.bracket.ahk
>
>charsLength:=chars.Length()
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>
>loop % length
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>Random, randInt , 1, charsLength
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^ source.ahk variable.def.ahk
>strng.=chars[randInt]
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return strng
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>loadSettings()
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>FileRead, settingsTxt, %A_AppData%\ahk_explorer_settings\settings.txt
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk constant.language.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^^^^ source.ahk variable.def.ahk
#                                                                 ^ source.ahk
#                                                                  ^^^ source.ahk variable.def.ahk
>settingsArr:=StrSplit(settingsTxt, "`n", "`r")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>peazipPath:=settingsArr[1]
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk constant.numeric.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>vscodePath:=settingsArr[2]
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk constant.numeric.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>BGColorOfSelectedPane:=settingsArr[3]
#^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>Ahk2ExePath:=settingsArr[4]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>spekPath:=settingsArr[5]
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>removeFromSizes(byref name, byref whichSide)
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^ source.ahk keyword.other.ahk
#                     ^ source.ahk
#                      ^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^^^^^ source.ahk keyword.other.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>for k, obj in sortedSizes%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.other.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>if (obj["name"]=name) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>sortedSizes%whichSide%.Remove(k)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>addToSizes(byref name, byref size, byref whichSide)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk
#                 ^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^ source.ahk keyword.other.ahk
#                            ^ source.ahk
#                             ^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^ source.ahk keyword.other.ahk
#                                        ^ source.ahk
#                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>sortedSizes%whichSide%.Push({size:size,name:name})
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>sortedSizes%whichSide%:=sortArrByKey(sortedSizes%whichSide%,"size")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                           ^ source.ahk punctuation.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
>; sortedSizes%whichSide%:=sortArrByKey(sortedSizes%whichSide%,"size",true)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>sortedBySize%whichSide%:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>for k, v in sortedSizes%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>sortedBySize%whichSide%.Push(v["name"])
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>sortSizes()
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>
>sortedSizes%whichSide%:=[]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>for name, obj in stuffByName%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^ source.ahk keyword.other.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>sortedSizes%whichSide%.Push({size:obj["size"],name:name})
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>sortedSizes%whichSide%:=sortArrByKey(sortedSizes%whichSide%,"size")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                           ^ source.ahk punctuation.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
>; sortedSizes%whichSide%:=sortArrByKey(sortedSizes%whichSide%,"size",true)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>sortedBySize%whichSide%:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>for k, v in sortedSizes%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>sortedBySize%whichSide%.Push(v["name"])
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>
>bothSameDir(whichSide)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>otherSide:=(whichSide=1) ? 2 : 1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk constant.numeric.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk constant.numeric.ahk
>if (EcurrentDir%whichSide%=EcurrentDir%otherSide%)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^ source.ahk keyword.operator.assignment.ahk
#                           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>return otherSide
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
>return false
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>revealFileInExplorer(folderPath, files)
#^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>COM_CoUninitialize()
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>COM_CoInitialize()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>DllCall("shell32\SHParseDisplayName", "Wstr", folderPath, "Uint", 0, "Ptr*", pidl, "Uint", 0, "Uint", 0)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                           ^^^^ source.ahk string.quoted.double.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk constant.numeric.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^ source.ahk string.quoted.double.ahk
#                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^ source.ahk
#                                                                             ^^^^ source.ahk variable.def.ahk
#                                                                                 ^ source.ahk punctuation.ahk
#                                                                                  ^ source.ahk
#                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                    ^^^^ source.ahk string.quoted.double.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                         ^ source.ahk punctuation.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^ source.ahk constant.numeric.ahk
#                                                                                            ^ source.ahk punctuation.ahk
#                                                                                             ^ source.ahk
#                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                               ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                     ^ source.ahk
#                                                                                                      ^ source.ahk constant.numeric.ahk
#                                                                                                       ^ source.ahk punctuation.bracket.ahk
>DllCall("shell32\SHBindToObject","Ptr",0,"Ptr",pidl,"Ptr",0,"Ptr",GUID4String(IID_IShellFolder,"{000214E6-0000-0000-C000-000000000046}"),"Ptr*",pIShellFolder)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk constant.numeric.ahk
#                                                           ^ source.ahk punctuation.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^ source.ahk string.quoted.double.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                             ^ source.ahk punctuation.bracket.ahk
#                                                                              ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                              ^ source.ahk punctuation.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                          ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                                                                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                                             ^ source.ahk punctuation.bracket.ahk
>length:=files.Length()
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>VarSetCapacity(apidl, length * A_PtrSize, 0)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^ source.ahk keyword.operator.arithmetic.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^ source.ahk constant.language.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>for k, v in files {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>;IShellFolder:ParseDisplayName
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>DllCall(VTable(pIShellFolder,3),"Ptr", pIShellFolder,"Ptr",win_hwnd,"Ptr",0,"Wstr",v,"Uint*",0,"Ptr*",tmpPIDL,"Uint*",0)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^^^^^^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk constant.numeric.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                  ^ source.ahk punctuation.ahk
#                                                                                   ^ source.ahk variable.def.ahk
#                                                                                    ^ source.ahk punctuation.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                      ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                            ^ source.ahk punctuation.ahk
#                                                                                             ^ source.ahk constant.numeric.ahk
#                                                                                              ^ source.ahk punctuation.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                      ^^^^^^^ source.ahk variable.def.ahk
#                                                                                                             ^ source.ahk punctuation.ahk
#                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                               ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                      ^ source.ahk constant.numeric.ahk
#                                                                                                                       ^ source.ahk punctuation.bracket.ahk
>NumPut(tmpPIDL, apidl, (k - 1)*A_PtrSize, "Ptr")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^ source.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk keyword.operator.arithmetic.ahk
#                               ^^^^^^^^^ source.ahk constant.language.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>DllCall("shell32\SHOpenFolderAndSelectItems", "Ptr", pidl, "UINT", length, "Ptr", &apidl, "Uint", 0)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                            ^^^^ source.ahk string.quoted.double.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^ source.ahk
#                                                                   ^^^^^^ source.ahk variable.def.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                   ^^^^^ source.ahk variable.def.ahk
#                                                                                        ^ source.ahk punctuation.ahk
#                                                                                         ^ source.ahk
#                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                           ^^^^ source.ahk string.quoted.double.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^ source.ahk constant.numeric.ahk
#                                                                                                   ^ source.ahk punctuation.bracket.ahk
>COM_CoUninitialize()
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>COM_CoInitialize()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>Return	DllCall("ole32\CoInitialize", "Uint", 0)
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk constant.numeric.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>COM_CoUninitialize()
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>DllCall("ole32\CoUninitialize")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>send_stringToFolderWatcher(whichFolderWatcher, num, stringToSend:="")
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^^ source.ahk keyword.operator.assignment.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                    ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>stringToSend .= "|" num
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk variable.def.ahk
>VarSetCapacity(message, size := StrPut(stringToSend, "UTF-16")*2, 0)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^^ source.ahk keyword.operator.assignment.ahk
#                               ^ source.ahk
#                                ^^^^^^ source.ahk support.function.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^^^^^^ source.ahk string.quoted.double.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
#                                                              ^ source.ahk keyword.operator.arithmetic.ahk
#                                                               ^ source.ahk constant.numeric.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk constant.numeric.ahk
#                                                                   ^ source.ahk punctuation.bracket.ahk
>StrPut(stringToSend, &message, "UTF-16")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>VarSetCapacity(COPYDATASTRUCT, A_PtrSize*3)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^ source.ahk constant.language.ahk
#                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>NumPut(size, COPYDATASTRUCT, A_PtrSize, "UInt")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^^^^^ source.ahk constant.language.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
>NumPut(&message, COPYDATASTRUCT, A_PtrSize*2)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^^^^^^^^^ source.ahk constant.language.ahk
#                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                           ^ source.ahk constant.numeric.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>DetectHiddenWindows, On
#^^^^^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^ source.ahk keyword.other.ahk
>SetTitleMatchMode, 2
#^^^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk constant.numeric.ahk
>SendMessage, WM_COPYDATA := 0x4A,, &COPYDATASTRUCT,, FolderWatcher%whichFolderWatcher%.ahk ahk_class AutoHotkey
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk
#                            ^^^^ source.ahk constant.numeric.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                   ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                      ^ source.ahk
#                                                                                       ^^^ source.ahk variable.def.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^^^^^^^^^ source.ahk keyword.other.ahk
#                                                                                                    ^ source.ahk
#                                                                                                     ^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>startWatchFolder(byref whichSide, byref AcurrentDir)
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk
#                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^ source.ahk keyword.other.ahk
#                                       ^ source.ahk
#                                        ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (whichSide=1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk constant.numeric.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>If !WatchFolder(AcurrentDir, "Watch1", 0, 3) { ;files and folders
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk comment.line.semicolon.ahk
#                                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                ^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>MsgBox, 0, Error, Call of WatchFolder() failed!
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^ source.ahk constant.numeric.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk
#                                        ^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk keyword.operator.arithmetic.ahk
>Return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>send_stringToFolderWatcher(whichSide, 1, AcurrentDir) ;1 for watch 2 for stop
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
#                                                     ^ source.ahk comment.line.semicolon.ahk
#                                                      ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                       ^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>stopWatchFolder(byref whichSide, byref dirToStopWatching)
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^ source.ahk keyword.other.ahk
#                     ^ source.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^^^^^ source.ahk keyword.other.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (whichSide=1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk constant.numeric.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>WatchFolder(dirToStopWatching, "**DEL")
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>send_stringToFolderWatcher(whichSide, 2, dirToStopWatching) ;1 for watch 2 for stop
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^ source.ahk comment.line.semicolon.ahk
#                                                            ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                             ^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Watch1(Folder, Changes) {
#^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#       ^^^^^^ source.ahk functionline.ahk variable.def.ahk
#             ^^ source.ahk functionline.ahk
#               ^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                       ^ source.ahk functionline.ahk
#                        ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>For Each, Change In Changes {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.other.ahk
#                   ^ source.ahk
#                    ^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>WatchN(1,Change.Action, Change.OldName, Change.Name)
#^^^^^^ source.ahk entity.name.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk constant.numeric.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk
#                                               ^^^^ source.ahk support.function.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>WatchN(whichSide,Byref Action,Byref OldName,Byref Name)
#^^^^^^ source.ahk entity.name.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.ahk
#                 ^^^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^^^ source.ahk keyword.other.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^^^^^ source.ahk keyword.other.ahk
#                                                 ^ source.ahk
#                                                  ^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global EcurrentDir1,EcurrentDir2,vlistView1,vlistView2
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^^^^^^^^^^ source.ahk variable.def.ahk
>otherSide:=bothSameDir(whichSide)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>GuiControl, -Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>if (otherSide)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
>GuiControl, -Redraw, vlistView%otherSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>
>if (Action=1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>fileAdded(whichSide, Name)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>} else if (Action=2) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>fileDeleted(whichSide, Name)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>if (otherSide) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>fileDeleted(otherSide, Name)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (Action=4) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>SplitPath, % Name, OutFileNameNew, OutDirNew
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^ source.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
>SplitPath, % OldName, OutFileNameOld, OutDirOld
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^ source.ahk
#             ^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^^^ source.ahk variable.def.ahk
>if (OutDirNew=EcurrentDir%whichSide%) { ;renamed
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk comment.line.semicolon.ahk
#                                        ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                         ^^^^^^^ source.ahk comment.line.semicolon.ahk
>fileRenamed(whichSide, OutFileNameOld, OutFileNameNew)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>if (otherSide) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>fileRenamed(otherSide, OutFileNameOld, OutFileNameNew)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (OutDirOld=EcurrentDir%otherSide%) { ;moved from other Side
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk keyword.operator.assignment.ahk
#                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk comment.line.semicolon.ahk
#                                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                ^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>fileAdded(whichSide, Name)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>fileDeleted(otherSide, OldName)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>} else { ;moved
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk comment.line.semicolon.ahk
#         ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#          ^^^^^ source.ahk comment.line.semicolon.ahk
>
>fileAdded(whichSide, Name)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>if (otherSide) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>fileAdded(otherSide, Name)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>GuiControl, +Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>if (otherSide)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
>GuiControl, +Redraw, vlistView%otherSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>fileRenamed(whichSide, Byref renameFrom,Byref renameInto)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^ source.ahk keyword.other.ahk
#                            ^ source.ahk
#                             ^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^^^^^ source.ahk keyword.other.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>clipboard:=EcurrentDir%whichSide% "\" renameInto
#^^^^^^^^^ source.ahk constant.language.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^^^^ source.ahk variable.def.ahk
>FileGetSize, outputSize, % EcurrentDir%whichSide% "\" renameInto
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                   ^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk
#                                                      ^^^^^^^^^^ source.ahk variable.def.ahk
>obj:=stuffByName%whichSide%[renameFrom]
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>stuffByName%whichSide%[renameInto]:=stuffByName%whichSide%[renameFrom]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^^ source.ahk keyword.operator.assignment.ahk
#                                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
>stuffByName%whichSide%.Delete(renameFrom)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk entity.name.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>stuffByName%whichSide%[renameInto]["size"]:=outputSize
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^^ source.ahk keyword.operator.assignment.ahk
#                                            ^^^^^^^^^^ source.ahk variable.def.ahk
>
>;rename in sortedByDate
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>for k, v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>if (v=renameFrom) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>sortedByDate%whichSide%[k]:=renameInto
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^ source.ahk keyword.operator.assignment.ahk
#                            ^^^^^^^^^^ source.ahk variable.def.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>removeFromSizes(renameFrom, whichSide)
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>addToSizes(renameInto,outputSize, whichSide)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>
>rowNums:=LV_GetCount()
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>loop % rowNums {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>LV_GetText(OutputVar,A_Index,2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^^^ source.ahk constant.language.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>if (OutputVar=renameFrom) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>calculateStuff(,outputSize,OutputVar,A_Index)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.ahk
#                ^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^^^^^^^ source.ahk constant.language.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>
>LV_Modify(A_Index,, ,renameInto,,,formattedBytes,bytes)
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>
>justOneIcon(renameInto,A_Index,whichSide)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>fileAdded(whichSide, Byref path) {
#^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#         ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#          ^^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                   ^^ source.ahk functionline.ahk
#                     ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                          ^ source.ahk functionline.ahk
#                           ^^^^ source.ahk functionline.ahk variable.def.ahk
#                               ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                ^ source.ahk functionline.ahk
#                                 ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>SplitPath, path, OutFileName
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
>sortWithAr%whichSide%:=[]
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>FileGetSize, outputSize, %path%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
>FileGetAttrib, OutputAttri , %path%
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                              ^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>stuffByName%whichSide%[OutFileName]:={date:A_Now,attri:OutputAttri,size:outputSize}
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^^ source.ahk keyword.operator.assignment.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^^^^ source.ahk keyword.other.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^^^^^ source.ahk constant.language.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^^^^ source.ahk variable.def.ahk
#                                                                       ^ source.ahk punctuation.ahk
#                                                                        ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                  ^ source.ahk punctuation.bracket.ahk
>
>sortedByDate%whichSide%.InsertAt(1,OutFileName)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk
#                        ^^^^^^^^ source.ahk support.function.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
>
>addToSizes(OutFileName,outputSize,whichSide)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>
>whereToAddFile(whichSide, OutFileName, A_Now,outputSize)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^ source.ahk constant.language.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>
>if (bothSameDir(whichSide)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>stuffByName%otherSide%[OutFileName]:=stuffByName%whichSide%[OutFileName]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^^ source.ahk keyword.operator.assignment.ahk
#                                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                       ^ source.ahk punctuation.bracket.ahk
>sortedBySize%otherSide%:=sortedBySize%whichSide%.Clone()
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^ source.ahk
#                                                 ^^^^^ source.ahk support.function.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>sortedByDate%otherSide%:=sortedByDate%whichSide%.Clone()
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^ source.ahk
#                                                 ^^^^^ source.ahk support.function.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>whereToAddFile(otherSide, OutFileName, A_Now,outputSize)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^ source.ahk constant.language.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>fileDeleted(Byref whichSide, Byref path)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^ source.ahk keyword.other.ahk
#                                  ^ source.ahk
#                                   ^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>SplitPath, path, OutFileName
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl, -Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>
>rowNums:=LV_GetCount()
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>loop % rowNums {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>LV_GetText(OutputVar,A_Index,2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^^^ source.ahk constant.language.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>if (OutputVar=OutFileName) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>
>LV_Delete(A_Index)
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>if !LV_GetNext(1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>if (A_Index=rowNums and A_Index>1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk constant.language.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk
#                        ^^^^^^^ source.ahk constant.language.ahk
#                               ^ source.ahk keyword.operator.comparison.ahk
#                                ^ source.ahk constant.numeric.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>LV_Modify(A_Index-1, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk comment.line.semicolon.ahk
#                                           ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                            ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>LV_Modify(A_Index, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk comment.line.semicolon.ahk
#                                         ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                          ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; GuiControl, +Redraw, vlistView%whichSide%
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>obj:=stuffByName%whichSide%[OutFileName]
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>
>;remove name from sortedByDate
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>for k, v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>if (v=OutFileName) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>sortedByDate%whichSide%.Remove(k)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk
#                        ^^^^^^ source.ahk support.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>removeFromSizes(OutFileName,whichSide)
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>
>stuffByName%whichSide%.Delete(OutFileName)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk entity.name.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>whereToAddFile(byref whichSide, byref OutFileName,byref date,byref size) {
#^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#              ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#               ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                    ^ source.ahk functionline.ahk
#                     ^^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                              ^^ source.ahk functionline.ahk
#                                ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                     ^ source.ahk functionline.ahk
#                                      ^^^^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                 ^ source.ahk functionline.ahk
#                                                  ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                       ^ source.ahk functionline.ahk
#                                                        ^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                            ^ source.ahk functionline.ahk
#                                                             ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                                  ^ source.ahk functionline.ahk
#                                                                   ^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                                       ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                                                        ^ source.ahk functionline.ahk
#                                                                         ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>insertNum:=0
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>
>if (whichsort%whichSide%="newOld") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (focused="searchCurrentDirEdit" or focused="listViewInSearch") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk
#                                   ^^ source.ahk keyword.other.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk keyword.operator.assignment.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
>if (SubStr(searchString%whichSide%, 1, 1)!=".") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                          ^ source.ahk keyword.operator.assignment.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>counter:=0
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>objectToSort:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>for k,v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (counter>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>SplitPath, v,,,, OutNameNoExt
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>pos:=InStr(OutNameNoExt, searchString%whichSide%)
#^^^ source.ahk keyword.other.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>if (pos) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk keyword.other.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
>counter++
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
>objectToSort.Push({name:v,pos:pos})
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^^^ source.ahk keyword.other.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^ source.ahk keyword.other.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>objectToSort:=ObjectSort(objectToSort,"pos")
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>
>for k,v in objectToSort {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>name:=v["name"]
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk punctuation.bracket.ahk
>if (name=OutFileName) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>insertNum:=k
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>searchFoldersOnly:=(searchString%whichSide%=".") ? true : false
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^ source.ahk keyword.operator.assignment.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                             ^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^ source.ahk
#                                                   ^^^^ source.ahk constant.language.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^^^^^ source.ahk constant.language.ahk
>if (searchFoldersOnly) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>counter:=0
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>for k,v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (v=OutFileName) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>if (counter>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>SplitPath, v,,, OutExtension
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^ source.ahk variable.def.ahk
>if (!OutExtension) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>insertNum:=k
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>searchStringBak%whichSide%:=SubStr(searchString%whichSide%, 2)
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^ source.ahk keyword.operator.assignment.ahk
#                            ^^^^^^ source.ahk support.function.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk constant.numeric.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
>counter:=0
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>objectToSort:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>for k,v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (counter>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>SplitPath, v,,, OutExtension
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^ source.ahk variable.def.ahk
>pos:=InStr(OutExtension, searchStringBak%whichSide%)
#^^^ source.ahk keyword.other.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>if (pos) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk keyword.other.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
>counter++
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
>objectToSort.Push({name:v,pos:pos})
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^^^ source.ahk keyword.other.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^ source.ahk keyword.other.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>objectToSort:=ObjectSort(objectToSort,"pos")
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>for k,v in objectToSort {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>name:=v["name"]
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk punctuation.bracket.ahk
>if (name=OutFileName) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>insertNum:=k
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>insertNum:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (whichsort%whichSide%="oldNew") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^ source.ahk keyword.operator.assignment.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>rowNums:=LV_GetCount()
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>insertNum:=rowNums+1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.arithmetic.ahk
#                   ^ source.ahk constant.numeric.ahk
>} else if (whichsort%whichSide%="bigSmall") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^ source.ahk keyword.operator.assignment.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^^^^^^^ source.ahk string.quoted.double.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>for k, v in sortedBySize%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>if (k>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.comparison.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>if (v=OutFileName) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>insertNum:=k
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (whichsort%whichSide%="smallBig") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^ source.ahk keyword.operator.assignment.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^^^^^^^ source.ahk string.quoted.double.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>lengthAddedOne:=sortedBySize%whichSide%.Length()+1
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk
#                                        ^^^^^^ source.ahk support.function.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                                 ^ source.ahk constant.numeric.ahk
>for k in sortedBySize%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.other.ahk
#        ^ source.ahk
#         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>v:=sortedBySize%whichSide%[lengthAddedOne-k]
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                          ^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>if (k>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.comparison.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>if (v=OutFileName) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>insertNum:=k
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (insertNum) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>insertRow(whichSide, OutFileName, insertNum, date,size)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^^^^ source.ahk keyword.other.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>insertRow(byref whichSide, byref OutFileName,byref row,byref date,byref size)
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^ source.ahk keyword.other.ahk
#               ^ source.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^^^^^ source.ahk keyword.other.ahk
#                                ^ source.ahk
#                                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^^^^^ source.ahk keyword.other.ahk
#                                                  ^ source.ahk
#                                                   ^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^^^^^ source.ahk keyword.other.ahk
#                                                            ^ source.ahk
#                                                             ^^^^ source.ahk keyword.other.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^^^^^ source.ahk keyword.other.ahk
#                                                                       ^ source.ahk
#                                                                        ^^^^ source.ahk variable.def.ahk
#                                                                            ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>calculateStuff(date,size,OutFileName,row)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>GuiControl, -Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_Insert(row,,,OutFileName,var1,var2,formattedBytes,bytes)
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk punctuation.ahk
#                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
>LV_Colors.Cell(ListviewHwnd%whichSide%,row,3,color)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk constant.numeric.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^^^^^ source.ahk keyword.other.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>
>justOneIcon(OutFileName,row,whichSide)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>GuiControl, +Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>pasteFile()
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>; action:=false
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (DllCall("IsClipboardFormatAvailable", "UInt", CF_HDROP := 15)) { ; file being copied
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk
#                                                           ^^ source.ahk keyword.operator.assignment.ahk
#                                                             ^ source.ahk
#                                                              ^^ source.ahk constant.numeric.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                    ^ source.ahk comment.line.semicolon.ahk
#                                                                     ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                      ^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (DllCall("IsClipboardFormatAvailable", "UInt", dropEffectFormat)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
#                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                    ^ source.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
>if (DllCall("OpenClipboard", "Ptr", A_ScriptHwnd)) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>if (data := DllCall("GetClipboardData", "UInt", dropEffectFormat, "Ptr")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk
#            ^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                   ^^^ source.ahk string.quoted.double.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                        ^ source.ahk punctuation.bracket.ahk
#                                                                         ^ source.ahk
#                                                                          ^ source.ahk punctuation.bracket.ahk
>if (effect := DllCall("GlobalLock", "Ptr", data, "UInt*")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                  ^^^^^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
#                                                         ^ source.ahk punctuation.bracket.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
>; action:="copy"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (effect & DROPEFFECT_COPY) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk
#             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>files:=StrSplit(clipboard, "`n","`r")
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^ source.ahk constant.language.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>for k, v in files {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>fileExist:=FileExist(v)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>if (fileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>SplitPath, v , OutFileName
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
>if (InStr(fileExist, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>FileCopyDir, %v%, % EcurrentDir%whichSide% "\" OutFileName
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>FileCopy, %v%, % EcurrentDir%whichSide%
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (ErrorLevel) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>p("couldn't copy file " v)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; action:="move"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>else if (effect & DROPEFFECT_MOVE) {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>files:=StrSplit(clipboard, "`n","`r")
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^ source.ahk constant.language.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>if (files.Length()) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>for k, v in files {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>fileExist:=FileExist(v)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>if (fileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>SplitPath, v , OutFileName
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
>if (InStr(fileExist, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>FileMoveDir, %v%, % EcurrentDir%whichSide% "\" OutFileName
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>FileMove, %v%, % EcurrentDir%whichSide%
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (ErrorLevel) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk constant.language.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>p("couldn't move file " v)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>SoundPlay, *-1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>DllCall("GlobalUnlock", "Ptr", data)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>DllCall("CloseClipboard")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>
>paddedNumber(number, howManyChars)
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>VarSetCapacity(ZeroPaddedNumber, 20) ; Ensure the variable is large enough to accept the new string.
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk comment.line.semicolon.ahk
#                                     ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>DllCall("wsprintf", "Str", ZeroPaddedNumber, "Str", "%0" howManyChars "d", "Int", number, "Cdecl") ; Requires the Cdecl calling convention.
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^^^ source.ahk string.quoted.double.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                     ^^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                       ^ source.ahk string.quoted.double.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^^^^^^ source.ahk keyword.other.ahk
#                                                                                        ^ source.ahk punctuation.ahk
#                                                                                         ^ source.ahk
#                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                           ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                                                  ^ source.ahk comment.line.semicolon.ahk
#                                                                                                   ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>return ZeroPaddedNumber
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>setWhichSideFromDir(dir)
#^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>if (EcurrentDir1=dir) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk keyword.operator.assignment.ahk
#                 ^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>whichSide:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>} else if (EcurrentDir2=dir) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
#                        ^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>whichSide:=2
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>getMultiRenameNames()
#^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, multiRenameGui:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^^^^^^^ source.ahk keyword.other.ahk
>gui, submit, nohide
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk keyword.other.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
>
>startingNums:=StrSplit(multiRenameStartingNums, ",")
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^ source.ahk support.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                 ^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>asteriskLength:=StrSplit(multiRenameTheName, "*").Length()
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^ source.ahk support.function.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
#                                                         ^ source.ahk punctuation.bracket.ahk
>previewNames:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>for k, v in namesToMultiRename {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>nameInstance:=multiRenameTheName
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>continueChar:=true
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^ source.ahk constant.language.ahk
>charIndex:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>
>length:=StrLen(nameInstance)
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>lessGreaters:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>asterisksAndQmarks:=[]
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>while (charIndex<=length) {
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk keyword.operator.comparison.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>char:=SubStr(nameInstance, charIndex, 1)
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>
>if (char="*") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^ source.ahk string.quoted.double.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>asterisksAndQmarks.Push("*")
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>} else if (char="?") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>
>questionMarkCounter:=0
#^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^ source.ahk constant.numeric.ahk
>while (char="?") {
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^ source.ahk string.quoted.double.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>questionMarkCounter++
#^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
>charIndex++
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
>char:=SubStr(nameInstance, charIndex, 1)
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>asterisksAndQmarks.Push(string_Multiply("?",questionMarkCounter))
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
>continue
#^^^^^^^^ source.ahk keyword.control.ahk
>} else if (char="<") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>savedIndex:=charIndex
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
>while (char!=">") {
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>charIndex++
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
>char:=SubStr(nameInstance, charIndex, 1)
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk constant.numeric.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>subLen:=charIndex - savedIndex + 1
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.arithmetic.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                ^ source.ahk
#                                 ^ source.ahk constant.numeric.ahk
>asterisksAndQmarks.Push(SubStr(nameInstance, savedIndex, subLen))
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^^^^ source.ahk support.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^^ source.ahk variable.def.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
>lessGreaters.Insert(1, [savedIndex,subLen])
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk constant.numeric.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>continue
#^^^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>charIndex++
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>for key, value in lessGreaters {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.other.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>nameInstance:=SubStr(nameInstance, 1, value[1]-1) SubStr(nameInstance, value[1] + value[2])
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk constant.numeric.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk keyword.operator.arithmetic.ahk
#                                               ^ source.ahk constant.numeric.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^ source.ahk support.function.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
#                                                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.ahk
#                                                                      ^ source.ahk
#                                                                       ^^^^^ source.ahk variable.def.ahk
#                                                                            ^ source.ahk punctuation.bracket.ahk
#                                                                             ^ source.ahk constant.numeric.ahk
#                                                                              ^ source.ahk punctuation.bracket.ahk
#                                                                               ^ source.ahk
#                                                                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^^^^^ source.ahk variable.def.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk constant.numeric.ahk
#                                                                                         ^ source.ahk punctuation.bracket.ahk
#                                                                                          ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>SplitPath, v,,, OutExtension
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^ source.ahk variable.def.ahk
>nameInstance:=StrReplace(nameInstance, "|name", v)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>nameInstance:=StrReplace(nameInstance, "|ext", OutExtension)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
>
>fileExist:=fileExist(multiRenameDir "\" v)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>if (InStr(fileExist, "D" )) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>nameInstance:=StrReplace(nameInstance, "|Dext" , "")
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>nameInstance:=StrReplace(nameInstance, "|.Dext" , "")
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^^^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>nameInstance:=StrReplace(nameInstance, "|Dext" , OutExtension)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
>nameInstance:=StrReplace(nameInstance, "|.Dext" , "." OutExtension)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^^^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                   ^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk
#                                                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>for key, value in asterisksAndQmarks {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^ source.ahk keyword.other.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>num:=(startingNums[key]) ? startingNums[key] : 1
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^ source.ahk punctuation.bracket.ahk
#      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk constant.numeric.ahk
>actualNum:=num+k-1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^ source.ahk variable.def.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk constant.numeric.ahk
>if (InStr(value, "?" )) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>actualNum:=paddedNumber(actualNum, StrLen(value))
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^ source.ahk support.function.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>} else if (InStr(value, "<" )) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>inside:=SubStr(value, 2, StrLen(value)-2)
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^ source.ahk support.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>nameInstance:=StrReplace(nameInstance, inside, "",, num)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>if (num<0) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.comparison.ahk
#        ^ source.ahk constant.numeric.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.bracket.ahk
>p("oof")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^ source.ahk string.quoted.double.ahk
#      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#       ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>continue
#^^^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>nameInstance:=StrReplace(nameInstance, value , actualNum,, 1)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk constant.numeric.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>previewNames.Push(nameInstance)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>return previewNames
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>getTextWidth(text)
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global Dummy
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
>Gui,Fake:Font,s10,Segoe UI
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^^ source.ahk variable.def.ahk
>Gui,Fake:Add,Text, -Wrap vDummy,% text
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^^^^ source.ahk keyword.other.ahk
#                        ^ source.ahk
#                         ^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk
#                                  ^^^^ source.ahk keyword.other.ahk
>GuiControlGet,Pos,Fake:Pos,Dummy
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^^^ source.ahk keyword.other.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^^^ source.ahk variable.def.ahk
>Gui,Fake:Destroy
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^^^^ source.ahk keyword.other.ahk
>return posw
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>calculateStuff(ByRef date:="", ByRef size:="", ByRef name:="", Byref k:="") {
#^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#              ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#               ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                    ^ source.ahk functionline.ahk
#                     ^^^^ source.ahk functionline.ahk variable.def.ahk
#                         ^^ source.ahk functionline.ahk
#                           ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^^ source.ahk functionline.ahk
#                               ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                    ^ source.ahk functionline.ahk
#                                     ^^^^ source.ahk functionline.ahk variable.def.ahk
#                                         ^^ source.ahk functionline.ahk
#                                           ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^^ source.ahk functionline.ahk
#                                               ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                    ^ source.ahk functionline.ahk
#                                                     ^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                         ^^ source.ahk functionline.ahk
#                                                           ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                            ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                             ^^ source.ahk functionline.ahk
#                                                               ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                                    ^ source.ahk functionline.ahk
#                                                                     ^ source.ahk functionline.ahk variable.def.ahk
#                                                                      ^^ source.ahk functionline.ahk
#                                                                        ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                         ^ source.ahk functionline.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                          ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                                                           ^ source.ahk functionline.ahk
#                                                                            ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>if (calculateDates and date!="") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk keyword.other.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^ source.ahk keyword.operator.assignment.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>now:=A_Now
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^ source.ahk constant.language.ahk
>var1Num := now
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^^^ source.ahk variable.def.ahk
>var2 := date
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^ source.ahk keyword.other.ahk
>EnvSub, var1Num, %var2%, Minutes
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^ source.ahk keyword.other.ahk
>var1:=var1Num "’"
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^ source.ahk string.quoted.double.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>color=0xFF0000 ;red
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk constant.numeric.ahk
#              ^ source.ahk comment.line.semicolon.ahk
#               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                ^^^ source.ahk comment.line.semicolon.ahk
>if (Abs(var1Num)>525599) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk keyword.operator.comparison.ahk
#                 ^^^^^^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>var1Num := now
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^^^ source.ahk variable.def.ahk
>EnvSub, var1Num, %var2%, Days
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk keyword.other.ahk
>var1Num:=Floor(var1Num/365.25) ;the average days in a month
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^^^^^^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk comment.line.semicolon.ahk
#                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>var1:=var1Num " y"
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>color=0x808080 ;grey ; pink
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk constant.numeric.ahk
#              ^ source.ahk comment.line.semicolon.ahk
#               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                ^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (Abs(var1Num)>86399) {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk keyword.operator.comparison.ahk
#                      ^^^^^ source.ahk constant.numeric.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>var1Num := now
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^^^ source.ahk variable.def.ahk
>EnvSub, var1Num, %var2%, Days
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk keyword.other.ahk
>var1Num:=Floor(var1Num/30.44) ;the average days in a month
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^^^^^ source.ahk constant.numeric.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk comment.line.semicolon.ahk
#                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>var1:=var1Num " m"
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>color=0x00FFFF ;AQUA
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk constant.numeric.ahk
#              ^ source.ahk comment.line.semicolon.ahk
#               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                ^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (Abs(var1Num)>1439) {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk keyword.operator.comparison.ahk
#                      ^^^^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>var1Num := now
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^^^ source.ahk variable.def.ahk
>EnvSub, var1Num, %var2%, Days
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk keyword.other.ahk
>var1:=var1Num " d"
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>color=0x00FF00 ;lime green
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk constant.numeric.ahk
#              ^ source.ahk comment.line.semicolon.ahk
#               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>} else if (Abs(var1Num)>59) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk keyword.operator.comparison.ahk
#                        ^^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>var1Num := now
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^^^ source.ahk variable.def.ahk
>EnvSub, var1Num, %var2%, Hours
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^ source.ahk keyword.other.ahk
>var1:=var1Num " h"
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>color=0xFFFF00 ;yellow
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk constant.numeric.ahk
#              ^ source.ahk comment.line.semicolon.ahk
#               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                ^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (calculatefileSizes and size!="") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^^ source.ahk keyword.other.ahk
#                          ^ source.ahk
#                           ^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                ^ source.ahk keyword.operator.assignment.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>bytes:=""
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>formattedBytes:=""
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>
>bytes:=size
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^ source.ahk variable.def.ahk
>
>if (bytes!="")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#             ^ source.ahk punctuation.bracket.ahk
>formattedBytes:=autoByteFormat(bytes)
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>applySizes() {
#^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#          ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#           ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#            ^ source.ahk functionline.ahk
#             ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>if (namesForSizes%whichSide%.Length()) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^ source.ahk
#                             ^^^^^^ source.ahk support.function.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>namesStr:="""" EcurrentDir%whichSide% """"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#           ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>for k, v in namesForSizes%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>namesStr.=" """ v """"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#           ^ source.ahk string.quoted.double.ahk
#            ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk
#                ^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Process, Close, %PID_getFolderSizes%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>Run, "%A_AhkPath%" "lib\getFolderSizes.ahk" %namesStr%,,,PID_getFolderSizes
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#      ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Process, Close, %PID_getFolderSizes%
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk keyword.other.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>sortSizes()
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>canSortBySize%whichSide%:=true
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>justOneIcon(byref name,byref row, byref whichSide) {
#^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#           ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#            ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                 ^ source.ahk functionline.ahk
#                  ^^^^ source.ahk functionline.ahk variable.def.ahk
#                      ^ source.ahk functionline.ahk
#                       ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                            ^ source.ahk functionline.ahk
#                             ^^^ source.ahk functionline.ahk variable.def.ahk
#                                ^^ source.ahk functionline.ahk
#                                  ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                       ^ source.ahk functionline.ahk
#                                        ^^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                                 ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                                  ^ source.ahk functionline.ahk
#                                                   ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>if (doIcons) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.bracket.ahk
>hIcon := DllCall("Shell32\ExtractAssociatedIcon", UInt, 0, Str, EcurrentDir%whichSide% "\" name , UShortP, iIndex)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk constant.numeric.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.ahk
#                                                               ^ source.ahk
#                                                                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                      ^ source.ahk
#                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk
#                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^^^^ source.ahk variable.def.ahk
#                                                                                               ^ source.ahk
#                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^^ source.ahk variable.def.ahk
#                                                                                                         ^ source.ahk punctuation.ahk
#                                                                                                          ^ source.ahk
#                                                                                                           ^^^^^^ source.ahk variable.def.ahk
#                                                                                                                 ^ source.ahk punctuation.bracket.ahk
>if hIcon
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>IconNumber := DllCall("ImageList_ReplaceIcon", UInt, ImageListID%whichSide%, Int, -1, UInt, hIcon) + 1
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^ source.ahk
#                                                                             ^^^ source.ahk variable.def.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                   ^ source.ahk constant.numeric.ahk
#                                                                                    ^ source.ahk punctuation.ahk
#                                                                                     ^ source.ahk
#                                                                                      ^^^^ source.ahk variable.def.ahk
#                                                                                          ^ source.ahk punctuation.ahk
#                                                                                           ^ source.ahk
#                                                                                            ^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                                                  ^ source.ahk
#                                                                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                    ^ source.ahk
#                                                                                                     ^ source.ahk constant.numeric.ahk
>DllCall("DestroyIcon", Uint, hIcon)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>IconNumber = 1
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk
#             ^ source.ahk constant.numeric.ahk
>
>LV_Modify(row,"Icon" . IconNumber)
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#               ^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^^^ source.ahk
#                       ^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>lastIconNumber:=IconNumber
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>
>applyIcons(byref names) {
#^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#          ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#           ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                ^ source.ahk functionline.ahk
#                 ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                      ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                       ^ source.ahk functionline.ahk
#                        ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>if (doIcons) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.bracket.ahk
>for k, v in names {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>hIcon := DllCall("Shell32\ExtractAssociatedIcon", UInt, 0, Str, EcurrentDir%whichSide% "\" v , UShortP, iIndex)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk constant.numeric.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.ahk
#                                                               ^ source.ahk
#                                                                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                      ^ source.ahk
#                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk
#                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^ source.ahk variable.def.ahk
#                                                                                            ^ source.ahk
#                                                                                             ^ source.ahk punctuation.ahk
#                                                                                              ^ source.ahk
#                                                                                               ^^^^^^^ source.ahk variable.def.ahk
#                                                                                                      ^ source.ahk punctuation.ahk
#                                                                                                       ^ source.ahk
#                                                                                                        ^^^^^^ source.ahk variable.def.ahk
#                                                                                                              ^ source.ahk punctuation.bracket.ahk
>if hIcon
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>IconNumber := DllCall("ImageList_ReplaceIcon", UInt, ImageListID%whichSide%, Int, -1, UInt, hIcon) + 1
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^ source.ahk
#                                                                             ^^^ source.ahk variable.def.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                   ^ source.ahk constant.numeric.ahk
#                                                                                    ^ source.ahk punctuation.ahk
#                                                                                     ^ source.ahk
#                                                                                      ^^^^ source.ahk variable.def.ahk
#                                                                                          ^ source.ahk punctuation.ahk
#                                                                                           ^ source.ahk
#                                                                                            ^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                                                  ^ source.ahk
#                                                                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                    ^ source.ahk
#                                                                                                     ^ source.ahk constant.numeric.ahk
>DllCall("DestroyIcon", Uint, hIcon)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>IconNumber = 1
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk
#             ^ source.ahk constant.numeric.ahk
>
>LV_Modify(k,"Icon" . IconNumber)
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^^^ source.ahk
#                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>lastIconNumber:=IconNumber
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>renderFunctionsToSort(ByRef objectToSort, reverse:=false)
#^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^ source.ahk keyword.other.ahk
#                           ^ source.ahk
#                            ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^^^^^^^ source.ahk variable.def.ahk
#                                                 ^^ source.ahk keyword.operator.assignment.ahk
#                                                   ^^^^^ source.ahk constant.language.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>
>GuiControl,Text,vcurrentDirEdit%whichSide%, % EcurrentDir%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^^^^ source.ahk keyword.other.ahk
#               ^ source.ahk punctuation.ahk
#                ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>searchString%whichSide%=
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
>
>GuiControl, -Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_Delete()
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>length:=objectToSort.Length()
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>if (reverse) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.bracket.ahk
>startPos:=length
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^ source.ahk variable.def.ahk
>inc:=-1
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk constant.numeric.ahk
>reverseSort:=true
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>startPos:=1
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk constant.numeric.ahk
>inc:=1
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^ source.ahk constant.numeric.ahk
>reverseSort:=false
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>namesForIcons%whichSide%:=[]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>namesForSizes%whichSide%:=[]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>rowsForSizes%whichSide%:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>
>if (length<=maxRows) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>rowsToLoop:=length
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>rowsToLoop:=maxRows
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
>if (toFocus) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.bracket.ahk
>loop % length {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>if (toFocus=objectToSort[A_Index]) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^ source.ahk constant.language.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (length - A_Index<maxRows - 1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk
#             ^^^^^^^ source.ahk constant.language.ahk
#                    ^ source.ahk keyword.operator.comparison.ahk
#                     ^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^ source.ahk keyword.operator.arithmetic.ahk
#                              ^ source.ahk
#                               ^ source.ahk constant.numeric.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>startPos:=length - maxRows + 1
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk
#                   ^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^ source.ahk
#                             ^ source.ahk constant.numeric.ahk
>if (startPos<1)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.comparison.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.bracket.ahk
>startPos:=1
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>startPos:=A_Index
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>k:=startPos
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^^^^^^^^ source.ahk variable.def.ahk
>loop % rowsToLoop {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>name:=objectToSort[k]
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>v:=stuffByName%whichSide%[name]
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>
>if (name=toFocus)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>rowToFocus:=A_Index
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>calculateStuff(v["date"],v["size"],name,A_Index)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^^^^^^^ source.ahk constant.language.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>LV_Add(,,name,var1,var2,formattedBytes,bytes)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>LV_Colors.Cell(ListviewHwnd%whichSide%,A_Index,3,color)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^^^^ source.ahk constant.language.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk constant.numeric.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^^^^^ source.ahk keyword.other.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>namesForIcons%whichSide%.Push(name)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>
>if (!quickFixIcon%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>quickFixIcon%whichSide%:=true
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^^^^ source.ahk constant.language.ahk
>hIcon:=DllCall("Shell32\ExtractAssociatedIcon", UInt, 0, Str, "", UShortP, iIndex)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk constant.numeric.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk
#                                                         ^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.ahk
#                                                             ^ source.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^^^^^^^ source.ahk variable.def.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk
#                                                                           ^^^^^^ source.ahk variable.def.ahk
#                                                                                 ^ source.ahk punctuation.bracket.ahk
>if hIcon
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>IconNumber := DllCall("ImageList_ReplaceIcon", UInt, ImageListID1, Int, -1, UInt, hIcon) + 1
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk
#              ^^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk
#                                               ^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^ source.ahk
#                                                                   ^^^ source.ahk variable.def.ahk
#                                                                      ^ source.ahk punctuation.ahk
#                                                                       ^ source.ahk
#                                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                         ^ source.ahk constant.numeric.ahk
#                                                                          ^ source.ahk punctuation.ahk
#                                                                           ^ source.ahk
#                                                                            ^^^^ source.ahk variable.def.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^^^^^ source.ahk variable.def.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^ source.ahk constant.numeric.ahk
>DllCall("DestroyIcon", Uint, hIcon)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>IconNumber = 1
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk
#             ^ source.ahk constant.numeric.ahk
>LV_Modify(A_Index,"Icon" . IconNumber)
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^^^ source.ahk
#                           ^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>lastIconNumber:=IconNumber
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>k+=inc
#^ source.ahk variable.def.ahk
# ^ source.ahk keyword.operator.arithmetic.ahk
#  ^ source.ahk keyword.operator.assignment.ahk
#   ^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if (toFocus)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>LV_Modify(rowToFocus, "+Select +Focus Vis")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>LV_Modify(1, "+Select +Focus")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk constant.numeric.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>toFocus:=false
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^ source.ahk constant.language.ahk
>if (!firstIce%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>firstIce%whichSide%:=true
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.definition.variable.percent.ahk
#         ^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^^^^ source.ahk constant.language.ahk
>ICELV%whichSide% := New LV_InCellEdit(ListviewHwnd%whichSide%, false, true)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk keyword.keys.ahk
#                       ^ source.ahk
#                        ^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                             ^ source.ahk punctuation.ahk
#                                                              ^ source.ahk
#                                                               ^^^^^ source.ahk constant.language.ahk
#                                                                    ^ source.ahk punctuation.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^ source.ahk constant.language.ahk
#                                                                          ^ source.ahk punctuation.bracket.ahk
>ICELV%whichSide%.SetColumns(0)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>GuiControl, +Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>applyIcons(namesForIcons%whichSide%)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (firstSizes%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>firstSizes%whichSide%:=false
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^^^^^ source.ahk constant.language.ahk
>for key in objectToSort {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>if (reverse) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.bracket.ahk
>k:=length-key+1
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk keyword.operator.arithmetic.ahk
#              ^ source.ahk constant.numeric.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>k:=key
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>name:=objectToSort[k]
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>v:=stuffByName%whichSide%[name]
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>if (InStr(v["attri"], "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>if (key<51)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.comparison.ahk
#        ^^ source.ahk constant.numeric.ahk
#          ^ source.ahk punctuation.bracket.ahk
>rowsForSizes%whichSide%.Push(key)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>namesForSizes%whichSide%.Push(name)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>applySizes()
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>stopSizes:=true
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>manageCMDArguments(pathArgument)
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>cmdFileExist:=fileExist(pathArgument)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>if (cmdFileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>if (InStr(cmdFileExist, "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=pathArgument
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SplitPath, pathArgument, OutFileName, OutDir
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^^^^^^ source.ahk variable.def.ahk
>EcurrentDir%whichSide%:=OutDir
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^ source.ahk variable.def.ahk
>toFocus:=OutFileName
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>p("the folder or file you are trying to open doesn't exist`nyou were trying to open: pathArgument=`n" pathArgument)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                     ^ source.ahk
#                                                                                                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                  ^ source.ahk punctuation.bracket.ahk
>clipboard:=pathArgument
#^^^^^^^^^ source.ahk constant.language.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
>cmdFileExist:=fileExist(pathArgument)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>p(cmdFileExist " pathArgument was copied to clip" )
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>winactivate, ahk_explorer ahk_class AutoHotkeyGUI
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^ source.ahk keyword.other.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>receivedFolderSize(string) {
#^^^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                  ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                   ^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                         ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                          ^ source.ahk functionline.ahk
#                           ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>
>if (rowsForSizes%whichSide%.Length()) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk
#                            ^^^^^^ source.ahk support.function.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>ar:=StrSplit(string,"|")
#^^ source.ahk variable.def.ahk
#  ^^ source.ahk keyword.operator.assignment.ahk
#    ^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>
>whichListView_bak:=A_DefaultListView
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_Modify(rowsForSizes%whichSide%[1],,,,,,ar[2],ar[3])
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk constant.numeric.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
#                                                   ^ source.ahk constant.numeric.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>Gui, ListView, %whichListView_bak%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>
>rowsForSizes%whichSide%.RemoveAt(1)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk
#                        ^^^^^^^^ source.ahk support.function.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>stuffByName%whichSide%[ar[1]]["size"]:=ar[3]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk constant.numeric.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^^ source.ahk keyword.operator.assignment.ahk
#                                       ^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>;virtual desktop
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>revealAhk_Explorer:
#^^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>CurrentIVirtualDesktop := 0
#^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
>GetCurrentDesktop_return_value := DllCall(GetCurrentDesktop, "UPtr", IVirtualDesktopManagerInternal, "UPtrP", CurrentIVirtualDesktop, "UInt")
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^^ source.ahk keyword.operator.assignment.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^ source.ahk support.function.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                           ^ source.ahk punctuation.ahk
#                                                            ^ source.ahk
#                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                              ^^^^ source.ahk string.quoted.double.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk
#                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                    ^ source.ahk
#                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                      ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                             ^ source.ahk
#                                                                                                              ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                                                     ^ source.ahk
#                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                       ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                            ^ source.ahk punctuation.bracket.ahk
>
>pView := 0
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^ source.ahk constant.numeric.ahk
>DllCall(GetViewForHwnd, "UPtr", IApplicationViewCollection, "Ptr", thisHwnd, "Ptr*", pView, "UInt")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^ source.ahk string.quoted.double.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^ source.ahk
#                                                                   ^^^^^^^^ source.ahk variable.def.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^ source.ahk
#                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                              ^^^^ source.ahk string.quoted.double.ahk
#                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                   ^ source.ahk punctuation.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^^^^^ source.ahk variable.def.ahk
#                                                                                          ^ source.ahk punctuation.ahk
#                                                                                           ^ source.ahk
#                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                  ^ source.ahk punctuation.bracket.ahk
>
>DllCall(MoveViewToDesktop, "ptr", IVirtualDesktopManagerInternal, "Ptr", pView, "UPtr", CurrentIVirtualDesktop, "UInt")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                   ^^^ source.ahk string.quoted.double.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                       ^ source.ahk punctuation.ahk
#                                                                        ^ source.ahk
#                                                                         ^^^^^ source.ahk variable.def.ahk
#                                                                              ^ source.ahk punctuation.ahk
#                                                                               ^ source.ahk
#                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                 ^^^^ source.ahk string.quoted.double.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                      ^ source.ahk punctuation.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                              ^ source.ahk punctuation.ahk
#                                                                                                               ^ source.ahk
#                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                 ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                      ^ source.ahk punctuation.bracket.ahk
>winactivate, ahk_id %thisHwnd%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>WM_COPYDATA_READ(wp, lp) {
#^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                 ^^ source.ahk functionline.ahk variable.def.ahk
#                   ^^ source.ahk functionline.ahk
#                     ^^ source.ahk functionline.ahk variable.def.ahk
#                       ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                        ^ source.ahk functionline.ahk
#                         ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>data := StrGet(NumGet(lp + A_PtrSize*2), "UTF-16")
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^ source.ahk constant.language.ahk
#                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                     ^ source.ahk constant.numeric.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^^^^^ source.ahk string.quoted.double.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>RegExMatch(data, "s)(.*)\|(\d+)", match)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>
>if (match2=1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>manageCMDArguments(match1)
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>} else if (match2=2) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>; p(match1)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>receivedFolderSize(match1)
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>} else if (match2=3) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>sortSizes()
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>canSortBySize%whichSide%:=true
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^^^^ source.ahk constant.language.ahk
>} else if (match2=4) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>gosub, selectPanel%match1%
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
>} else if (match2=5) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>gosub, copySelectedPaths
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>} else if (match2=6) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>if (windowHidden) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>windowHidden:=false
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^ source.ahk constant.language.ahk
>gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>; gui, hide
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>gui, show
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SetTimer, revealAhk_Explorer , -0
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (match2=7) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>Action_OldName_Name:=StrSplit(match1, "|")
#^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^^^^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>WatchN(2,Action_OldName_Name[1],Action_OldName_Name[2],Action_OldName_Name[3])
#^^^^^^ source.ahk entity.name.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk constant.numeric.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
#                                                    ^ source.ahk constant.numeric.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                          ^ source.ahk punctuation.bracket.ahk
#                                                                           ^ source.ahk constant.numeric.ahk
#                                                                            ^ source.ahk punctuation.bracket.ahk
#                                                                             ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>p("something went wrong")
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#   ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>submitAndRenderDir()
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, Submit, NoHide
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^ source.ahk keyword.other.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
>
>StringUpper, OutputVar,% SubStr(vcurrentDirEdit%whichSide%,1,1)
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk
#                         ^^^^^^ source.ahk support.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk constant.numeric.ahk
#                                                            ^ source.ahk punctuation.ahk
#                                                             ^ source.ahk constant.numeric.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=OutputVar SubStr(vcurrentDirEdit%whichSide%,2)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk
#                                  ^^^^^^ source.ahk support.function.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk constant.numeric.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>Bin(x){
#^^^ source.ahk functionline.ahk entity.name.function.ahk
#   ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#    ^ source.ahk functionline.ahk variable.def.ahk
#     ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#      ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>while x
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk variable.def.ahk
>r:=1&x r,x>>=1
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^ source.ahk constant.numeric.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk constant.numeric.ahk
>return r
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>compareTwoStrings2(para_string1,para_string2) {
#^^^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                  ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                   ^^^^^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                               ^ source.ahk functionline.ahk
#                                ^^^^^^^^^^^^ source.ahk functionline.ahk variable.def.ahk
#                                            ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                                             ^ source.ahk functionline.ahk
#                                              ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>;Sørensen-Dice coefficient
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>savedBatchLines := A_BatchLines
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^^^ source.ahk constant.language.ahk
>SetBatchLines, -1
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
>
>vCount := 0
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^ source.ahk constant.numeric.ahk
>oArray := {}
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk punctuation.bracket.ahk
>oArray := {base:{__Get:Func("Abs").Bind(0)}} ;make default key value 0 instead of a blank string
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^^^^ source.ahk entity.name.function.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk constant.numeric.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk comment.line.semicolon.ahk
#                                             ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Loop, % vCount1 := StrLen(para_string1) - 1
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk constant.numeric.ahk
>oArray["z" SubStr(para_string1, A_Index, 2)]++
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^ source.ahk string.quoted.double.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^^^^ source.ahk constant.language.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk keyword.operator.arithmetic.ahk
#                                             ^ source.ahk keyword.operator.arithmetic.ahk
>Loop, % vCount2 := StrLen(para_string2) - 1
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk constant.numeric.ahk
>if (oArray["z" SubStr(para_string2, A_Index, 2)] > 0) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#            ^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^ source.ahk constant.language.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk constant.numeric.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk keyword.operator.comparison.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk constant.numeric.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>oArray["z" SubStr(para_string2, A_Index, 2)]--
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^ source.ahk string.quoted.double.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^^^^ source.ahk constant.language.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk keyword.operator.arithmetic.ahk
#                                             ^ source.ahk keyword.operator.arithmetic.ahk
>vCount++
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>vSDC := Round((2 * vCount) / (vCount1 + vCount2),2)
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk
#                                        ^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk constant.numeric.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>; if (!vSDC || vSDC < 0.005) { ;round to 0 if less than 0.005
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; return 0
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; }
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^ source.ahk comment.line.semicolon.ahk
>if (vSDC = 1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>return 1
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>SetBatchLines, % savedBatchLines
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>return vSDC
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>compareTwoStrings(para_string1,para_string2)
#^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>;Sørensen-Dice coefficient
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>savedBatchLines := A_BatchLines
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^^^ source.ahk constant.language.ahk
>SetBatchLines, -1
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
>
>vCount := 0
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^ source.ahk constant.numeric.ahk
>oArray := {}
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk punctuation.bracket.ahk
>oArray := {base:{__Get:Func("Abs").Bind(0)}} ;make default key value 0 instead of a blank string
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk
#                                   ^^^^ source.ahk entity.name.function.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk constant.numeric.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk comment.line.semicolon.ahk
#                                             ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Loop, % vCount1 := StrLen(para_string1)
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>; Loop, % vCount1 := StrLen(para_string1) - 1
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>oArray["z" SubStr(para_string1, A_Index, 1)]++
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^ source.ahk string.quoted.double.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^^^^ source.ahk constant.language.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk keyword.operator.arithmetic.ahk
#                                             ^ source.ahk keyword.operator.arithmetic.ahk
>; oArray["z" SubStr(para_string1, A_Index, 2)]++
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Loop, % vCount2 := StrLen(para_string2)
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^ source.ahk
#        ^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk
#                   ^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>; Loop, % vCount2 := StrLen(para_string2) - 1
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; p(oArray)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (oArray["z" SubStr(para_string2, A_Index, 1)] > 0) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#            ^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^ source.ahk constant.language.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk constant.numeric.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk keyword.operator.comparison.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk constant.numeric.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
>; if (oArray["z" SubStr(para_string2, A_Index, 2)] > 0) {
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>oArray["z" SubStr(para_string2, A_Index, 1)]--
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^ source.ahk string.quoted.double.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^^^^ source.ahk constant.language.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk keyword.operator.arithmetic.ahk
#                                             ^ source.ahk keyword.operator.arithmetic.ahk
>; oArray["z" SubStr(para_string2, A_Index, 2)]--
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>vCount++
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; p(vCount)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>vSDC := (vCount) / (vCount2)
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>; vSDC := (2 * vCount) / (vCount1 + vCount2)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; vSDC := Round((2 * vCount) / (vCount1 + vCount2),2)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; if (!vSDC || vSDC < 0.005) { ;round to 0 if less than 0.005
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; return 0
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; }
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^ source.ahk comment.line.semicolon.ahk
>if (vSDC = 1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>return 1
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>SetBatchLines, % savedBatchLines
#^^^^^^^^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>return vSDC
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>autoMegaByteFormat(size, decimalPlaces = 2)
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk keyword.operator.assignment.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>static sizes :=["GB", "TB"]
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>
>sizeIndex := 0
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk
#             ^ source.ahk constant.numeric.ahk
>
>while (size >= 1024)
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.comparison.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^^^^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>sizeIndex++
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
>size /= 1024.0
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^^^ source.ahk constant.numeric.ahk
>
>if (sizeIndex = sizes.Length())
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk
#                ^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return (sizeIndex = 0) ? size " MB"
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^ source.ahk constant.numeric.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>: round(size, decimalPlaces) . " " . sizes[sizeIndex]
#^ source.ahk punctuation.ahk
# ^ source.ahk
#  ^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^^^ source.ahk
#                                     ^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>autoByteFormat(size, decimalPlaces = 2)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk keyword.operator.assignment.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk constant.numeric.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>static sizes :=["KB", "MB", "GB", "TB"]
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>
>sizeIndex := 0
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk
#             ^ source.ahk constant.numeric.ahk
>
>while (size >= 1024)
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.comparison.ahk
#             ^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^^^^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>sizeIndex++
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
>size /= 1024.0
#^^^^ source.ahk variable.def.ahk
#    ^ source.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^^^^^^ source.ahk constant.numeric.ahk
>
>if (sizeIndex = sizes.Length())
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk
#                ^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return (sizeIndex = 0) ? size " B"
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk
#                    ^ source.ahk constant.numeric.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>: round(size, decimalPlaces) . " " . sizes[sizeIndex]
#^ source.ahk punctuation.ahk
# ^ source.ahk
#  ^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^ source.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^^^ source.ahk
#                                     ^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>sortColumn(column, sortMethod)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global columnsToSort
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>for k, v in columnsToSort {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (v!=column) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(v, "NoSort")
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(column, sortMethod)
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>getSelectedNames()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>gui, main:default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>index:=""
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>selectedNames:=[]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk punctuation.bracket.ahk
>loop {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>index:=LV_GetNext(index)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>if (!index)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>LV_GetText(OutputVar,index,2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk constant.numeric.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>selectedNames.Push(OutputVar)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>return selectedNames
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>getSelectedPaths()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>selectedPaths:=[]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk punctuation.bracket.ahk
>for k, v in getSelectedNames() {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>selectedPaths.Push(EcurrentDir%whichSide% "\" v)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return selectedPaths
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>doubleClickedNormal(ByRef index)
#^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^ source.ahk keyword.other.ahk
#                         ^ source.ahk
#                          ^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>gui, main:default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>LV_GetText(filename,index,2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk constant.numeric.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>path:=EcurrentDir%whichSide% "\" filename
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk
#                                 ^^^^^^^^ source.ahk variable.def.ahk
>doubleClickedFolderOrFile(path)
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>doubleClickedFolderOrFile(ByRef path)
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^ source.ahk keyword.other.ahk
#                               ^ source.ahk
#                                ^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>fileExist:=FileExist(path)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>if (fileExist) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>if (InStr(fileExist, "D"))
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=path
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^ source.ahk variable.def.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>path:=path
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^ source.ahk variable.def.ahk
>Run, "%path%", % EcurrentDir%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#      ^^^^^^ source.ahk string.quoted.double.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>stopSearching()
#^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>focused=flistView
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl,Text,currentDirEdit, % EcurrentDir%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^^^^ source.ahk keyword.other.ahk
#               ^ source.ahk punctuation.ahk
#                ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.definition.variable.percent.ahk
>searchString%whichSide%=
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>HandleMessage( p_w, p_l, p_m, p_hw )
#^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>local control
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk
#      ^^^^^^^ source.ahk support.function.ahk
>; return
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>; p(p_w)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (!ignoreOut) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>if (p_w=0x1000007) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>; p(p_l)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>whichSide:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>if (focused="flistView") ; if listView for instance
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk comment.line.semicolon.ahk
#                         ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                          ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>focused:="changePath"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>} else if (focused="listViewInSearch") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>focused:="searchCurrentDirEdit"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (p_w=0x100000B) {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>
>whichSide:=2
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>if (focused="flistView") ; if listView for instance
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk comment.line.semicolon.ahk
#                         ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                          ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>focused:="changePath"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>} else if (focused="listViewInSearch") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>focused:="searchCurrentDirEdit"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>;   16777222
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>else if ( p_w & 0x2000000 )
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^ source.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^ source.ahk
#                ^^^^^^^^^ source.ahk constant.numeric.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (p_w=0x2000007) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>
>whichSide:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (p_w=0x200000B) {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>
>whichSide:=2
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (((p_w >> 16) & 0x200) and not ((p_w >> 16) & 0x100))
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk punctuation.bracket.ahk
#     ^ source.ahk punctuation.bracket.ahk
#      ^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^ source.ahk
#             ^^ source.ahk constant.numeric.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk
#                   ^^^^^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^^^ source.ahk keyword.other.ahk
#                             ^ source.ahk
#                              ^^^ source.ahk keyword.other.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk keyword.operator.comparison.ahk
#                                         ^ source.ahk keyword.operator.comparison.ahk
#                                          ^ source.ahk
#                                           ^^ source.ahk constant.numeric.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                ^ source.ahk
#                                                 ^^^^^ source.ahk constant.numeric.ahk
#                                                      ^ source.ahk punctuation.bracket.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>; if (If ((p_w >> 16) & 0x200) and not ((p_w >> 16) & 0x100))
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if ( p_l = Edithwnd%whichSide% )
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk
#     ^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (focused="searchCurrentDirEdit")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>focused=listViewInSearch
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (focused="changePath") {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>
>MouseGetPos,,, OutputVarWin
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl, Focus, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>winactivate, ahk_id %OutputVarWin%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>; static EM_SETSEL   := 0x00B1
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; static EN_SETFOCUS := 0x0100
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>submitAndRenderDir()
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>focused:="flistView"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>; Gui, Submit, NoHide
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; currentDir:=currentDirEdit
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if ( p_l = RenameHwnd ) {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk
#            ^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk
#                  ^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>if (!fromButton)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
>gosub, renameFileLabel
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>searchInCurrentDir() {
#^^^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                  ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                   ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                    ^ source.ahk functionline.ahk
#                     ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>if (searchString%whichSide%="") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk keyword.operator.assignment.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>searching:=true
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^ source.ahk constant.language.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>ignoreOut:=true
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^ source.ahk constant.language.ahk
>objectToSort:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>namesForIcons%whichSide%:=[]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>
>GuiControl, -Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_Delete()
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>if (SubStr(searchString%whichSide%, 1, 1)!=".") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                          ^ source.ahk keyword.operator.assignment.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>counter:=0
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>objectToSort:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>
>for k,v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (counter>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>attri:=stuffByName%whichSide%[v]["attri"]
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>if InStr(attri, "D") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^ source.ahk string.quoted.double.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>pos:=InStr(v, searchString%whichSide%)
#^^^ source.ahk keyword.other.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk
#              ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SplitPath, v,,,, OutNameNoExt
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
>pos:=InStr(OutNameNoExt, searchString%whichSide%)
#^^^ source.ahk keyword.other.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (pos) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk keyword.other.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
>counter++
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
>objectToSort.Push({name:v,pos:pos})
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^^^ source.ahk keyword.other.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^ source.ahk keyword.other.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>objectToSort:=ObjectSort(objectToSort,"pos")
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>
>for k,v in objectToSort {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>name:=v["name"]
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk punctuation.bracket.ahk
>obj:=stuffByName%whichSide%[name]
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>calculateStuff(obj["date"],obj["size"],name,k)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>
>LV_Add(,,name,var1,var2,formattedBytes,bytes)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>LV_Colors.Cell(ListviewHwnd%whichSide%,k,3,color)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^^^^^ source.ahk keyword.other.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>namesForIcons%whichSide%.Push(name)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>searchFoldersOnly:=(searchString%whichSide%=".") ? true : false
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^ source.ahk keyword.operator.assignment.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                             ^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^ source.ahk
#                                                   ^^^^ source.ahk constant.language.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^^^^^ source.ahk constant.language.ahk
>if (searchFoldersOnly) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>counter:=0
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>for k,v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (counter>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>SplitPath, v,,, OutExtension
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^ source.ahk variable.def.ahk
>if (!OutExtension) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>obj:=stuffByName%whichSide%[v]
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>
>calculateStuff(obj["date"],obj["size"],v,k)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>
>LV_Add(,,v,var1,var2,formattedBytes,bytes)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>LV_Colors.Cell(ListviewHwnd%whichSide%,k,3,color)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^^^^^ source.ahk keyword.other.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>namesForIcons%whichSide%.Push(v)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>searchStringBak%whichSide%:=SubStr(searchString%whichSide%, 2)
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^ source.ahk keyword.operator.assignment.ahk
#                            ^^^^^^ source.ahk support.function.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk constant.numeric.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
>counter:=0
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk constant.numeric.ahk
>objectToSort:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>for k,v in sortedByDate%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>if (counter>maxRows)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>SplitPath, v,,, OutExtension
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^^ source.ahk variable.def.ahk
>pos:=InStr(OutExtension, searchStringBak%whichSide%)
#^^^ source.ahk keyword.other.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>if (pos) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk keyword.other.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
>counter++
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
>objectToSort.Push({name:v,pos:pos})
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^^^ source.ahk keyword.other.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^ source.ahk keyword.other.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>objectToSort:=ObjectSort(objectToSort,"pos")
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>for k,v in objectToSort {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>name:=v["name"]
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^ source.ahk string.quoted.double.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#              ^ source.ahk punctuation.bracket.ahk
>obj:=stuffByName%whichSide%[name]
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>
>calculateStuff(obj["date"],obj["size"],name,k)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>
>LV_Add(,,name,var1,var2,formattedBytes,bytes)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>LV_Colors.Cell(ListviewHwnd%whichSide%,k,3,color)
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk
#          ^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^^^^^ source.ahk keyword.other.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>namesForIcons%whichSide%.Push(name)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk
#                         ^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>GuiControl, +Redraw, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^ source.ahk keyword.other.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>applyIcons(namesForIcons%whichSide%)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>loop % LV_GetCount() - 1 {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^ source.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>
>LV_Modify(A_Index+1, "-Select -Focus") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                      ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk comment.line.semicolon.ahk
#                                       ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                        ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>LV_Modify(1, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk constant.numeric.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk comment.line.semicolon.ahk
#                                   ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                    ^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>searching:=false
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^ source.ahk constant.language.ahk
>ignoreOut:=false
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>minusEverythingAfterPoint(index)
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global rowBak
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
>
>indexBak:=index+1
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
>loop % rowBak.Length() - index {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk keyword.operator.arithmetic.ahk
#                        ^ source.ahk
#                         ^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>if (rowBak[indexBak]!=0)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>rowBak[indexBak]--
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
>indexBak++
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>addEverythingAfterPoint(index) {
#^^^^^^^^^^^^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#                       ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                        ^^^^^ source.ahk functionline.ahk variable.def.ahk
#                             ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                              ^ source.ahk functionline.ahk
#                               ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>global rowBak
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
>
>indexBak:=index+1
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
>loop % rowBak.Length() - index {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk
#                       ^ source.ahk keyword.operator.arithmetic.ahk
#                        ^ source.ahk
#                         ^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>if (rowBak[indexBak]!=0)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>rowBak[indexBak]++
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
>indexBak++
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
#         ^ source.ahk keyword.operator.arithmetic.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>getinsertPoint(index)
#^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global rowBak
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
>index--
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
>while (rowBak[index]=0) {
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk keyword.operator.assignment.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>index--
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (index<1)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.comparison.ahk
#          ^ source.ahk constant.numeric.ahk
#           ^ source.ahk punctuation.bracket.ahk
>return 1
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk constant.numeric.ahk
>
>return rowBak[index]+1
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^ source.ahk constant.numeric.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>local ansiPath, bothSameDir, dirToStopWatching,i,k,v,y,drive,freeSpace,lastChar,text,totalSpace,OutputVar
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk
#      ^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^^^^^ source.ahk support.function.ahk
#                                                            ^ source.ahk punctuation.ahk
#                                                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                      ^ source.ahk punctuation.ahk
#                                                                       ^^^^^^^^ source.ahk variable.def.ahk
#                                                                               ^ source.ahk punctuation.ahk
#                                                                                ^^^^ source.ahk keyword.other.ahk
#                                                                                    ^ source.ahk punctuation.ahk
#                                                                                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                ^^^^^^^^^ source.ahk variable.def.ahk
>; global EcurrentDir1, EcurrentDir2, whichSide, currentDirSearch, stopSizes
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>
>if (SubStr(EcurrentDir%whichSide%,1,5)="file:") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk keyword.operator.assignment.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>ansiPath:=URItoPath(EcurrentDir%whichSide%)
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^ source.ahk entity.name.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=decodeStrAs(ansiPath, "UTF-8")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^^^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>EcurrentDir%whichSide%:=LTrim(EcurrentDir%whichSide%,"file:///")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=StrReplace(EcurrentDir%whichSide%, "%20", " ")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^ source.ahk support.function.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                   ^ source.ahk string.quoted.double.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
>; d(EcurrentDir%whichSide%)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>lastChar:=SubStr(EcurrentDir%whichSide%, 0)
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>if (lastChar="\")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^ source.ahk string.quoted.double.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=SubStr(EcurrentDir%whichSide%, 1, StrLen(EcurrentDir%whichSide%)-1)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^ source.ahk support.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                     ^ source.ahk punctuation.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk constant.numeric.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^^^^^^ source.ahk support.function.ahk
#                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                         ^ source.ahk constant.numeric.ahk
#                                                                                          ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=Rtrim(EcurrentDir%whichSide%," ")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^ source.ahk support.function.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=StrReplace(EcurrentDir%whichSide%, "/" , "\")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^ source.ahk support.function.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                            ^ source.ahk string.quoted.double.ahk
#                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk punctuation.ahk
#                                                                ^ source.ahk
#                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk
#                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                    ^ source.ahk punctuation.bracket.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>currentDirSearch:=""
#^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^^ source.ahk keyword.operator.assignment.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>if (InStr(fileExist(EcurrentDir%whichSide%), "D"))
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>stopSizes:=false
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^ source.ahk constant.language.ahk
>
>if (lastDir%whichSide%!=EcurrentDir%whichSide% ) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>bothSameDir:=bothSameDir(whichSide)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>if (lastDir%whichSide%!="" and EcurrentDir%otherSide%!=lastDir%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^ source.ahk keyword.other.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                     ^ source.ahk keyword.operator.arithmetic.ahk
#                                                      ^ source.ahk keyword.operator.assignment.ahk
#                                                       ^^^^^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                         ^ source.ahk punctuation.bracket.ahk
#                                                                          ^ source.ahk
#                                                                           ^ source.ahk punctuation.bracket.ahk
>for k, v in watching%whichSide% {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>if (v=lastDir%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>watching%whichSide%.Remove(k)
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.definition.variable.percent.ahk
#         ^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^ source.ahk
#                    ^^^^^^ source.ahk support.function.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>dirToStopWatching:=v
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk variable.def.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>stopWatchFolder(whichSide,dirToStopWatching)
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (!bothSameDir) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>watching%whichSide%.Push(EcurrentDir%whichSide%)
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.definition.variable.percent.ahk
#         ^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^ source.ahk
#                    ^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>startWatchFolder(whichSide,EcurrentDir%whichSide%)
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (lastDir%whichSide%!="" and !cannotDirHistory%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^ source.ahk keyword.other.ahk
#                              ^ source.ahk
#                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
>dirHistory%whichSide%.Push(lastDir%whichSide%)
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^ source.ahk
#                      ^^^^ source.ahk support.function.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>if cannotDirHistory%whichSide% {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>cannotDirHistory%whichSide%:=false
#^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^ source.ahk keyword.operator.assignment.ahk
#                             ^^^^^ source.ahk constant.language.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>lastDir%whichSide%:=EcurrentDir%whichSide%
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.definition.variable.percent.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
>focused=flistView
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^ source.ahk variable.def.ahk
>
>filePaths:=[]
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk punctuation.bracket.ahk
>rowBak:=[]
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^ source.ahk punctuation.bracket.ahk
>; dates:=[]
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>sortableDates:=[]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk punctuation.bracket.ahk
>sizes:=[]
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk punctuation.bracket.ahk
>sortableSizes:=[]
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk punctuation.bracket.ahk
>; dateColors:=[]
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; filesWithNoExt:=[]
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if (lastIconNumber)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>rememberIconNumber:=lastIconNumber
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>unsorted%whichSide%:=[]
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.definition.variable.percent.ahk
#         ^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                   ^^ source.ahk keyword.operator.assignment.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>sortedByDate%whichSide%:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>sortedBySize%whichSide%:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^ source.ahk keyword.operator.assignment.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>canSortBySize%whichSide%:=false
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^ source.ahk keyword.operator.assignment.ahk
#                          ^^^^^ source.ahk constant.language.ahk
>stuffByName%whichSide%:={}
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>sortedDates:=[]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
>sortedSizes%whichSide%:=[]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>Loop, Files, % EcurrentDir%whichSide% "\*", DF
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^ source.ahk string.quoted.double.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk
#                                            ^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>stuffByName%whichSide%[A_LoopFileName]:={date:A_LoopFileTimeModified,attri:A_LoopFileAttrib,size:A_LoopFileSize}
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^^ source.ahk keyword.operator.assignment.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^^^^ source.ahk keyword.other.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^^^^^^^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                                    ^ source.ahk punctuation.ahk
#                                                                     ^^^^^ source.ahk variable.def.ahk
#                                                                          ^ source.ahk punctuation.ahk
#                                                                           ^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                                                           ^ source.ahk punctuation.ahk
#                                                                                            ^^^^ source.ahk variable.def.ahk
#                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                 ^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                                                                               ^ source.ahk punctuation.bracket.ahk
>
>sortedDates.Push({date:A_LoopFileTimeModified,name:A_LoopFileName})
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^^^^^^^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>sortedDates:=sortArrByKey(sortedDates,"date")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
>; sortedDates:=sortArrByKey(sortedDates,"date",true)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>for k, v in sortedDates {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>sortedByDate%whichSide%.Push(v["name"])
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.definition.variable.percent.ahk
#             ^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>firstSizes%whichSide%:=true
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^ source.ahk keyword.operator.assignment.ahk
#                       ^^^^ source.ahk constant.language.ahk
>whichsort%whichSide%:="newOld"
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                    ^^ source.ahk keyword.operator.assignment.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>oldNew%whichSide%:=false
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^^ source.ahk constant.language.ahk
>
>renderFunctionsToSort(sortedByDate%whichSide%)
#^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>
>Gui, ListView, folderlistView2_%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_Delete()
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>parent1DirDirs%whichSide%:=[]
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>SplitPath, EcurrentDir%whichSide%, , parent1Dir%whichSide%
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
>SplitPath, parent1Dir%whichSide%, Out2DirName%whichSide% , parent2Dir%whichSide%,,,OutDrive2%whichSide%
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                        ^ source.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                      ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk punctuation.ahk
#                                                                                  ^ source.ahk punctuation.ahk
#                                                                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>SplitPath, parent2Dir%whichSide%, Out3DirName%whichSide%, parent3Dir%whichSide%,,,OutDrive3%whichSide%
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                     ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                               ^ source.ahk punctuation.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk punctuation.ahk
#                                                                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>
>if (parent1Dir%whichSide%!=EcurrentDir%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk keyword.operator.assignment.ahk
#                           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk punctuation.bracket.ahk
>if (!Out2DirName%whichSide%)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>Out2DirName%whichSide%:=OutDrive2%whichSide%
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_ModifyCol(1,"NoSort", Out2DirName%whichSide%)
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>Loop, Files, % parent1Dir%whichSide% "\*", D
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (A_LoopFileLongPath!=EcurrentDir%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>LV_Add(, A_LoopFileName)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>parent1DirDirs%whichSide%.Push(A_LoopFileLongPath)
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk
#                          ^^^^ source.ahk support.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>toSelect:=(A_Index=1) ? 1 : A_Index-1
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk constant.language.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk constant.numeric.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk constant.language.ahk
#                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                    ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Gui, ListView, folderlistView2_%whichSide% ;just in case
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk comment.line.semicolon.ahk
#                                           ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                            ^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>LV_Modify(toSelect, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk comment.line.semicolon.ahk
#                                          ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                           ^^^^^^^ source.ahk comment.line.semicolon.ahk
>} else
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(1,"NoSort", "")
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Gui, ListView, folderlistView1_%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_Delete()
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>parent2DirDirs%whichSide%:=[]
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>if (parent2Dir%whichSide%!=parent1Dir%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk keyword.operator.assignment.ahk
#                           ^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                      ^^^^^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
#                                                 ^ source.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>if (!Out3DirName%whichSide%)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>Out3DirName%whichSide%:=OutDrive3%whichSide%
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
>LV_ModifyCol(1,"NoSort", Out3DirName%whichSide%)
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>Loop, Files, % parent2Dir%whichSide% "\*", D
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if (A_LoopFileLongPath!=parent1Dir%whichSide%) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>LV_Add(, A_LoopFileName)
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>parent2DirDirs%whichSide%.Push(A_LoopFileLongPath)
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.definition.variable.percent.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk
#                          ^^^^ source.ahk support.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^^^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>toSelect:=(A_Index=1) ? 1 : A_Index-1
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk constant.language.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk constant.numeric.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk constant.language.ahk
#                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                    ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Gui, ListView, folderlistView1_%whichSide% ;just in case
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^ source.ahk comment.line.semicolon.ahk
#                                           ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                            ^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>LV_Modify(toSelect, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk comment.line.semicolon.ahk
#                                          ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                           ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>LV_ModifyCol(1,"NoSort", "")
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk constant.numeric.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>DriveGet, OutputVar, List
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^ source.ahk keyword.other.ahk
>drives:=StrSplit(OutputVar,"")
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>length:=drives.Length()
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>
>for i, drive in drives {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk support.function.ahk
#            ^ source.ahk
#             ^^ source.ahk keyword.other.ahk
#               ^ source.ahk
#                ^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>y:=40*(i-1)
#^ source.ahk variable.def.ahk
# ^^ source.ahk keyword.operator.assignment.ahk
#   ^^ source.ahk constant.numeric.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.arithmetic.ahk
#         ^ source.ahk constant.numeric.ahk
#          ^ source.ahk punctuation.bracket.ahk
>DriveGet, totalSpace, Capacity, %drive%:
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^^^^^^ source.ahk keyword.other.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^^^^^ source.ahk support.function.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk punctuation.ahk
>DriveSpaceFree, freeSpace, %drive%:
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^ source.ahk support.function.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^ source.ahk punctuation.ahk
>
>text:=drive ":\ " Round(100-100*freeSpace/totalSpace, 2) "%`n" autoMegaByteFormat(freeSpace) "/" autoMegaByteFormat(totalSpace)
#^^^^ source.ahk keyword.other.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^ source.ahk support.function.ahk
#           ^ source.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^ source.ahk string.quoted.double.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                 ^ source.ahk
#                  ^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^^^ source.ahk constant.numeric.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^^^ source.ahk constant.numeric.ahk
#                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                          ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk constant.numeric.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
#                                                        ^ source.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                          ^^^ source.ahk string.quoted.double.ahk
#                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                              ^ source.ahk
#                                                               ^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                           ^ source.ahk punctuation.bracket.ahk
#                                                                                            ^ source.ahk
#                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                              ^ source.ahk string.quoted.double.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                ^ source.ahk
#                                                                                                 ^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                                                                   ^ source.ahk punctuation.bracket.ahk
#                                                                                                                    ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                              ^ source.ahk punctuation.bracket.ahk
>if (i>numberOfDrives) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.comparison.ahk
#      ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>gui, add, button,h40 y%y% w%favoritesListViewWidth% vDrive%i% x0 Left ggChangeDrive, % text
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^ source.ahk
#                          ^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                           ^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                             ^ source.ahk
#                                                              ^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk
#                                                                 ^^^^ source.ahk keyword.keys.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                   ^ source.ahk punctuation.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                      ^ source.ahk
#                                                                                       ^^^^ source.ahk keyword.other.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>GuiControl, Show, Drive%i%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
>GuiControl, Text, Drive%i%, % text
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^ source.ahk
#                              ^^^^ source.ahk keyword.other.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>loop % numberOfDrives {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>if (A_Index>length) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk constant.language.ahk
#           ^ source.ahk keyword.operator.comparison.ahk
#            ^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>GuiControl, Hide, Drive%A_Index%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^ source.ahk constant.language.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (length>numberOfDrives)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.comparison.ahk
#           ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>numberOfDrives:=length
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^ source.ahk variable.def.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>SplitPath, EcurrentDir%whichSide%, OutFileName%whichSide%, OutDir%whichSide%
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^^^^^^ source.ahk variable.def.ahk
#                                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
>if (InStr(fileExist(OutDir%whichSide%), "D")) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
>toFocus:=OutFileName%whichSide%
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
>EcurrentDir%whichSide%:=OutDir%whichSide%
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>; p(fileExist(currentDir))
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>EcurrentDir%whichSide%:=lastDir%whichSide%
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
>GuiControl, Text,vcurrentDirEdit%whichSide%, % EcurrentDir%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk
#                                               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
>
>if (focused!="changePath") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.arithmetic.ahk
#            ^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; lastDir:=currentDir
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>}
#^ source.ahk punctuation.bracket.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>findNextDirNameNumberIteration(path)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global left
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^ source.ahk keyword.keys.ahk
>global right
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk keyword.keys.ahk
>SplitPath, path, OutFileName, OutDir, OutExtension, OutNameNoExt, OutDrive
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^^^^^^^^ source.ahk variable.def.ahk
>getLeftRight(OutNameNoExt, "*")
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>pathToCheck:=OutDir "\" left right
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk keyword.keys.ahk
#                            ^ source.ahk
#                             ^^^^^ source.ahk keyword.keys.ahk
>incrementNumber:=2
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^^ source.ahk keyword.operator.assignment.ahk
#                 ^ source.ahk constant.numeric.ahk
>while (FileExist(pathToCheck)) {
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>pathToCheck:=OutDir "\" left incrementNumber right
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk keyword.keys.ahk
#                            ^ source.ahk
#                             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^^^^^ source.ahk keyword.keys.ahk
>incrementNumber++
#^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk keyword.operator.arithmetic.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return pathToCheck
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>getLeftRight(string, needle)
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global left
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^ source.ahk keyword.keys.ahk
>global right
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk keyword.keys.ahk
>asteriskPos:=InStr(string, "*")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>left:=SubStr(string, 1, asteriskPos-1)
#^^^^ source.ahk keyword.keys.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                    ^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>right:=SubStr(string, asteriskPos+1)
#^^^^^ source.ahk keyword.keys.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                  ^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>ShellContextMenu(folderPath, files, win_hwnd = 0 )
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk keyword.operator.assignment.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk constant.numeric.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if ( !folderPath )
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>if !win_hwnd
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>Gui,SHELL_CONTEXT:New, +hwndwin_hwnd
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^ source.ahk keyword.keys.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk keyword.operator.arithmetic.ahk
#                        ^^^^^^^^^^^^ source.ahk variable.def.ahk
>Gui,Show
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk keyword.other.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>If sPath Is Not Integer
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^ source.ahk keyword.other.ahk
#               ^ source.ahk
#                ^^^^^^^ source.ahk keyword.other.ahk
>DllCall("shell32\SHParseDisplayName", "Wstr", folderPath, "Ptr", 0, "Ptr*", pidl, "Uint", 0, "Uint", 0)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                           ^^^ source.ahk string.quoted.double.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                               ^ source.ahk punctuation.ahk
#                                                                ^ source.ahk
#                                                                 ^ source.ahk constant.numeric.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^^^ source.ahk string.quoted.double.ahk
#                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                          ^ source.ahk punctuation.ahk
#                                                                           ^ source.ahk
#                                                                            ^^^^ source.ahk variable.def.ahk
#                                                                                ^ source.ahk punctuation.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                   ^^^^ source.ahk string.quoted.double.ahk
#                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                        ^ source.ahk punctuation.ahk
#                                                                                         ^ source.ahk
#                                                                                          ^ source.ahk constant.numeric.ahk
#                                                                                           ^ source.ahk punctuation.ahk
#                                                                                            ^ source.ahk
#                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                              ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                    ^ source.ahk
#                                                                                                     ^ source.ahk constant.numeric.ahk
#                                                                                                      ^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>DllCall("shell32\SHGetFolderLocation", "Ptr", 0, "int", folderPath, "Ptr", 0, "Uint", 0, "Ptr*", pidl)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk constant.numeric.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                  ^^^ source.ahk string.quoted.double.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk
#                                                        ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk
#                                                                           ^ source.ahk constant.numeric.ahk
#                                                                            ^ source.ahk punctuation.ahk
#                                                                             ^ source.ahk
#                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                               ^^^^ source.ahk string.quoted.double.ahk
#                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                    ^ source.ahk punctuation.ahk
#                                                                                     ^ source.ahk
#                                                                                      ^ source.ahk constant.numeric.ahk
#                                                                                       ^ source.ahk punctuation.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                          ^^^^ source.ahk string.quoted.double.ahk
#                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                ^ source.ahk
#                                                                                                 ^^^^ source.ahk variable.def.ahk
#                                                                                                     ^ source.ahk punctuation.bracket.ahk
>DllCall("shell32\SHBindToObject","Ptr",0,"Ptr",pidl,"Ptr",0,"Ptr",GUID4String(IID_IShellFolder,"{000214E6-0000-0000-C000-000000000046}"),"Ptr*",pIShellFolder)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk constant.numeric.ahk
#                                                           ^ source.ahk punctuation.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^ source.ahk string.quoted.double.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                             ^ source.ahk punctuation.bracket.ahk
#                                                                              ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                              ^ source.ahk punctuation.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                          ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                                                                ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                                             ^ source.ahk punctuation.bracket.ahk
>
>length:=files.Length()
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk
#              ^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>VarSetCapacity(apidl, length * A_PtrSize, 0)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk
#                             ^ source.ahk keyword.operator.arithmetic.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^ source.ahk constant.language.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>for k, v in files {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>;IShellFolder:ParseDisplayName
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>DllCall(VTable(pIShellFolder,3),"Ptr", pIShellFolder,"Ptr",win_hwnd,"Ptr",0,"Wstr",v,"Uint*",0,"Ptr*",tmpPIDL,"Uint*",0)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                 ^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^^^^^^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^^ source.ahk string.quoted.double.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                         ^ source.ahk punctuation.ahk
#                                                                          ^ source.ahk constant.numeric.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                  ^ source.ahk punctuation.ahk
#                                                                                   ^ source.ahk variable.def.ahk
#                                                                                    ^ source.ahk punctuation.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                      ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                            ^ source.ahk punctuation.ahk
#                                                                                             ^ source.ahk constant.numeric.ahk
#                                                                                              ^ source.ahk punctuation.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                      ^^^^^^^ source.ahk variable.def.ahk
#                                                                                                             ^ source.ahk punctuation.ahk
#                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                               ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                      ^ source.ahk constant.numeric.ahk
#                                                                                                                       ^ source.ahk punctuation.bracket.ahk
>NumPut(tmpPIDL, apidl, (k - 1)*A_PtrSize, "Ptr")
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^ source.ahk
#                            ^ source.ahk constant.numeric.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk keyword.operator.arithmetic.ahk
#                               ^^^^^^^^^ source.ahk constant.language.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                           ^^^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>;IShellFolder->GetUIObjectOf
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>DllCall(VTable(pIShellFolder,10),"Ptr",pIShellFolder,"Ptr",win_hwnd,"Uint",length,"Ptr",&apidl,"Ptr",GUID4String(IID_IContextMenu,"{000214E4-0000-0000-C000-000000000046}"),"UINT*",0,"Ptr*",pIContextMenu)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk punctuation.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^^^^^^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk punctuation.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^^^ source.ahk string.quoted.double.ahk
#                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                          ^ source.ahk punctuation.ahk
#                                                                           ^^^^^^ source.ahk variable.def.ahk
#                                                                                 ^ source.ahk punctuation.ahk
#                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                   ^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk punctuation.ahk
#                                                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                         ^^^^^ source.ahk variable.def.ahk
#                                                                                              ^ source.ahk punctuation.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                ^^^ source.ahk string.quoted.double.ahk
#                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                     ^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                                                                ^ source.ahk punctuation.bracket.ahk
#                                                                                                                 ^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                 ^ source.ahk punctuation.ahk
#                                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                          ^ source.ahk punctuation.bracket.ahk
#                                                                                                                                                                           ^ source.ahk punctuation.ahk
#                                                                                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                             ^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                                                                                                    ^ source.ahk constant.numeric.ahk
#                                                                                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                                                                       ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                                                                            ^ source.ahk punctuation.ahk
#                                                                                                                                                                                             ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                                                                                                          ^ source.ahk punctuation.bracket.ahk
>
>ObjRelease(pIShellFolder)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>CoTaskMemFree(pidl)
#^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>
>hMenu := DllCall("CreatePopupMenu")
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>;IContextMenu->QueryContextMenu
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;http://msdn.microsoft.com/en-us/library/bb776097%28v=VS.85%29.aspx
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>DllCall(VTable(pIContextMenu, 3), "Ptr", pIContextMenu, "Ptr", hMenu, "Uint", 0, "Uint", 3, "Uint", 0x7FFF, "Uint", 0x100) ;CMF_EXTENDEDVERBS
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                         ^^^ source.ahk string.quoted.double.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                             ^ source.ahk punctuation.ahk
#                                                              ^ source.ahk
#                                                               ^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk punctuation.ahk
#                                                                     ^ source.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                       ^^^^ source.ahk string.quoted.double.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                            ^ source.ahk punctuation.ahk
#                                                                             ^ source.ahk
#                                                                              ^ source.ahk constant.numeric.ahk
#                                                                               ^ source.ahk punctuation.ahk
#                                                                                ^ source.ahk
#                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                  ^^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk punctuation.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk constant.numeric.ahk
#                                                                                          ^ source.ahk punctuation.ahk
#                                                                                           ^ source.ahk
#                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                  ^ source.ahk punctuation.ahk
#                                                                                                   ^ source.ahk
#                                                                                                    ^^^^^^ source.ahk constant.numeric.ahk
#                                                                                                          ^ source.ahk punctuation.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                             ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                  ^ source.ahk punctuation.ahk
#                                                                                                                   ^ source.ahk
#                                                                                                                    ^^^^^ source.ahk constant.numeric.ahk
#                                                                                                                         ^ source.ahk punctuation.bracket.ahk
#                                                                                                                          ^ source.ahk comment.line.semicolon.ahk
#                                                                                                                           ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                                                                            ^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; p(hMenu)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ComObjError(0)
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk constant.numeric.ahk
#             ^ source.ahk punctuation.bracket.ahk
>global pIContextMenu2 := ComObjQuery(pIContextMenu, IID_IContextMenu2:="{000214F4-0000-0000-C000-000000000046}")
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^ source.ahk support.function.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^^ source.ahk keyword.operator.assignment.ahk
#                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                               ^ source.ahk punctuation.bracket.ahk
>global pIContextMenu3 := ComObjQuery(pIContextMenu, IID_IContextMenu3:="{BCFCE0A0-EC17-11D0-8D10-00A0C90F2719}")
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^ source.ahk support.function.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^^ source.ahk keyword.operator.assignment.ahk
#                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                               ^ source.ahk punctuation.bracket.ahk
>e := A_LastError ;GetLastError()
#^ source.ahk variable.def.ahk
# ^ source.ahk
#  ^^ source.ahk keyword.operator.assignment.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^ source.ahk constant.language.ahk
#                ^ source.ahk comment.line.semicolon.ahk
#                 ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                  ^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ComObjError(1)
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk constant.numeric.ahk
#             ^ source.ahk punctuation.bracket.ahk
>if (e != 0)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^ source.ahk constant.numeric.ahk
#          ^ source.ahk punctuation.bracket.ahk
>goTo, StopContextMenu
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>Global WPOld:= DllCall("SetWindowLongPtr", "Ptr", win_hwnd, "int",-4, "Ptr",RegisterCallback("WindowProc"),"UPtr")
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^^^^^^^ source.ahk support.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^^^ source.ahk string.quoted.double.ahk
#                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                             ^^^ source.ahk string.quoted.double.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                 ^ source.ahk punctuation.ahk
#                                                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                   ^ source.ahk constant.numeric.ahk
#                                                                    ^ source.ahk punctuation.ahk
#                                                                     ^ source.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                       ^^^ source.ahk string.quoted.double.ahk
#                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^^^^^^^^^^^^^^^^ source.ahk support.function.ahk
#                                                                                            ^ source.ahk punctuation.bracket.ahk
#                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                              ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                         ^ source.ahk punctuation.bracket.ahk
#                                                                                                          ^ source.ahk punctuation.ahk
#                                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                            ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                 ^ source.ahk punctuation.bracket.ahk
>DllCall("GetCursorPos", "int64*", pt)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>; DllCall("InsertMenu", "Ptr", hMenu, "Uint", 0, "Uint", 0x0400|0x800, "Ptr", 2, "Ptr", 0)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; DllCall("InsertMenu", "Ptr", hMenu, "Uint", 0, "Uint", 0x0400|0x002, "Ptr", 1, "Ptr", &sPath)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>idn := DllCall("TrackPopupMenuEx", "Ptr", hMenu, "Uint", 0x0100|0x0001, "int", pt << 32 >> 32, "int", pt >> 32, "Ptr", win_hwnd, "Uint", 0)
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk
#                                          ^^^^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                  ^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^^ source.ahk constant.numeric.ahk
#                                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                ^^^^^^ source.ahk constant.numeric.ahk
#                                                                      ^ source.ahk punctuation.ahk
#                                                                       ^ source.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                         ^^^ source.ahk string.quoted.double.ahk
#                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                             ^ source.ahk punctuation.ahk
#                                                                              ^ source.ahk
#                                                                               ^^ source.ahk variable.def.ahk
#                                                                                 ^ source.ahk
#                                                                                  ^ source.ahk keyword.operator.comparison.ahk
#                                                                                   ^ source.ahk keyword.operator.comparison.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^^ source.ahk constant.numeric.ahk
#                                                                                       ^ source.ahk
#                                                                                        ^ source.ahk keyword.operator.comparison.ahk
#                                                                                         ^ source.ahk keyword.operator.comparison.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^^ source.ahk constant.numeric.ahk
#                                                                                             ^ source.ahk punctuation.ahk
#                                                                                              ^ source.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                ^^^ source.ahk string.quoted.double.ahk
#                                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                    ^ source.ahk punctuation.ahk
#                                                                                                     ^ source.ahk
#                                                                                                      ^^ source.ahk variable.def.ahk
#                                                                                                        ^ source.ahk
#                                                                                                         ^ source.ahk keyword.operator.comparison.ahk
#                                                                                                          ^ source.ahk keyword.operator.comparison.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^^ source.ahk constant.numeric.ahk
#                                                                                                              ^ source.ahk punctuation.ahk
#                                                                                                               ^ source.ahk
#                                                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                 ^^^ source.ahk string.quoted.double.ahk
#                                                                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                     ^ source.ahk punctuation.ahk
#                                                                                                                      ^ source.ahk
#                                                                                                                       ^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                               ^ source.ahk punctuation.ahk
#                                                                                                                                ^ source.ahk
#                                                                                                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                                                  ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                                       ^ source.ahk punctuation.ahk
#                                                                                                                                        ^ source.ahk
#                                                                                                                                         ^ source.ahk constant.numeric.ahk
#                                                                                                                                          ^ source.ahk punctuation.bracket.ahk
>; p(idn)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>; return
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>; Formatter ignores block comments for now, nbd
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>        /*
#^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>        typedef struct _CMINVOKECOMMANDINFOEX {
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            DWORD   cbSize;          0
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            DWORD   fMask;           4
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            HWND    hwnd;            8
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCSTR  lpVerb;          8+A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCSTR  lpParameters;    8+2*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCSTR  lpDirectory;     8+3*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            int     nShow;           8+4*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            DWORD   dwHotKey;        12+4*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            HANDLE  hIcon;           16+4*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCSTR  lpTitle;         16+5*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCWSTR lpVerbW;         16+6*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCWSTR lpParametersW;   16+7*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCWSTR lpDirectoryW;    16+8*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            LPCWSTR lpTitleW;        16+9*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>            POINT   ptInvoke;        16+10*A_PtrSize
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>        } CMINVOKECOMMANDINFOEX, *LPCMINVOKECOMMANDINFOEX;
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>        http://msdn.microsoft.com/en-us/library/bb773217%28v=VS.85%29.aspx
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>        */
#^^^^^^^^^^ source.ahk comment.block.slashstar.ahk
>struct_size := 16+11*A_PtrSize
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk
#               ^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^^ source.ahk constant.numeric.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^^^^^^^^^ source.ahk constant.language.ahk
>VarSetCapacity(pici,struct_size,0)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk constant.numeric.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>NumPut(struct_size,pici,0,"Uint") ;cbSize
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk constant.numeric.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                           ^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk comment.line.semicolon.ahk
#                                  ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                   ^^^^^^ source.ahk comment.line.semicolon.ahk
>NumPut(0x4000|0x20000000|0x00100000,pici,4,"Uint") ;fMask
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^ source.ahk constant.numeric.ahk
#             ^ source.ahk keyword.operator.arithmetic.ahk
#              ^^^^^^^^^^ source.ahk constant.numeric.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^^^^^^^^^^ source.ahk constant.numeric.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^^^^ source.ahk string.quoted.double.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
#                                                  ^ source.ahk comment.line.semicolon.ahk
#                                                   ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                    ^^^^^ source.ahk comment.line.semicolon.ahk
>NumPut(win_hwnd,pici,8,"UPtr") ;hwnd
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk comment.line.semicolon.ahk
#                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                ^^^^ source.ahk comment.line.semicolon.ahk
>NumPut(1,pici,8+4*A_PtrSize,"Uint") ;nShow
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk constant.numeric.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk constant.numeric.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^^^^^^^^^ source.ahk constant.language.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
#                                   ^ source.ahk comment.line.semicolon.ahk
#                                    ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                     ^^^^^ source.ahk comment.line.semicolon.ahk
>NumPut(idn-3,pici,8+A_PtrSize,"UPtr") ;lpVerb
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^^^^^^^^^ source.ahk constant.language.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk comment.line.semicolon.ahk
#                                      ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                       ^^^^^^ source.ahk comment.line.semicolon.ahk
>NumPut(idn-3,pici,16+6*A_PtrSize,"UPtr") ;lpVerbW
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
#           ^ source.ahk constant.numeric.ahk
#            ^ source.ahk punctuation.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^ source.ahk constant.numeric.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^^^^^^^^^ source.ahk constant.language.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk comment.line.semicolon.ahk
#                                         ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                          ^^^^^^^ source.ahk comment.line.semicolon.ahk
>NumPut(pt,pici,16+10*A_PtrSize,"Uptr") ;ptInvoke
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.ahk
#               ^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^^ source.ahk constant.numeric.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^^^^^^^^^ source.ahk constant.language.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk comment.line.semicolon.ahk
#                                       ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                        ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>DllCall(VTable(pIContextMenu, 4), "Ptr", pIContextMenu, "Ptr", &pici) ; InvokeCommand
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^^^ source.ahk entity.name.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.ahk
#                                        ^ source.ahk
#                                         ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                         ^^^ source.ahk string.quoted.double.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                             ^ source.ahk punctuation.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                ^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk punctuation.bracket.ahk
#                                                                     ^ source.ahk comment.line.semicolon.ahk
#                                                                      ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                                       ^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>DllCall("GlobalFree", "Ptr", DllCall("SetWindowLongPtr", "Ptr", win_hwnd, "int", -4, "Ptr", WPOld,"UPtr"))
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^^^ source.ahk support.function.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                          ^^^ source.ahk string.quoted.double.ahk
#                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                              ^ source.ahk punctuation.ahk
#                                                               ^ source.ahk
#                                                                ^^^^^^^^ source.ahk variable.def.ahk
#                                                                        ^ source.ahk punctuation.ahk
#                                                                         ^ source.ahk
#                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                           ^^^ source.ahk string.quoted.double.ahk
#                                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                               ^ source.ahk punctuation.ahk
#                                                                                ^ source.ahk
#                                                                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                  ^ source.ahk constant.numeric.ahk
#                                                                                   ^ source.ahk punctuation.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                      ^^^ source.ahk string.quoted.double.ahk
#                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                          ^ source.ahk punctuation.ahk
#                                                                                           ^ source.ahk
#                                                                                            ^^^^^ source.ahk variable.def.ahk
#                                                                                                 ^ source.ahk punctuation.ahk
#                                                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                   ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                        ^ source.ahk punctuation.bracket.ahk
#                                                                                                         ^ source.ahk punctuation.bracket.ahk
>DllCall("DestroyMenu", "Ptr", hMenu)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^ source.ahk string.quoted.double.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>StopContextMenu:
#^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>ObjRelease(pIContextMenu3)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>ObjRelease(pIContextMenu2)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>ObjRelease(pIContextMenu)
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>pIContextMenu2:=pIContextMenu3:=WPOld:=0
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^^ source.ahk keyword.operator.assignment.ahk
#                                ^^^^^ source.ahk variable.def.ahk
#                                     ^^ source.ahk keyword.operator.assignment.ahk
#                                       ^ source.ahk constant.numeric.ahk
>Gui,SHELL_CONTEXT:Destroy
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>return idn
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>WindowProc(hWnd, nMsg, wParam, lParam)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>Global pIContextMenu2, pIContextMenu3, WPOld
#^^^^^^ source.ahk keyword.other.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^^^^^ source.ahk variable.def.ahk
>If pIContextMenu3
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>{ ;IContextMenu3->HandleMenuMsg2
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk comment.line.semicolon.ahk
#  ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>If !DllCall(VTable(pIContextMenu3, 7), "Ptr", pIContextMenu3, "Uint", nMsg, "Ptr", wParam, "Ptr", lParam, "Ptr*", lResult)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.ahk
#                                                             ^ source.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                               ^^^^ source.ahk string.quoted.double.ahk
#                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                    ^ source.ahk punctuation.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^ source.ahk variable.def.ahk
#                                                                          ^ source.ahk punctuation.ahk
#                                                                           ^ source.ahk
#                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                             ^^^ source.ahk string.quoted.double.ahk
#                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                 ^ source.ahk punctuation.ahk
#                                                                                  ^ source.ahk
#                                                                                   ^^^^^^ source.ahk variable.def.ahk
#                                                                                         ^ source.ahk punctuation.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^ source.ahk variable.def.ahk
#                                                                                                        ^ source.ahk punctuation.ahk
#                                                                                                         ^ source.ahk
#                                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                           ^^^^ source.ahk string.quoted.double.ahk
#                                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                                 ^ source.ahk
#                                                                                                                  ^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                         ^ source.ahk punctuation.bracket.ahk
>Return lResult
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Else If pIContextMenu2
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>{ ;IContextMenu2->HandleMenuMsg
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk comment.line.semicolon.ahk
#  ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>If !DllCall(VTable(pIContextMenu2, 6), "Ptr", pIContextMenu2, "Uint", nMsg, "Ptr", wParam, "Ptr", lParam)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk constant.numeric.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.ahk
#                                                             ^ source.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                               ^^^^ source.ahk string.quoted.double.ahk
#                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                    ^ source.ahk punctuation.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^ source.ahk variable.def.ahk
#                                                                          ^ source.ahk punctuation.ahk
#                                                                           ^ source.ahk
#                                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                             ^^^ source.ahk string.quoted.double.ahk
#                                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                 ^ source.ahk punctuation.ahk
#                                                                                  ^ source.ahk
#                                                                                   ^^^^^^ source.ahk variable.def.ahk
#                                                                                         ^ source.ahk punctuation.ahk
#                                                                                          ^ source.ahk
#                                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                ^ source.ahk punctuation.ahk
#                                                                                                 ^ source.ahk
#                                                                                                  ^^^^^^ source.ahk variable.def.ahk
#                                                                                                        ^ source.ahk punctuation.bracket.ahk
>Return 0
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Return DllCall("user32.dll\CallWindowProcW", "Ptr", WPOld, "Ptr", hWnd, "Uint", nMsg, "Ptr", wParam, "Ptr", lParam)
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^^^ source.ahk string.quoted.double.ahk
#                                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                  ^ source.ahk punctuation.ahk
#                                                   ^ source.ahk
#                                                    ^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.ahk
#                                                          ^ source.ahk
#                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                            ^^^ source.ahk string.quoted.double.ahk
#                                                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^^^^ source.ahk variable.def.ahk
#                                                                      ^ source.ahk punctuation.ahk
#                                                                       ^ source.ahk
#                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                         ^^^^ source.ahk string.quoted.double.ahk
#                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                              ^ source.ahk punctuation.ahk
#                                                                               ^ source.ahk
#                                                                                ^^^^ source.ahk variable.def.ahk
#                                                                                    ^ source.ahk punctuation.ahk
#                                                                                     ^ source.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                       ^^^ source.ahk string.quoted.double.ahk
#                                                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                           ^ source.ahk punctuation.ahk
#                                                                                            ^ source.ahk
#                                                                                             ^^^^^^ source.ahk variable.def.ahk
#                                                                                                   ^ source.ahk punctuation.ahk
#                                                                                                    ^ source.ahk
#                                                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                                      ^^^ source.ahk string.quoted.double.ahk
#                                                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                                          ^ source.ahk punctuation.ahk
#                                                                                                           ^ source.ahk
#                                                                                                            ^^^^^^ source.ahk variable.def.ahk
#                                                                                                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>VTable(ppv, idx)
#^^^^^^ source.ahk entity.name.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>Return NumGet(NumGet(1*ppv)+A_PtrSize*idx)
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk keyword.operator.arithmetic.ahk
#                            ^^^^^^^^^ source.ahk constant.language.ahk
#                                     ^ source.ahk keyword.operator.arithmetic.ahk
#                                      ^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>other_vtable(ptr, n) {
#^^^^^^^^^^^^ source.ahk functionline.ahk entity.name.function.ahk
#            ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#             ^^^ source.ahk functionline.ahk variable.def.ahk
#                ^^ source.ahk functionline.ahk
#                  ^ source.ahk functionline.ahk variable.def.ahk
#                   ^ source.ahk functionline.ahk punctuation.bracket.parenthesis.ahk
#                    ^ source.ahk functionline.ahk
#                     ^ source.ahk functionline.ahk punctuation.bracket.curly.ahk
>return NumGet(NumGet(ptr+0), n*A_PtrSize)
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^^^ source.ahk variable.def.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^ source.ahk variable.def.ahk
#                              ^ source.ahk keyword.operator.arithmetic.ahk
#                               ^^^^^^^^^ source.ahk constant.language.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>GUID4String(ByRef CLSID, String)
#^^^^^^^^^^^ source.ahk entity.name.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>VarSetCapacity(CLSID, 16,0)
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>return DllCall("ole32\CLSIDFromString", "wstr", String, "Ptr", &CLSID) >= 0 ? &CLSID : ""
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                         ^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk punctuation.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                         ^^^ source.ahk string.quoted.double.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                             ^ source.ahk punctuation.ahk
#                                                              ^ source.ahk
#                                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                ^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.bracket.ahk
#                                                                      ^ source.ahk
#                                                                       ^ source.ahk keyword.operator.comparison.ahk
#                                                                        ^ source.ahk keyword.operator.assignment.ahk
#                                                                         ^ source.ahk
#                                                                          ^ source.ahk constant.numeric.ahk
#                                                                           ^ source.ahk
#                                                                            ^ source.ahk punctuation.ahk
#                                                                             ^ source.ahk
#                                                                              ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                               ^^^^^ source.ahk variable.def.ahk
#                                                                                    ^ source.ahk
#                                                                                     ^ source.ahk punctuation.ahk
#                                                                                      ^ source.ahk
#                                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Guid_FromStr(sGuid, ByRef VarOrAddress)
#^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^^^ source.ahk keyword.other.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>if IsByRef(VarOrAddress) && (VarSetCapacity(VarOrAddress) < 16)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk keyword.operator.arithmetic.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^^^^^^^^^^^^^^ source.ahk support.function.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk keyword.operator.comparison.ahk
#                                                           ^ source.ahk
#                                                            ^^ source.ahk constant.numeric.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
>VarSetCapacity(VarOrAddress, 16) ; adjust capacity
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk comment.line.semicolon.ahk
#                                 ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                  ^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>pGuid := IsByRef(VarOrAddress) ? &VarOrAddress : VarOrAddress
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
>if ( DllCall("ole32\CLSIDFromString", "WStr", sGuid, "Ptr", pGuid) < 0 )
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk
#     ^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk
#                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                      ^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^ source.ahk
#                                                            ^^^^^ source.ahk variable.def.ahk
#                                                                 ^ source.ahk punctuation.bracket.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk keyword.operator.comparison.ahk
#                                                                    ^ source.ahk
#                                                                     ^ source.ahk constant.numeric.ahk
#                                                                      ^ source.ahk
#                                                                       ^ source.ahk punctuation.bracket.ahk
>throw Exception("Invalid GUID", -1, sGuid)
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>return pGuid ; return address of GUID struct
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk comment.line.semicolon.ahk
#             ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Guid_ToStr(ByRef VarOrAddress)
#^^^^^^^^^^ source.ahk entity.name.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk
#                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>pGuid := IsByRef(VarOrAddress) ? &VarOrAddress : VarOrAddress
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                  ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^^^^^^ source.ahk variable.def.ahk
>VarSetCapacity(sGuid, 78) ; (38 + 1) * 2
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk comment.line.semicolon.ahk
#                          ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                           ^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>if !DllCall("ole32\StringFromGUID2", "Ptr", pGuid, "Ptr", &sGuid, "Int", 39)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk keyword.operator.arithmetic.ahk
#    ^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^^ source.ahk string.quoted.double.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk
#                                            ^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^ source.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                    ^^^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk punctuation.ahk
#                                                         ^ source.ahk
#                                                          ^ source.ahk keyword.operator.arithmetic.ahk
#                                                           ^^^^^ source.ahk variable.def.ahk
#                                                                ^ source.ahk punctuation.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                   ^^^ source.ahk string.quoted.double.ahk
#                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                       ^ source.ahk punctuation.ahk
#                                                                        ^ source.ahk
#                                                                         ^^ source.ahk constant.numeric.ahk
#                                                                           ^ source.ahk punctuation.bracket.ahk
>throw Exception("Invalid GUID", -1, Format("<at {1:p}>", pGuid))
#^^^^^ source.ahk keyword.control.ahk
#     ^ source.ahk
#      ^^^^^^^^^ source.ahk support.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                 ^ source.ahk constant.numeric.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk
#                                    ^^^^^^ source.ahk support.function.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                       ^ source.ahk punctuation.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^ source.ahk variable.def.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
>return StrGet(&sGuid, "UTF-16")
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^ source.ahk support.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                       ^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>CoTaskMemFree(pv)
#^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>Return DllCall("ole32\CoTaskMemFree", "Ptr", pv)
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^^ source.ahk variable.def.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>FileToClipboard(PathToCopy,Method="copy")
#^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk keyword.operator.assignment.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                   ^^^^ source.ahk string.quoted.double.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>FileCount:=0
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>PathLength:=0
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk constant.numeric.ahk
>FileCount:=PathToCopy.Length()
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>; Count files and total string length
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>for k, v in PathToCopy {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>PathLength+=StrLen(v)
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.arithmetic.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; Loop,Parse,PathToCopy,`n,`r
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; {
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^ source.ahk comment.line.semicolon.ahk
>; PathLength+=StrLen(A_LoopField)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; }
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^ source.ahk comment.line.semicolon.ahk
>
>pid:=DllCall("GetCurrentProcessId","uint")
#^^^ source.ahk variable.def.ahk
#   ^^ source.ahk keyword.operator.assignment.ahk
#     ^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
>hwnd:=WinExist("ahk_pid " . pid)
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^ source.ahk string.quoted.double.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                         ^^^ source.ahk
#                            ^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>; 0x42 = GMEM_MOVEABLE(0x2) | GMEM_ZEROINIT(0x40)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>hPath := DllCall("GlobalAlloc","uint",0x42,"uint",20 + (PathLength + FileCount + 1) * 2,"UPtr")
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                ^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^^^^ source.ahk constant.numeric.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^^^^ source.ahk string.quoted.double.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^^ source.ahk constant.numeric.ahk
#                                                    ^ source.ahk
#                                                     ^ source.ahk keyword.operator.arithmetic.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
#                                                        ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk
#                                                                   ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                    ^ source.ahk
#                                                                     ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                              ^ source.ahk
#                                                                               ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                ^ source.ahk
#                                                                                 ^ source.ahk constant.numeric.ahk
#                                                                                  ^ source.ahk punctuation.bracket.ahk
#                                                                                   ^ source.ahk
#                                                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                     ^ source.ahk
#                                                                                      ^ source.ahk constant.numeric.ahk
#                                                                                       ^ source.ahk punctuation.ahk
#                                                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                                         ^^^^ source.ahk string.quoted.double.ahk
#                                                                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                              ^ source.ahk punctuation.bracket.ahk
>pPath := DllCall("GlobalLock","UPtr",hPath)
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk
#         ^^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.ahk
#                                     ^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.bracket.ahk
>NumPut(20,pPath+0),pPath += 16 ; DROPFILES.pFiles = offset of file list
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^ source.ahk constant.numeric.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.arithmetic.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^ source.ahk keyword.operator.arithmetic.ahk
#                          ^ source.ahk keyword.operator.assignment.ahk
#                           ^ source.ahk
#                            ^^ source.ahk constant.numeric.ahk
#                              ^ source.ahk comment.line.semicolon.ahk
#                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>NumPut(1,pPath+0),pPath += 4 ; fWide = 0 -->ANSI,fWide = 1 -->Unicode
#^^^^^^ source.ahk support.function.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^ source.ahk constant.numeric.ahk
#        ^ source.ahk punctuation.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk keyword.operator.arithmetic.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^ source.ahk keyword.operator.assignment.ahk
#                          ^ source.ahk
#                           ^ source.ahk constant.numeric.ahk
#                            ^ source.ahk comment.line.semicolon.ahk
#                             ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Offset:=0
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^ source.ahk constant.numeric.ahk
>for k, v in PathToCopy {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>offset += StrPut(v,pPath+offset,StrLen(v)+1,"UTF-16") * 2
#^^^^^^ source.ahk variable.def.ahk
#      ^ source.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk support.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^^^^^^ source.ahk support.function.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
#                                       ^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk keyword.operator.arithmetic.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                             ^^^^^^ source.ahk string.quoted.double.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                    ^ source.ahk punctuation.bracket.ahk
#                                                     ^ source.ahk
#                                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                                       ^ source.ahk
#                                                        ^ source.ahk constant.numeric.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; Loop,Parse,PathToCopy,`n,`r ; Rows are delimited by linefeeds (`r`n).
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; offset += StrPut(A_LoopField,pPath+offset,StrLen(A_LoopField)+1,"UTF-16") * 2
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
>DllCall("GlobalUnlock","UPtr",hPath)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>DllCall("OpenClipboard","UPtr",hwnd)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>DllCall("EmptyClipboard")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>DllCall("SetClipboardData","uint",0xF,"UPtr",hPath) ; 0xF = CF_HDROP
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^^^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk punctuation.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^^^^^ source.ahk variable.def.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
#                                                   ^ source.ahk comment.line.semicolon.ahk
#                                                    ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                     ^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>
>; Write Preferred DropEffect structure to clipboard to switch between copy/cut operations
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; 0x42 = GMEM_MOVEABLE(0x2) | GMEM_ZEROINIT(0x40)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>mem := DllCall("GlobalAlloc","uint",0x42,"uint",4,"UPtr")
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^^^^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk punctuation.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                          ^^^^ source.ahk string.quoted.double.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                               ^ source.ahk punctuation.ahk
#                                                ^ source.ahk constant.numeric.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                   ^^^^ source.ahk string.quoted.double.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>str := DllCall("GlobalLock","UPtr",mem)
#^^^ source.ahk variable.def.ahk
#   ^ source.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.bracket.ahk
>
>if (Method="copy")
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#            ^^^^ source.ahk string.quoted.double.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>DllCall("RtlFillMemory","UPtr",str,"uint",1,"UChar",0x05)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                             ^^^^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^^^^ source.ahk constant.numeric.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>else if (Method="cut")
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                 ^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>DllCall("RtlFillMemory","UPtr",str,"uint",1,"UChar",0x02)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.ahk
#                                          ^ source.ahk constant.numeric.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                             ^^^^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^^^^ source.ahk constant.numeric.ahk
#                                                        ^ source.ahk punctuation.bracket.ahk
>else
#^^^^ source.ahk keyword.control.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>DllCall("CloseClipboard")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>DllCall("GlobalUnlock","UPtr",mem)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>
>cfFormat := DllCall("RegisterClipboardFormat","Str","Preferred DropEffect")
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk
#            ^^^^^^^ source.ahk support.function.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^ source.ahk string.quoted.double.ahk
#                                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                   ^ source.ahk punctuation.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                     ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                          ^ source.ahk punctuation.bracket.ahk
>DllCall("SetClipboardData","uint",cfFormat,"UPtr",mem)
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                            ^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^^^^ source.ahk string.quoted.double.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>DllCall("CloseClipboard")
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>sortArrayByArray(toSort, sortWith, reverse=false, key=false)
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk keyword.operator.assignment.ahk
#                                           ^^^^^ source.ahk constant.language.ahk
#                                                ^ source.ahk punctuation.ahk
#                                                 ^ source.ahk
#                                                  ^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk keyword.operator.assignment.ahk
#                                                      ^^^^^ source.ahk constant.language.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>global
#^^^^^^ source.ahk keyword.other.ahk
>array:=[]
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk punctuation.bracket.ahk
>finalAr:=[]
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk punctuation.bracket.ahk
>if (key) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^ source.ahk variable.def.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.bracket.ahk
>count:=0
#^^^^^ source.ahk keyword.other.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk constant.numeric.ahk
>for k, v in sortWith {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>count++
#^^^^^ source.ahk keyword.other.ahk
#     ^ source.ahk keyword.operator.arithmetic.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
>array.Push({1:v[key], 2:count})
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^ source.ahk constant.numeric.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.bracket.ahk
#                ^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^^^^^ source.ahk keyword.other.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>array:=ObjectSort(array, 1,, reverse)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^ source.ahk
#                             ^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>for k in array {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.other.ahk
#        ^ source.ahk
#         ^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>finalAr.Push(toSort[array[k][2]])
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.bracket.ahk
#                    ^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>for k in toSort {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^ source.ahk keyword.other.ahk
#        ^ source.ahk
#         ^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>array.Push([toSort[k],sortWith[k]])
#^^^^^ source.ahk variable.def.ahk
#     ^ source.ahk
#      ^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^ source.ahk punctuation.bracket.ahk
#            ^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk variable.def.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>array:=ObjectSort(array, 2,,reverse)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^ source.ahk entity.name.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk punctuation.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>for k, v in array {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>finalAr.Push(v[1])
#^^^^^^^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return finalAr
#^^^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>;end of functions
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;hotkeys
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>#if winactive(thisUniqueWintitle)
#^^^ source.ahk keyword.control.directives.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk keyword.control.directives.ahk string.parameter.directives.ahk
>^e::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>; revealFileInExplorer(EcurrentDir%whichSide%, getSelectedNames())
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>path:=getSelectedPaths()[1]
#^^^^ source.ahk variable.def.ahk
#    ^^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk constant.numeric.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (path) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^ source.ahk variable.def.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
>Run, % "explorer.exe /select,""" path """"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk
#                                 ^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>Run, % "explorer.exe """ EcurrentDir%whichSide% """"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#        ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                     ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                 ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>#d::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="changePath") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>focused:="flistView"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>GuiControl, Focus, vlistView%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
>ComObjCreate("Shell.Application").ToggleDesktop()
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>submitAndRenderDir()
#^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>ComObjCreate("Shell.Application").ToggleDesktop()
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
#                                 ^ source.ahk
#                                  ^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>$^+left::
#^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#       ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="changePath" or focused="searchCurrentDirEdit") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.other.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk keyword.operator.assignment.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
>send, ^+{left}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^ source.ahk keyword.keys.ahk
#             ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>gui, main:default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>whichSide:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>GuiControl, Focus, vlistView1 ;bad code
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk comment.line.semicolon.ahk
#                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                               ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ControlFocus,, ahk_id %ListviewHwnd1%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk keyword.other.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
>GuiControl, +Background%BGColorOfSelectedPane%, vlistView1
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl, +BackgroundWhite, vlistView2
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^^^^^^ source.ahk variable.def.ahk
>EcurrentDir1:=EcurrentDir2
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^^ source.ahk variable.def.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>$^+right::
#^^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#        ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="changePath") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>send, ^+{right}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^ source.ahk keyword.operator.arithmetic.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^ source.ahk keyword.keys.ahk
#              ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>gui, main:default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>whichSide:=2
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>GuiControl, Focus, vlistView2 ;bad code
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk comment.line.semicolon.ahk
#                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                               ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ControlFocus,, ahk_id %ListviewHwnd2%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk keyword.other.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
>GuiControl, +Background%BGColorOfSelectedPane%, vlistView2
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl, +BackgroundWhite, vlistView1
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^^^^^^ source.ahk variable.def.ahk
>EcurrentDir2:=EcurrentDir1
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^^ source.ahk variable.def.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>left:: ;always uses keyboard hook
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
#      ^ source.ahk comment.line.semicolon.ahk
#       ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#        ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>^left::
#^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#     ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="changePath" or focused="searchCurrentDirEdit") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.other.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk keyword.operator.assignment.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
>thisHotkey:=StrReplace(A_ThisHotkey, "left", "{left}")
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^ source.ahk support.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                              ^^^^^^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
>send, %thisHotkey%
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>^1::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>selectPanel1:
#^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>gui, main:default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>whichSide:=1
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>GuiControl, Focus, vlistView1 ;bad code
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk comment.line.semicolon.ahk
#                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                               ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ControlFocus,, ahk_id %ListviewHwnd1%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk keyword.other.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
>GuiControl, +Background%BGColorOfSelectedPane%, vlistView1
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl, +BackgroundWhite, vlistView2
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^^^^^^ source.ahk variable.def.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>right:: ;always uses keyboard hook
#^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#     ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
#       ^ source.ahk comment.line.semicolon.ahk
#        ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#         ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>^right::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="changePath" or focused="searchCurrentDirEdit") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.other.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk keyword.operator.assignment.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
>thisHotkey:=StrReplace(A_ThisHotkey, "Right", "{Right}")
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^^^^^^ source.ahk support.function.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^^^^^^^^^^^^ source.ahk constant.language.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                      ^^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>send, %thisHotkey%
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.definition.variable.percent.ahk
#       ^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>^2::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>selectPanel2:
#^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>gui, main:default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>whichSide:=2
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^ source.ahk constant.numeric.ahk
>Gui, Show,NA,% EcurrentDir%whichSide% " - ahk_explorer"
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^^ source.ahk keyword.other.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>GuiControl, Focus, vlistView2 ;bad code
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^ source.ahk variable.def.ahk
#                             ^ source.ahk comment.line.semicolon.ahk
#                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                               ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ControlFocus,, ahk_id %ListviewHwnd2%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^ source.ahk keyword.other.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                       ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
>GuiControl, +Background%BGColorOfSelectedPane%, vlistView2
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                        ^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^ source.ahk variable.def.ahk
>GuiControl, +BackgroundWhite, vlistView1
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^ source.ahk keyword.operator.arithmetic.ahk
#             ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^^^^^^ source.ahk variable.def.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>$RAlt::
#^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#     ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="searchCurrentDirEdit" or focused="flistView" or focused="listViewInSearch") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk
#                                   ^^ source.ahk keyword.other.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk keyword.operator.assignment.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk
#                                                          ^^ source.ahk keyword.other.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk keyword.operator.assignment.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk punctuation.bracket.ahk
>Run,"C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe", % EcurrentDir%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                               ^ source.ahk punctuation.ahk
#                                                                ^ source.ahk
#                                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                  ^ source.ahk
#                                                                   ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$RCtrl::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="searchCurrentDirEdit" or focused="flistView" or focused="listViewInSearch") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk
#                                   ^^ source.ahk keyword.other.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk keyword.operator.assignment.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk
#                                                          ^^ source.ahk keyword.other.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk keyword.operator.assignment.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk punctuation.bracket.ahk
>Run,"%ComSpec%", % EcurrentDir%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#     ^^^^^^^^^ source.ahk string.quoted.double.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^ source.ahk
#                   ^^^^^^^^^^^ source.ahk variable.def.ahk
#                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>$RShift::
#^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#       ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="searchCurrentDirEdit" or focused="flistView" or focused="listViewInSearch") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk
#                                   ^^ source.ahk keyword.other.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk keyword.operator.assignment.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk
#                                                          ^^ source.ahk keyword.other.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk keyword.operator.assignment.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk punctuation.bracket.ahk
>toRun:= """" vscodePath """ """ EcurrentDir%whichSide% """"
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#            ^ source.ahk
#             ^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                           ^ source.ahk string.quoted.double.ahk
#                            ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk
#                                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                        ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>run, %toRun%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>send, +\
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^^ source.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$\::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>if (focused="searchCurrentDirEdit" or focused="flistView" or focused="listViewInSearch") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                  ^ source.ahk
#                                   ^^ source.ahk keyword.other.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk keyword.operator.assignment.ahk
#                                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                               ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk
#                                                          ^^ source.ahk keyword.other.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk keyword.operator.assignment.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk punctuation.bracket.ahk
>selectedPaths:=getSelectedPaths()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>if (selectedPaths.Length()) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^^^^^ source.ahk support.function.ahk
#                        ^ source.ahk punctuation.bracket.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>for k,v in selectedPaths {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk variable.def.ahk
#       ^ source.ahk
#        ^^ source.ahk keyword.other.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>; toRun:= """" vscodePath """ """ v """"
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>toRun:= """" A_AhkPath """ /CP65001 ""lib\vscode_runner.ahk"" """ v """"
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk
#        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#         ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#            ^ source.ahk
#             ^^^^^^^^^ source.ahk constant.language.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                          ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                      ^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                           ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                             ^ source.ahk string.quoted.double.ahk
#                                                              ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                 ^ source.ahk
#                                                                  ^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk
#                                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                     ^^ source.ahk string.quoted.double.ahk constant.character.escape.ahk
#                                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>;  d(toRun)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>run, %toRun%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>send, \
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^^^ source.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>; $`::
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^ source.ahk comment.line.semicolon.ahk
>p(watching1,watching2)
#^ source.ahk entity.name.function.ahk
# ^ source.ahk punctuation.bracket.ahk
#  ^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.bracket.ahk
>Return
#^^^^^^ source.ahk keyword.control.ahk
>
>$^+r::
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>namesToMultiRename:=getSelectedNames()
#^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^^ source.ahk keyword.operator.assignment.ahk
#                    ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>multiRenameDir:=EcurrentDir%whichSide%
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk punctuation.definition.variable.percent.ahk
>multiRenamelength:=namesToMultiRename.Length()
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk
#                                      ^^^^^^ source.ahk support.function.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
>Gui, multiRenameGui:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^^^^^^^ source.ahk keyword.other.ahk
>; Gui,Font, s10, Segoe UI
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>Gui,Font, s10, Consolas
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^ source.ahk variable.def.ahk
>
>Gui, Add, Edit, w400 vmultiRenameTheName
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>Gui, Add, Edit, x+5 w300 vmultiRenameStartingNums
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk
#                ^ source.ahk variable.def.ahk
#                 ^ source.ahk keyword.operator.arithmetic.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk
#                    ^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>
>Gui, Add, Button, h30 w200 y+5 x+-705 ggmultiRenamePreview,preview
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk
#                           ^ source.ahk variable.def.ahk
#                            ^ source.ahk keyword.operator.arithmetic.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk
#                               ^ source.ahk variable.def.ahk
#                                ^ source.ahk keyword.operator.arithmetic.ahk
#                                 ^ source.ahk keyword.operator.arithmetic.ahk
#                                  ^^^ source.ahk constant.numeric.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.ahk
#                                                           ^^^^^^^ source.ahk variable.def.ahk
>Gui, Add, Button, h30 w200 x+5 ggmultiRenameApply,apply
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^ source.ahk keyword.other.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk
#                           ^ source.ahk variable.def.ahk
#                            ^ source.ahk keyword.operator.arithmetic.ahk
#                             ^ source.ahk constant.numeric.ahk
#                              ^ source.ahk
#                               ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.ahk
#                                                  ^^^^^ source.ahk variable.def.ahk
>
>Gui, Add, ListBox, r%multiRenamelength% w500 y+5 vvmultiRenameTargets x+-405 , % array_ToVerticleBarString(selectedNames)
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk
#                                        ^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk variable.def.ahk
#                                              ^ source.ahk keyword.operator.arithmetic.ahk
#                                               ^ source.ahk constant.numeric.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk
#                                                                      ^ source.ahk variable.def.ahk
#                                                                       ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                        ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                         ^^^ source.ahk constant.numeric.ahk
#                                                                            ^ source.ahk
#                                                                             ^ source.ahk punctuation.ahk
#                                                                              ^ source.ahk
#                                                                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                ^ source.ahk
#                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                                                                                          ^ source.ahk punctuation.bracket.ahk
#                                                                                                           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                                        ^ source.ahk punctuation.bracket.ahk
>Gui, Add, ListBox, r%multiRenamelength% w500 x+5 vvmultiRenamePreview,
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^ source.ahk keyword.other.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk punctuation.definition.variable.percent.ahk
#                                       ^ source.ahk
#                                        ^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^ source.ahk variable.def.ahk
#                                              ^ source.ahk keyword.operator.arithmetic.ahk
#                                               ^ source.ahk constant.numeric.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.ahk
>Gui, show,,multiRenameGui
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk keyword.other.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk punctuation.ahk
#           ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$^r::
#^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#   ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>$esc::
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>stopSearching()
#^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$^n::
#^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#   ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>$^+n::
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, createFolder:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>
>creatingNewFolder:=true
#^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^^ source.ahk keyword.operator.assignment.ahk
#                   ^^^^ source.ahk constant.language.ahk
>dontSearch:=true
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^ source.ahk constant.language.ahk
>newFolderPath:=findNextDirNameNumberIteration(EcurrentDir%whichSide% "\New Folder *")
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                    ^ source.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                    ^ source.ahk punctuation.bracket.ahk
>SplitPath, newFolderPath, newFolderName
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>strLen:=StrLen(newFolderName)
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>if (SubStr(newFolderName, 0)=" " and strLen > 1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk constant.numeric.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk keyword.operator.assignment.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk
#                                 ^^^ source.ahk keyword.other.ahk
#                                    ^ source.ahk
#                                     ^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk
#                                            ^ source.ahk keyword.operator.comparison.ahk
#                                             ^ source.ahk
#                                              ^ source.ahk constant.numeric.ahk
#                                               ^ source.ahk punctuation.bracket.ahk
#                                                ^ source.ahk
#                                                 ^ source.ahk punctuation.bracket.ahk
>newFolderName:=SubStr(newFolderName, 1, strLen-1)
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^ source.ahk support.function.ahk
#                     ^ source.ahk punctuation.bracket.ahk
#                      ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk constant.numeric.ahk
#                                      ^ source.ahk punctuation.ahk
#                                       ^ source.ahk
#                                        ^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk keyword.operator.arithmetic.ahk
#                                               ^ source.ahk constant.numeric.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (!notFirstTimeCreatingFolder) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
>notFirstTimeCreatingFolder:=true
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^^ source.ahk keyword.operator.assignment.ahk
#                            ^^^^ source.ahk constant.language.ahk
>Gui, createFolder: Font, s10, Segoe UI
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^^^ source.ahk variable.def.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk
#                                    ^^ source.ahk variable.def.ahk
>;Segoe UI
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^ source.ahk comment.line.semicolon.ahk
>gui, createFolder: add, text,, Folder Name: ; Save this control's position and start a new section.
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk keyword.other.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk punctuation.ahk
#                              ^ source.ahk
#                               ^^^^^^ source.ahk variable.def.ahk
#                                     ^ source.ahk
#                                      ^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk punctuation.ahk
#                                           ^ source.ahk comment.line.semicolon.ahk
#                                            ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>gui, createFolder: add, edit, w250 vcreateFolderName hwndfolderCreationHwnd, %newFolderName%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.ahk
#                             ^ source.ahk
#                              ^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^ source.ahk
#                                                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                              ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
>gui, createFolder: add, button, Default w125 x11 vcreate gcreateLabel,Create Folder`n{Enter}
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^^^ source.ahk keyword.other.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^^^^ source.ahk keyword.other.ahk
#                                       ^ source.ahk
#                                        ^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk
#                                             ^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk
#                                                 ^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk
#                                                         ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                     ^ source.ahk punctuation.ahk
#                                                                      ^^^^^^ source.ahk variable.def.ahk
#                                                                            ^ source.ahk
#                                                                             ^^^^^^ source.ahk variable.def.ahk
#                                                                                   ^ source.ahk punctuation.ahk
#                                                                                    ^ source.ahk variable.def.ahk
#                                                                                     ^ source.ahk punctuation.bracket.ahk
#                                                                                      ^^^^^ source.ahk keyword.keys.ahk
#                                                                                           ^ source.ahk punctuation.bracket.ahk
>gui, createFolder: add, button, w125 x+2 vcreateAndOpen gcreateAndOpenLabel,Create and Open`n{Shift + Enter}
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^ source.ahk keyword.other.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^^^^^^ source.ahk keyword.other.ahk
#                              ^ source.ahk punctuation.ahk
#                               ^ source.ahk
#                                ^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk variable.def.ahk
#                                      ^ source.ahk keyword.operator.arithmetic.ahk
#                                       ^ source.ahk constant.numeric.ahk
#                                        ^ source.ahk
#                                         ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                       ^ source.ahk
#                                                        ^^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                           ^ source.ahk punctuation.ahk
#                                                                            ^^^^^^ source.ahk variable.def.ahk
#                                                                                  ^ source.ahk
#                                                                                   ^^^ source.ahk keyword.other.ahk
#                                                                                      ^ source.ahk
#                                                                                       ^^^^ source.ahk variable.def.ahk
#                                                                                           ^ source.ahk punctuation.ahk
#                                                                                            ^ source.ahk variable.def.ahk
#                                                                                             ^ source.ahk punctuation.bracket.ahk
#                                                                                              ^^^^^ source.ahk keyword.keys.ahk
#                                                                                                   ^ source.ahk
#                                                                                                    ^ source.ahk keyword.operator.arithmetic.ahk
#                                                                                                     ^ source.ahk
#                                                                                                      ^^^^^ source.ahk keyword.keys.ahk
#                                                                                                           ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>; GuiControl, text, createFolderName, %newFolderName%
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ControlSetText,, %newFolderName%, ahk_id %folderCreationHwnd%
#^^^^^^^^^^^^^^ source.ahk support.function.ahk
#              ^ source.ahk punctuation.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk
#                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                  ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk punctuation.ahk
#                                 ^ source.ahk
#                                  ^^^^^^ source.ahk keyword.other.ahk
#                                        ^ source.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                            ^ source.ahk punctuation.definition.variable.percent.ahk
>SendMessage, 0xB1, 0, -1,, % "ahk_id " folderCreationHwnd
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk
#                      ^ source.ahk keyword.operator.arithmetic.ahk
#                       ^ source.ahk constant.numeric.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk
#                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                            ^ source.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                              ^^^^^^^ source.ahk string.quoted.double.ahk
#                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                      ^ source.ahk
#                                       ^^^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>gui, createFolder: show,, create_folder
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^^^^ source.ahk keyword.other.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^^^^^^^^^^^^^ source.ahk variable.def.ahk
>dontSearch:=false
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^ source.ahk constant.language.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>^s::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>selectedNames:=getSelectedNames()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>for notUsed, name in selectedNames {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk keyword.other.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>Run, "%spekPath%" "%name%", % EcurrentDir%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#      ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                 ^ source.ahk
#                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                   ^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^ source.ahk
#                              ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>!h::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>hashFiles("sha256")
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#           ^^^^^^ source.ahk string.quoted.double.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                  ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>^h::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>hashFiles("md5")
#^^^^^^^^^ source.ahk entity.name.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#           ^^^ source.ahk string.quoted.double.ahk
#              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#               ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>^+e::
#^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#   ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>selectedNames:=getSelectedNames()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>for notUsed, name in selectedNames {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk
#                  ^^ source.ahk keyword.other.ahk
#                    ^ source.ahk
#                     ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
>SplitPath, name,,,, OutNameNoExt
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^^^^ source.ahk variable.def.ahk
#               ^ source.ahk punctuation.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^^^ source.ahk variable.def.ahk
>FileRecycle, % EcurrentDir%whichSide% "\" OutNameNoExt ".exe"
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk punctuation.definition.variable.percent.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                     ^ source.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                       ^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk
#                                          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                        ^^^^ source.ahk string.quoted.double.ahk
#                                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>Run, "%Ahk2ExePath%" /in "%name%" /bin "%Ahk2ExePath%\..\Unicode 32-bit.bin", % EcurrentDir%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#      ^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                    ^ source.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^^ source.ahk keyword.other.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk
#                                  ^ source.ahk keyword.operator.arithmetic.ahk
#                                   ^^^ source.ahk variable.def.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                            ^ source.ahk punctuation.ahk
#                                                                             ^ source.ahk
#                                                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                               ^ source.ahk
#                                                                                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>!c::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>copySelectedNames:
#^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>dontSearch:=true
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^ source.ahk constant.language.ahk
>selectedNames:=getSelectedNames()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>finalStr=
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
>length:=selectedNames.Length()
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>for k, v in selectedNames {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (k=length) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>finalStr.=v
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>finalStr.=v "`n"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^ source.ahk variable.def.ahk
#           ^ source.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^ source.ahk string.quoted.double.ahk
#               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>clipboard:=finalStr
#^^^^^^^^^ source.ahk constant.language.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
>dontSearch:=false
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^ source.ahk constant.language.ahk
>
>#Persistent
#^^^^^^^^^^^ source.ahk keyword.control.directives.ahk
>ToolTip, % length
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk variable.def.ahk
>SetTimer, RemoveToolTip,-1000
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^^^^ source.ahk constant.numeric.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>copySelectedPaths:
#^^^^^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>^+c::
#^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#   ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>dontSearch:=true
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^ source.ahk constant.language.ahk
>selectedNames:=getSelectedNames()
#^^^^^^^^^^^^^ source.ahk variable.def.ahk
#             ^^ source.ahk keyword.operator.assignment.ahk
#               ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>finalStr=
#^^^^^^^^ source.ahk variable.def.ahk
#        ^ source.ahk keyword.operator.assignment.ahk
>length:=selectedNames.Length()
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk
#                      ^^^^^^ source.ahk support.function.ahk
#                            ^ source.ahk punctuation.bracket.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>for k, v in selectedNames {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (k=length) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk keyword.operator.assignment.ahk
#      ^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk punctuation.bracket.ahk
#             ^ source.ahk
#              ^ source.ahk punctuation.bracket.ahk
>finalStr.=EcurrentDir%whichSide% "\" v
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>finalStr.=EcurrentDir%whichSide% "\" v "`n"
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.definition.variable.percent.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk variable.def.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                        ^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>clipboard:=finalStr
#^^^^^^^^^ source.ahk constant.language.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
>dontSearch:=false
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^^ source.ahk keyword.operator.assignment.ahk
#            ^^^^^ source.ahk constant.language.ahk
>
>#Persistent
#^^^^^^^^^^^ source.ahk keyword.control.directives.ahk
>ToolTip, % length
#^^^^^^^ source.ahk support.function.ahk
#       ^ source.ahk punctuation.ahk
#        ^ source.ahk
#         ^ source.ahk punctuation.definition.variable.percent.ahk
#          ^ source.ahk
#           ^^^^^^ source.ahk variable.def.ahk
>SetTimer, RemoveToolTip,-1000
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^^^^ source.ahk constant.numeric.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$!left::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>focusDirOnBack:=true
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^ source.ahk constant.language.ahk
>goToParentDir:
#^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>SplitPath, % EcurrentDir%whichSide%,OutDirName, ParentDir1
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.ahk
#          ^ source.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^ source.ahk
#             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^ source.ahk punctuation.ahk
#                                    ^^^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.ahk
#                                               ^ source.ahk
#                                                ^^^^^^^^^^ source.ahk variable.def.ahk
>if (focusDirOnBack) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.bracket.ahk
>focusDirOnBack:=false
#^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#              ^^ source.ahk keyword.operator.assignment.ahk
#                ^^^^^ source.ahk constant.language.ahk
>toFocus:=OutDirName
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^^^^^^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>EcurrentDir%whichSide%:=ParentDir1
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^ source.ahk variable.def.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$!right::
#^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#       ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>undoHistory%whichSide%.Push(EcurrentDir%whichSide%)
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^ source.ahk support.function.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                  ^ source.ahk punctuation.bracket.ahk
>EcurrentDir%whichSide%:=dirHistory%whichSide%[dirHistory%whichSide%.Length()]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                   ^^^^^^^^^ source.ahk variable.def.ahk
#                                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                  ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                   ^ source.ahk
#                                                                    ^^^^^^ source.ahk support.function.ahk
#                                                                          ^ source.ahk punctuation.bracket.ahk
#                                                                           ^ source.ahk punctuation.bracket.ahk
#                                                                            ^ source.ahk punctuation.bracket.ahk
>dirHistory%whichSide%.RemoveAt(dirHistory%whichSide%.Length())
#^^^^^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.definition.variable.percent.ahk
#           ^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                     ^ source.ahk
#                      ^^^^^^^^ source.ahk support.function.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^^^^^^^^^^ source.ahk variable.def.ahk
#                                         ^ source.ahk punctuation.definition.variable.percent.ahk
#                                          ^^^^^^^^^ source.ahk variable.def.ahk
#                                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                    ^ source.ahk
#                                                     ^^^^^^ source.ahk support.function.ahk
#                                                           ^ source.ahk punctuation.bracket.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
>cannotDirHistory%whichSide%:=true
#^^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^^ source.ahk keyword.operator.assignment.ahk
#                             ^^^^ source.ahk constant.language.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$!up::
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>EcurrentDir%whichSide%:=undoHistory%whichSide%[undoHistory%whichSide%.Length()]
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^^ source.ahk keyword.operator.assignment.ahk
#                        ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                           ^^^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                                     ^ source.ahk
#                                                                      ^^^^^^ source.ahk support.function.ahk
#                                                                            ^ source.ahk punctuation.bracket.ahk
#                                                                             ^ source.ahk punctuation.bracket.ahk
#                                                                              ^ source.ahk punctuation.bracket.ahk
>undoHistory%whichSide%.RemoveAt(undoHistory%whichSide%.Length())
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.definition.variable.percent.ahk
#            ^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                      ^ source.ahk
#                       ^^^^^^^^ source.ahk support.function.ahk
#                               ^ source.ahk punctuation.bracket.ahk
#                                ^^^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
#                                            ^^^^^^^^^ source.ahk variable.def.ahk
#                                                     ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                      ^ source.ahk
#                                                       ^^^^^^ source.ahk support.function.ahk
#                                                             ^ source.ahk punctuation.bracket.ahk
#                                                              ^ source.ahk punctuation.bracket.ahk
#                                                               ^ source.ahk punctuation.bracket.ahk
>renderCurrentDir()
#^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                ^ source.ahk punctuation.bracket.ahk
#                 ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>^l::
#^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#  ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>/::
#^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
# ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>; p(434)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^ source.ahk comment.line.semicolon.ahk
>focused:="changePath"
#^^^^^^^ source.ahk variable.def.ahk
#       ^^ source.ahk keyword.operator.assignment.ahk
#         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#          ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
>ControlFocus,, % "ahk_id " Edithwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.definition.variable.percent.ahk
#                                    ^^^^^^^^^ source.ahk variable.def.ahk
#                                             ^ source.ahk punctuation.definition.variable.percent.ahk
>SendMessage, 177, 0, -1,, % "ahk_id " Edithwnd%whichSide%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^ source.ahk constant.numeric.ahk
#                ^ source.ahk punctuation.ahk
#                 ^ source.ahk
#                  ^ source.ahk constant.numeric.ahk
#                   ^ source.ahk punctuation.ahk
#                    ^ source.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk
#                                      ^^^^^^^^ source.ahk variable.def.ahk
#                                              ^ source.ahk punctuation.definition.variable.percent.ahk
#                                               ^^^^^^^^^ source.ahk variable.def.ahk
#                                                        ^ source.ahk punctuation.definition.variable.percent.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$backspace::
#^^^^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#          ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>if (focused="changePath" or focused="renaming") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.other.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk keyword.operator.assignment.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^^^^^^ source.ahk string.quoted.double.ahk
#                                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                              ^ source.ahk punctuation.bracket.ahk
#                                               ^ source.ahk
#                                                ^ source.ahk punctuation.bracket.ahk
>send, {backspace}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^ source.ahk keyword.keys.ahk
#                ^ source.ahk punctuation.bracket.ahk
>} else if (focused="listViewInSearch") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
#                                      ^ source.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
>if (searchString%whichSide%="") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk keyword.operator.assignment.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>stopSearching()
#^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>GuiControl, focus,vcurrentDirEdit%whichSide%
#^^^^^^^^^^ source.ahk support.function.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^ source.ahk keyword.other.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                 ^ source.ahk punctuation.definition.variable.percent.ahk
#                                  ^^^^^^^^^ source.ahk variable.def.ahk
#                                           ^ source.ahk punctuation.definition.variable.percent.ahk
>SendMessage, 0xB1, -2, -1,, % "ahk_id " Edithwnd%whichSide%
#^^^^^^^^^^^ source.ahk support.function.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^^^^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk constant.numeric.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk keyword.operator.arithmetic.ahk
#                        ^ source.ahk constant.numeric.ahk
#                         ^ source.ahk punctuation.ahk
#                          ^ source.ahk punctuation.ahk
#                           ^ source.ahk
#                            ^ source.ahk punctuation.definition.variable.percent.ahk
#                             ^ source.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                               ^^^^^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk
#                                        ^^^^^^^^ source.ahk variable.def.ahk
#                                                ^ source.ahk punctuation.definition.variable.percent.ahk
#                                                 ^^^^^^^^^ source.ahk variable.def.ahk
#                                                          ^ source.ahk punctuation.definition.variable.percent.ahk
>send, {backspace}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^ source.ahk keyword.keys.ahk
#                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (focused="searchCurrentDirEdit") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>if (searchString%whichSide%="") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                ^ source.ahk punctuation.definition.variable.percent.ahk
#                 ^^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.definition.variable.percent.ahk
#                           ^ source.ahk keyword.operator.assignment.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>stopSearching()
#^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>send, {backspace}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^^^^^ source.ahk keyword.keys.ahk
#                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else if (focused="flistView") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                              ^ source.ahk punctuation.bracket.ahk
#                               ^ source.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>gosub,goToParentDir
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^ source.ahk golabel.ahk
#      ^^^^^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>$^+up::
#^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#     ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>gosub, shiftUp
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>gosub, shiftUp
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>shiftUp:
#^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>$+up::
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>focusRow:=LV_GetNext(0, "F")
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>
>before:=LV_GetNext(focusRow - 2)
#^^^^^^ source.ahk variable.def.ahk
#      ^^ source.ahk keyword.operator.assignment.ahk
#        ^^^^^^^^^^ source.ahk support.function.ahk
#                  ^ source.ahk punctuation.bracket.ahk
#                   ^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk
#                            ^ source.ahk keyword.operator.arithmetic.ahk
#                             ^ source.ahk
#                              ^ source.ahk constant.numeric.ahk
#                               ^ source.ahk punctuation.bracket.ahk
>if (focusRow - 1 > 0) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^ source.ahk keyword.operator.arithmetic.ahk
#              ^ source.ahk
#               ^ source.ahk constant.numeric.ahk
#                ^ source.ahk
#                 ^ source.ahk keyword.operator.comparison.ahk
#                  ^ source.ahk
#                   ^ source.ahk constant.numeric.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk
#                      ^ source.ahk punctuation.bracket.ahk
>if (before=focusRow - 1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^ source.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>LV_Modify(focusRow, "-Select -Focus")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>LV_Modify(focusRow - 1,"+Select +Focus Vis")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>LV_Modify(focusRow - 1,"+Select +Focus Vis")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>numberOfRows:=LV_GetCount()
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>LV_Modify(numberOfRows,"+Select +Focus Vis")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>$^up::
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>selectedRow:=LV_GetNext()
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>rowToSelect:=selectedRow-1
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk keyword.operator.arithmetic.ahk
#                         ^ source.ahk constant.numeric.ahk
>
>if (rowToSelect>0) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.comparison.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>LV_Modify(rowToSelect, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk comment.line.semicolon.ahk
#                                             ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                              ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>$up::
#^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#   ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>selectedRow:=LV_GetNext()
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>numberOfRows:=LV_GetCount()
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>loop % numberOfRows
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>LV_Modify(A_Index, "-Select -Focus") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                  ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk comment.line.semicolon.ahk
#                                     ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                      ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>if (selectedRow<2) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.comparison.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>LV_Modify(numberOfRows, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                            ^ source.ahk punctuation.bracket.ahk
#                                             ^ source.ahk comment.line.semicolon.ahk
#                                              ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                               ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>LV_Modify(selectedRow-1, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk comment.line.semicolon.ahk
#                                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>$+home::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="changePath" or focused="searchCurrentDirEdit") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.other.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk keyword.operator.assignment.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
>send, +{home}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^^ source.ahk keyword.keys.ahk
#            ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>selectedRow:=LV_GetNext()
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>loop % selectedRow - 1 {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>LV_Modify(A_Index, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^ source.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk comment.line.semicolon.ahk
#                                         ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                          ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>$+end::
#^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#     ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="changePath" or focused="searchCurrentDirEdit") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                        ^ source.ahk
#                         ^^ source.ahk keyword.other.ahk
#                           ^ source.ahk
#                            ^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk keyword.operator.assignment.ahk
#                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                     ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                          ^ source.ahk punctuation.bracket.ahk
#                                                           ^ source.ahk
#                                                            ^ source.ahk punctuation.bracket.ahk
>send, +{end}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk keyword.operator.arithmetic.ahk
#       ^ source.ahk punctuation.bracket.ahk
#        ^^^ source.ahk keyword.keys.ahk
#           ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>selectedRow:=LV_GetNext()
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>numberOfRows:=LV_GetCount()
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>loop % numberOfRows - selectedRow
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.definition.variable.percent.ahk
#      ^ source.ahk
#       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^ source.ahk keyword.operator.arithmetic.ahk
#                     ^ source.ahk
#                      ^^^^^^^^^^^ source.ahk variable.def.ahk
>{
#^ source.ahk punctuation.bracket.ahk
>LV_Modify(A_Index + selectedRow, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^ source.ahk constant.language.ahk
#                 ^ source.ahk
#                  ^ source.ahk keyword.operator.arithmetic.ahk
#                   ^ source.ahk
#                    ^^^^^^^^^^^ source.ahk variable.def.ahk
#                               ^ source.ahk punctuation.ahk
#                                ^ source.ahk
#                                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                  ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
#                                                      ^ source.ahk comment.line.semicolon.ahk
#                                                       ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                        ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>selectCurrent:
#^^^^^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>selectedRow:=LV_GetNext(,"F")
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^^^^^^ source.ahk support.function.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk punctuation.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^ source.ahk string.quoted.double.ahk
#                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                            ^ source.ahk punctuation.bracket.ahk
>LV_Modify(selectedRow, "-Select -Focus") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                       ^ source.ahk punctuation.bracket.ahk
#                                        ^ source.ahk comment.line.semicolon.ahk
#                                         ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                          ^^^^^^^ source.ahk comment.line.semicolon.ahk
>LV_Modify(selectedRow, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk punctuation.ahk
#                      ^ source.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
#                                            ^ source.ahk comment.line.semicolon.ahk
#                                             ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                              ^^^^^^^ source.ahk comment.line.semicolon.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$^+down::
#^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#       ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>gosub, shiftDown
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>gosub, shiftDown
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>shiftDown:
#^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>$+down::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>focusRow:=LV_GetNext(0, "F")
#^^^^^^^^ source.ahk variable.def.ahk
#        ^^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^^^ source.ahk support.function.ahk
#                    ^ source.ahk punctuation.bracket.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk
#                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                         ^ source.ahk string.quoted.double.ahk
#                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                           ^ source.ahk punctuation.bracket.ahk
>after:=LV_GetNext(focusRow)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^^^^ source.ahk variable.def.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>numberOfRows:=LV_GetCount()
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>
>if (focusRow < numberOfRows) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^ source.ahk keyword.operator.comparison.ahk
#              ^ source.ahk
#               ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                           ^ source.ahk punctuation.bracket.ahk
#                            ^ source.ahk
#                             ^ source.ahk punctuation.bracket.ahk
>if (after=focusRow + 1) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^ source.ahk variable.def.ahk
#         ^ source.ahk keyword.operator.assignment.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.bracket.ahk
#                       ^ source.ahk
#                        ^ source.ahk punctuation.bracket.ahk
>LV_Modify(focusRow, "-Select -Focus")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk punctuation.ahk
#                   ^ source.ahk
#                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                     ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                    ^ source.ahk punctuation.bracket.ahk
>LV_Modify(focusRow + 1,"+Select +Focus Vis")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>LV_Modify(focusRow + 1,"+Select +Focus Vis")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk
#                   ^ source.ahk keyword.operator.arithmetic.ahk
#                    ^ source.ahk
#                     ^ source.ahk constant.numeric.ahk
#                      ^ source.ahk punctuation.ahk
#                       ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                        ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                          ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>LV_Modify(1,"+Select +Focus Vis")
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk constant.numeric.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                               ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>$^down::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>selectedRow:=0
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk constant.numeric.ahk
>index:=0
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk constant.numeric.ahk
>loop {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>index:=LV_GetNext(index)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>if (!index)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>selectedRow:=index
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^ source.ahk variable.def.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>LV_Modify(selectedRow+1, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk comment.line.semicolon.ahk
#                                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                ^^^^^^^ source.ahk comment.line.semicolon.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$down::
#^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#     ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>SetTimer, downLabel ,-0
#^^^^^^^^ source.ahk support.function.ahk
#        ^ source.ahk punctuation.ahk
#         ^ source.ahk
#          ^^^^^^^^^ source.ahk variable.def.ahk
#                   ^ source.ahk
#                    ^ source.ahk punctuation.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^ source.ahk constant.numeric.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>downLabel:
#^^^^^^^^^^ source.ahk labelline.ahk entity.name.function.label.ahk
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>Gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>
>selectedRows:=[]
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk punctuation.bracket.ahk
>selectedRow:=0
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^ source.ahk constant.numeric.ahk
>index:=0
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^ source.ahk constant.numeric.ahk
>loop {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>index:=LV_GetNext(index)
#^^^^^ source.ahk variable.def.ahk
#     ^^ source.ahk keyword.operator.assignment.ahk
#       ^^^^^^^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>if (!index)
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.bracket.ahk
>break
#^^^^^ source.ahk keyword.control.ahk
>selectedRow:=index
#^^^^^^^^^^^ source.ahk variable.def.ahk
#           ^^ source.ahk keyword.operator.assignment.ahk
#             ^^^^^ source.ahk variable.def.ahk
>selectedRows.Push(index)
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^ source.ahk
#             ^^^^ source.ahk support.function.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^^^^^ source.ahk variable.def.ahk
#                       ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>for k, v in selectedRows {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^ source.ahk variable.def.ahk
#     ^ source.ahk punctuation.ahk
#      ^ source.ahk
#       ^ source.ahk variable.def.ahk
#        ^ source.ahk
#         ^^ source.ahk keyword.other.ahk
#           ^ source.ahk
#            ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>LV_Modify(v, "-Select -Focus") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk variable.def.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                             ^ source.ahk punctuation.bracket.ahk
#                              ^ source.ahk comment.line.semicolon.ahk
#                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>numberOfRows:=LV_GetCount()
#^^^^^^^^^^^^ source.ahk variable.def.ahk
#            ^^ source.ahk keyword.operator.assignment.ahk
#              ^^^^^^^^^^^ source.ahk support.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^ source.ahk punctuation.bracket.ahk
>if (selectedRow=0) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^^^ source.ahk variable.def.ahk
#               ^ source.ahk keyword.operator.assignment.ahk
#                ^ source.ahk constant.numeric.ahk
#                 ^ source.ahk punctuation.bracket.ahk
#                  ^ source.ahk
#                   ^ source.ahk punctuation.bracket.ahk
>LV_Modify(1, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk constant.numeric.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk comment.line.semicolon.ahk
#                                   ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                    ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else if (selectedRow < numberOfRows) {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^^ source.ahk keyword.control.ahk
#       ^ source.ahk
#        ^ source.ahk punctuation.bracket.ahk
#         ^^^^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^ source.ahk keyword.operator.comparison.ahk
#                      ^ source.ahk
#                       ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                   ^ source.ahk punctuation.bracket.ahk
#                                    ^ source.ahk
#                                     ^ source.ahk punctuation.bracket.ahk
>LV_Modify(selectedRow+1, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^^^^^^^^^^^ source.ahk variable.def.ahk
#                     ^ source.ahk keyword.operator.arithmetic.ahk
#                      ^ source.ahk constant.numeric.ahk
#                       ^ source.ahk punctuation.ahk
#                        ^ source.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                          ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                             ^ source.ahk punctuation.bracket.ahk
#                                              ^ source.ahk comment.line.semicolon.ahk
#                                               ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                                ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>else {
#^^^^ source.ahk keyword.control.ahk
#    ^ source.ahk
#     ^ source.ahk punctuation.bracket.ahk
>LV_Modify(1, "+Select +Focus Vis") ; select
#^^^^^^^^^ source.ahk support.function.ahk
#         ^ source.ahk punctuation.bracket.ahk
#          ^ source.ahk constant.numeric.ahk
#           ^ source.ahk punctuation.ahk
#            ^ source.ahk
#             ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#              ^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                 ^ source.ahk punctuation.bracket.ahk
#                                  ^ source.ahk comment.line.semicolon.ahk
#                                   ^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
#                                    ^^^^^^^ source.ahk comment.line.semicolon.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>;how to fix $enter not working ? why ?
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>;sign out and sign in fixed it
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>$enter::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>if (!canRename) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^ source.ahk keyword.operator.arithmetic.ahk
#     ^^^^^^^^^ source.ahk variable.def.ahk
#              ^ source.ahk punctuation.bracket.ahk
#               ^ source.ahk
#                ^ source.ahk punctuation.bracket.ahk
>if (focused="flistView" or focused="searchCurrentDirEdit" or focused="listViewInSearch") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk
#                        ^^ source.ahk keyword.other.ahk
#                          ^ source.ahk
#                           ^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk keyword.operator.assignment.ahk
#                                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                    ^^^^^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                        ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                         ^ source.ahk
#                                                          ^^ source.ahk keyword.other.ahk
#                                                            ^ source.ahk
#                                                             ^^^^^^^ source.ahk variable.def.ahk
#                                                                    ^ source.ahk keyword.operator.assignment.ahk
#                                                                     ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                                                      ^^^^^^^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                                                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                                                       ^ source.ahk punctuation.bracket.ahk
#                                                                                        ^ source.ahk
#                                                                                         ^ source.ahk punctuation.bracket.ahk
>stopSizes:=false
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^ source.ahk constant.language.ahk
>gui, ListView, vlistView%whichSide%
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^ source.ahk keyword.other.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^^^^^^^^^ source.ahk variable.def.ahk
#                        ^ source.ahk punctuation.definition.variable.percent.ahk
#                         ^^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.definition.variable.percent.ahk
>for unused, fullPath in getSelectedPaths() {
#^^^ source.ahk keyword.control.ahk
#   ^ source.ahk
#    ^^^^^^ source.ahk variable.def.ahk
#          ^ source.ahk punctuation.ahk
#           ^ source.ahk
#            ^^^^^^^^ source.ahk variable.def.ahk
#                    ^ source.ahk
#                     ^^ source.ahk keyword.other.ahk
#                       ^ source.ahk
#                        ^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                                        ^ source.ahk punctuation.bracket.ahk
#                                         ^ source.ahk punctuation.bracket.ahk
#                                          ^ source.ahk
#                                           ^ source.ahk punctuation.bracket.ahk
>doubleClickedFolderOrFile(fullPath)
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk entity.name.function.ahk
#                         ^ source.ahk punctuation.bracket.ahk
#                          ^^^^^^^^ source.ahk variable.def.ahk
#                                  ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>; row:=LV_GetNext("")
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; doubleClickedNormal(row)
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>} else if (focused="changePath" or focused="renaming") {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^^ source.ahk keyword.control.ahk
#         ^ source.ahk
#          ^ source.ahk punctuation.bracket.ahk
#           ^^^^^^^ source.ahk variable.def.ahk
#                  ^ source.ahk keyword.operator.assignment.ahk
#                   ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                    ^^^^^^^^^^ source.ahk string.quoted.double.ahk
#                              ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                               ^ source.ahk
#                                ^^ source.ahk keyword.other.ahk
#                                  ^ source.ahk
#                                   ^^^^^^^ source.ahk variable.def.ahk
#                                          ^ source.ahk keyword.operator.assignment.ahk
#                                           ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                                            ^^^^^^^^ source.ahk string.quoted.double.ahk
#                                                    ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                                                     ^ source.ahk punctuation.bracket.ahk
#                                                      ^ source.ahk
#                                                       ^ source.ahk punctuation.bracket.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>} else {
#^ source.ahk punctuation.bracket.ahk
# ^ source.ahk
#  ^^^^ source.ahk keyword.control.ahk
#      ^ source.ahk
#       ^ source.ahk punctuation.bracket.ahk
>send, {enter}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^ source.ahk keyword.keys.ahk
#            ^ source.ahk punctuation.bracket.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>#if winactive("renamingWinTitle ahk_class AutoHotkeyGUI")
#^^^ source.ahk keyword.control.directives.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk keyword.control.directives.ahk string.parameter.directives.ahk
>
>$esc::
#^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#    ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>if (focused="flistView") {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^ source.ahk variable.def.ahk
#           ^ source.ahk keyword.operator.assignment.ahk
#            ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#             ^^^^^^^^^ source.ahk string.quoted.double.ahk
#                      ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                       ^ source.ahk punctuation.bracket.ahk
#                        ^ source.ahk
#                         ^ source.ahk punctuation.bracket.ahk
>if (canRename) {
#^^ source.ahk keyword.control.ahk
#  ^ source.ahk
#   ^ source.ahk punctuation.bracket.ahk
#    ^^^^^^^^^ source.ahk variable.def.ahk
#             ^ source.ahk punctuation.bracket.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.bracket.ahk
>canRename:=false
#^^^^^^^^^ source.ahk variable.def.ahk
#         ^^ source.ahk keyword.operator.assignment.ahk
#           ^^^^^ source.ahk constant.language.ahk
>; gui, renameSimple:Default
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>; gui, submit
#^ source.ahk comment.line.semicolon.ahk punctuation.definition.comment.ahk
# ^^^^^^^^^^^^ source.ahk comment.line.semicolon.ahk
>gui, main:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^ source.ahk variable.def.ahk
#         ^ source.ahk punctuation.ahk
#          ^^^^^^^ source.ahk keyword.other.ahk
>ControlFocus,, % "ahk_id " ListviewHwnd%whichSide%
#^^^^^^^^^^^^ source.ahk support.function.ahk
#            ^ source.ahk punctuation.ahk
#             ^ source.ahk punctuation.ahk
#              ^ source.ahk
#               ^ source.ahk punctuation.definition.variable.percent.ahk
#                ^ source.ahk
#                 ^ source.ahk string.quoted.double.ahk punctuation.definition.string.begin.ahk
#                  ^^^^^^^ source.ahk string.quoted.double.ahk
#                         ^ source.ahk string.quoted.double.ahk punctuation.definition.string.end.ahk
#                          ^ source.ahk
#                           ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                                       ^ source.ahk punctuation.definition.variable.percent.ahk
#                                        ^^^^^^^^^ source.ahk variable.def.ahk
#                                                 ^ source.ahk punctuation.definition.variable.percent.ahk
>
>gui, renameSimple:Default
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^^^^^^ source.ahk variable.def.ahk
#                 ^ source.ahk punctuation.ahk
#                  ^^^^^^^ source.ahk keyword.other.ahk
>gui, destroy
#^^^ source.ahk support.function.ahk
#   ^ source.ahk punctuation.ahk
#    ^ source.ahk
#     ^^^^^^^ source.ahk keyword.other.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>}
#^ source.ahk punctuation.bracket.ahk
>send, {enter}
#^^^^ source.ahk support.function.ahk
#    ^ source.ahk punctuation.ahk
#     ^ source.ahk
#      ^ source.ahk punctuation.bracket.ahk
#       ^^^^^ source.ahk keyword.keys.ahk
#            ^ source.ahk punctuation.bracket.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>#if winactive("create_folder ahk_class AutoHotkeyGUI")
#^^^ source.ahk keyword.control.directives.ahk
#   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.ahk keyword.control.directives.ahk string.parameter.directives.ahk
>
>$enter::
#^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#      ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gosub, createLabel
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>
>return
#^^^^^^ source.ahk keyword.control.ahk
>
>$+enter::
#^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#       ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>$^+enter::
#^^^^^^^^ source.ahk hotkeyline.ahk entity.name.function.label.ahk
#        ^^ source.ahk hotkeyline.ahk punctuation.definition.equals.colon
>Gosub, createAndOpenLabel
#^^^^^ source.ahk golabel.ahk support.function.ahk
#     ^^ source.ahk golabel.ahk
#       ^^^^^^^^^^^^^^^^^^ source.ahk golabel.ahk entity.name.function.label.ahk
>return
#^^^^^^ source.ahk keyword.control.ahk
>